# Change the Landowners' stance on serfdom
effect_reorder_landowner_traits = {
	ig:ig_landowners = {
		if		= { limit = { has_ideology = ideology:ideology_republican_paternalistic }	remove_ideology = ideology_republican_paternalistic		add_ideology = ideology_republican_paternalistic	}
		else_if	= { limit = { has_ideology = ideology:ideology_junker_paternalistic }		remove_ideology = ideology_junker_paternalistic			add_ideology = ideology_junker_paternalistic		}
		else_if	= { limit = { has_ideology = ideology:ideology_papal_paternalistic }		remove_ideology = ideology_papal_paternalistic			add_ideology = ideology_papal_paternalistic			}
		else_if	= { limit = { has_ideology = ideology:ideology_scholar_paternalistic }		remove_ideology = ideology_scholar_paternalistic		add_ideology = ideology_scholar_paternalistic		}
		if		= { limit = { has_ideology = ideology:ideology_stratocratic }				remove_ideology = ideology_stratocratic					add_ideology = ideology_stratocratic				}
		else_if	= { limit = { has_ideology = ideology:ideology_stratocratic_modern }		remove_ideology = ideology_stratocratic_modern			add_ideology = ideology_stratocratic_modern			}
		if		= { limit = { has_ideology = ideology:ideology_patriarchal }				remove_ideology = ideology_patriarchal					add_ideology = ideology_patriarchal					}
		else_if	= { limit = { has_ideology = ideology:ideology_patriarchal_suffrage }		remove_ideology = ideology_patriarchal_suffrage			add_ideology = ideology_patriarchal_suffrage		}
		if		= { limit = { has_ideology = ideology:ideology_loyalist }					remove_ideology = ideology_loyalist						add_ideology = ideology_loyalist					}
		if		= { limit = { has_ideology = ideology:ideology_pious }						remove_ideology = ideology_pious						add_ideology = ideology_pious						}
		if		= { limit = { has_ideology = ideology:ideology_pro_slavery }				remove_ideology = ideology_pro_slavery					add_ideology = ideology_pro_slavery					}
	}
}
effect_modern_stratocratic = {
	if = {
		limit = { any_interest_group = { has_ideology = ideology:ideology_stratocratic } }
		custom_tooltip = {
			text = modern_stratocratic_tt
			every_interest_group = {
				limit = { has_ideology = ideology:ideology_stratocratic }
				remove_ideology = ideology_stratocratic
				add_ideology = ideology_stratocratic_modern
			}
		}
		hidden_effect = { effect_reorder_landowner_traits = yes }
	}
}
effect_colonialist_industrialists = {
	remove_ideology	= ideology_laissez_faire
	add_ideology	= ideology_colonialist
}
effect_reorder_industrialists_traits = {
	ig:ig_landowners = {
		if		= { limit = { has_ideology = ideology:ideology_laissez_faire	}	remove_ideology = ideology_laissez_faire	add_ideology = ideology_laissez_faire	}
		else_if	= { limit = { has_ideology = ideology:ideology_colonialist		}	remove_ideology = ideology_colonialist		add_ideology = ideology_colonialist		}
		if		= { limit = { has_ideology = ideology:ideology_plutocratic		}	remove_ideology = ideology_plutocratic		add_ideology = ideology_plutocratic		}
		else_if	= { limit = { has_ideology = ideology:ideology_enclavist		}	remove_ideology = ideology_enclavist		add_ideology = ideology_enclavist		}
		if		= { limit = { has_ideology = ideology:ideology_individualist	}	remove_ideology = ideology_individualist	add_ideology = ideology_individualist	}
		else_if	= { limit = { has_ideology = ideology:ideology_malthusian		}	remove_ideology = ideology_malthusian		add_ideology = ideology_malthusian		}
	}
}
effect_loans_setup = {
	if	= { limit	= { NOT = { has_variable = loans_var } }		set_variable = { name = loans_var		value = 0 } }
	if	= { limit	= { NOT = { has_variable = temp_subtract } }	set_variable = { name = temp_subtract	value = 0 } }
	effect_loans_update = yes
}
effect_loans_update = {
	set_variable = {	# Sure you could do this more elegantly, but what's done is done.
		name = display_loans_var
		value = {
			value		= var:loans_var
			multiply	= 1000000	# 1M
		}
	}
	set_variable = {
		name = temp_subtract
		value = {
			value		= var:loans_var
			multiply	=-1000000	#-1M
		}
	}
}
# Choo-Choo motherf*cker
effect_calc_transportation_delta = {	# Thx to Pzixel
	hidden_effect = {
		remove_variable = transportation_delta
		remove_variable = transportation_balance_right
		remove_variable = transportation_balance_mid
		if = {
			limit = { sg:transportation = { state_goods_delta < 0 } }
			set_variable = { name = transportation_delta			value =-1000000 }
			set_variable = { name = transportation_balance_right	value =       0 }
			while = {		# use binary search to find the amount at which state_goods_delta is 0
				count = 21	# log2(1000000) + 1
				set_variable = {
					name = transportation_balance_mid
					value = {
						add = {
							value = var:transportation_delta
							add = var:transportation_balance_right
							divide = 2
						}
					}
				}
				if = {
					limit = { sg:transportation = { state_goods_delta > PREV.var:transportation_balance_mid } }
					set_variable = { name = transportation_delta value = var:transportation_balance_mid }
				}
				else = { set_variable = { name = transportation_balance_right value = var:transportation_balance_mid } }
			}
			# here transportation_delta holds the exact value of state_goods_delta (up to integer precision)
		}
	}
}
effect_calc_railways = {
	if = {
		limit = { has_technology_researched = railways }
		every_scope_state = {
			remove_variable = missing_railways
			remove_variable = infra_per_railroad
			remove_variable = transportation_per_railroad
			remove_variable = missing_railways_infra
			remove_variable = missing_railways_transport
			remove_variable = must_destroy_railway
			effect_calc_transportation_delta = yes
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_railway } } }
				hidden_effect = { create_building = { building = building_railway level = 1 } }
				set_variable = must_destroy_railway
			}
			else = { set_variable = { name = must_destroy_railway value = no } }
			set_variable = {
				name = missing_railways_infra
				value = {
					add = {
						value = state_infrastructure_balance
						multiply = -1
						add = infra_per_railroad
						subtract = 0.5										# add infra_per_railroad - 0.5 to ensure ceiling at divison
						divide = infra_per_railroad
					}
					round = yes
					min = 0
				}
			}
			if = {
				limit = { var:transportation_delta < 0 }
				set_variable = {
					name = missing_railways_transport
					value = {
						add = {
							value = var:transportation_delta
							multiply = -1
							add = transportation_per_railroad
							subtract = 0.5								# add transportation_per_railroad - 0.5 to ensure ceiling at divison
							divide = transportation_per_railroad
						}
						round = yes
						min = 0
					}
				}
			}
			else = { set_variable = { name = missing_railways_transport value = 0 } }
			set_variable = {
				name = missing_railways
				value = {
					add = { value	= var:missing_railways_infra }
					add = {
						value		= var:missing_railways_transport
						subtract	= var:missing_railways_infra
						min = 0
					}
					if = { limit = { b:building_railway = { is_under_construction = yes } } subtract = 1 }
					if = {
						limit = { any_scope_building = { is_building_type = building_railway occupancy < 0.95 occupancy > 0 } }
						multiply = 0
					}
					round = yes
					min = 0
					if = { limit = { var:must_destroy_railway = yes } min = 1 }	# Every state needs a railway
				}
			}
			hidden_effect = { if = { limit = { var:must_destroy_railway = yes } remove_building = building_railway } }
		}
	}
}
effect_build_railways = {
	effect_calc_railways = yes
	show_as_tooltip = {
		every_scope_state = {
			limit = { var:missing_railways > 0 }
			while = {
				count = var:missing_railways
				start_building_construction = building_railway
			}
		}
	}
	hidden_effect = {
		while = {	# Striped
			limit = { any_scope_state = { var:missing_railways > 0 } }
			every_scope_state = {
				limit = { var:missing_railways > 0 }
				start_building_construction = building_railway
				change_variable = { name = missing_railways subtract = 1 }
			}
		}
	}
}
effect_build_railways_private = {
	effect_calc_railways = yes
	show_as_tooltip = {
		every_scope_state = {
			limit = { var:missing_railways > 0 }
			while = {
				count = var:missing_railways
				start_privately_funded_building_construction = building_railway
			}
		}
	}
	hidden_effect = {
		while = {	# Striped
			limit = { any_scope_state = { var:missing_railways > 0 } }
			every_scope_state = {
				limit = { var:missing_railways > 0 }
				start_privately_funded_building_construction = building_railway
				change_variable = { name = missing_railways subtract = 1 }
			}
		}
	}
}
effect_calc_ports = {	# Todo: Rewrite to ONLY use ports instead of infres ports
	every_scope_state = {
		remove_variable = missing_ports
		remove_variable = planned_convoys
		remove_variable = must_destroy_port
		remove_variable = must_destroy_infres_port
		remove_variable = convoys_per_inf_port
	}
	remove_variable = missing_convoys	# Used to be a country var
	remove_variable = missing_inf_ports	# Used to be a country var
	every_scope_state = {
		limit = { is_coastal = yes }
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_port } } }
			hidden_effect = { create_building = { building = building_port level = 1 } }
			set_variable = must_destroy_port
		}
		else = { set_variable = { name = must_destroy_port value = no } }
		set_variable = {
			name = missing_ports
			value = {
				add				= modifier:state_building_port_max_level_add
				subtract		= b:building_port.level
				if = { limit	= { b:building_port = { is_under_construction = yes } } subtract = 1 }
				min = 0
			}
		}
		set_variable = {
			name = planned_convoys
			value = {
				value			= var:missing_ports
				multiply		= convoys_per_port
				min = 0
			}
		}
		if = { limit = { var:must_destroy_port = yes } hidden_effect = { remove_building = building_port } }
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_infres_port } } }
			hidden_effect = { create_building = { building = building_infres_port level = 1 } }
			set_variable = must_destroy_infres_port
		}
		else = { set_variable = { name = must_destroy_infres_port value = no } }
	}
	set_variable = { name = missing_convoys		value = max_convoys_required }
	random_scope_state = { limit = { has_building = building_infres_port } save_scope_as = infres_port_state }
	set_variable = {
		name = missing_inf_ports
		value = {
			value	= max_convoys_required
			divide	= scope:infres_port_state.convoys_per_inf_port
			round = yes
		}
	}
	every_scope_state = {
		limit = { var:missing_ports > 0 }
		OWNER = {
			change_variable = { name = missing_inf_ports	subtract = PREV.var:missing_ports }
			change_variable = { name = missing_convoys		subtract = PREV.var:planned_convoys }
		}
	}
	if = { limit = { var:missing_convoys < 0 } set_variable = { name = missing_convoys value = 0 } }	# Removing it would cause a memory leak
	every_scope_state = { limit = { var:must_destroy_infres_port = yes } hidden_effect = { remove_building = building_infres_port } }
}
effect_build_ports = {
	effect_calc_ports = yes
	if = {
		limit = { any_scope_state = { var:missing_ports > 0 } }
		show_as_tooltip = {
			every_scope_state = {
				limit = { var:missing_ports > 0 }
				while = {
					count = var:missing_ports
					start_building_construction = building_port
				}
			}
		}
		hidden_effect = {
			while = {	# Striped
				limit = { any_scope_state = { var:missing_ports > 0 } }
				every_scope_state = {
					limit = { var:missing_ports > 0 }
					start_building_construction = building_port
					change_variable = { name = missing_ports subtract = 1 }
				}
			}
		}
	}
	if = {
		limit = { var:missing_convoys > 0 }
		custom_tooltip = effect_build_infes_ports.tt
		hidden_effect = {
			while = {	# Striped
				limit = { var:missing_convoys > 0 }
				every_scope_state = {
					limit = { is_coastal = yes has_building = building_infres_port }
					start_building_construction = building_infres_port
					OWNER = { change_variable = { name = missing_convoys subtract = PREV.convoys_per_inf_port } }
				}
			}
		}
	}
}
effect_calc_admins = {
	if = {
		limit = { has_technology_researched = tech_bureaucracy }
		every_scope_state = {
			remove_variable = missing_admins
			remove_variable = must_destroy_admin
			remove_variable = tax_capacity_per_building
			remove_variable = bureacracy_per_admin
			remove_variable = missing_bureacracy
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_government_administration } } }
				hidden_effect = { create_building = { building = building_government_administration level = 1 } }
				set_variable = must_destroy_admin
			}
			else = { set_variable = { name = must_destroy_admin value = no } }
			if = {
				limit = { trigger_incorporated_or_incorporating = yes } # tax_capacity_balance < 0	# Removed - Prevents Bureacracy top-off otherwise
				set_variable = {
					name = missing_admins
					value = {
						add = {
							value = tax_capacity_balance
							multiply = -1
							add = tax_capacity_per_building
							subtract = 1 # add tax_capacity_per_building - 1 to make division round up
							divide = tax_capacity_per_building
						}
						if = { limit = { b:building_government_administration = { is_under_construction = yes } } subtract = 1 }
						round = yes
						min = 0
						if = { limit = { var:must_destroy_admin = yes } min = 1 }	# Every inc. state needs a building_government_administration
					}
				}
			}
			if = {
				limit = {
					OR = {
						is_capital = yes
						any_scope_building = { is_building_type = building_skyscraper }
						# any_scope_building = { is_building_type = building_white_house }	# Removed	- Effect is now country-wide
						OWNER = { has_law = law_type:law_elected_bureaucrats }
					}
				}
				set_variable = {
					name = missing_bur_admins
					value = {
						add = {
							value = OWNER.bureaucracy
							multiply = -1
							add = bureacracy_per_admin
							subtract = 1						# add bureacracy_per_admin - 1 to make division round up
							divide = bureacracy_per_admin
						}
						if = { limit = { b:building_government_administration = { is_under_construction = yes } } subtract = 1 }
						round = yes
						min = 0
					}
				}
			}
			hidden_effect = { if = { limit = { var:must_destroy_admin = yes } remove_building = building_government_administration } }
		}
		set_variable = {
			name = missing_bureacracy
			value = {
				add = { value = bureaucracy multiply = -1 }
				round = yes
				min = 0
			}
		}
	}
}
effect_make_admins = {
	effect_calc_admins = yes
	show_as_tooltip = {
		every_scope_state = {
			limit = { var:missing_admins > 0 }
			while = {
				count = var:missing_admins
				start_building_construction = building_government_administration
			}
		}
		if = {
			limit = { var:missing_bureacracy > 0 }
			every_scope_state = {
				limit = { trigger_bureacracy_admin_state = yes }
				while = {
					count = var:missing_bur_admins
					start_building_construction = building_government_administration
				}
			}
		}
	}
	hidden_effect = {
		while = {	# Striped
			limit = { any_scope_state = { var:missing_admins > 0 } }
			every_scope_state = {
				limit = { var:missing_admins > 0 }
				start_building_construction = building_government_administration
				change_variable = { name = missing_admins subtract = 1 }
				OWNER = { change_variable = { name = missing_bureacracy subtract = PREV.bureacracy_per_admin } }
			}
		}
		while = {	# Striped
			limit = { var:missing_bureacracy > 0 }
			every_scope_state = {
				limit = { trigger_bureacracy_admin_state = yes }
				start_building_construction = building_government_administration
				OWNER = { change_variable = { name = missing_bureacracy subtract = PREV.bureacracy_per_admin } }
			}
		}
	}
}
# Spicy Lightning
effect_calc_electricity_delta = {	# Thx to Pzixel
	hidden_effect = {
		remove_variable = electricity_delta
		remove_variable = electricity_balance_right
		remove_variable = electricity_balance_mid
		if = {
			limit = { sg:electricity = { state_goods_delta < 0 } }
			set_variable = { name = electricity_delta			value =-1000000 }
			set_variable = { name = electricity_balance_right	value =       0 }
			while = {		# use binary search to find the amount at which state_goods_delta is 0
				count = 21	# log2(1000000) + 1
				set_variable = {
					name = electricity_balance_mid
					value = {
						add = {
							value = var:electricity_delta
							add = var:electricity_balance_right
							divide = 2
						}
					}
				}
				if = {
					limit = { sg:electricity = { state_goods_delta > PREV.var:electricity_balance_mid } }
					set_variable = { name = electricity_delta value = var:electricity_balance_mid }
				}
				else = { set_variable = { name = electricity_balance_right value = var:electricity_balance_mid } }
			}
			# here electricity_delta holds the exact value of state_goods_delta (up to integer precision)
		}
		# sg:electricity = { set_variable = { name  = electricity_delta value = state_goods_delta } }		# Doesn't work. Thx PDX
	}
}
effect_calc_powerplants = {
	if = {
		limit = { has_technology_researched = electrical_generation }
		every_scope_state = {
			remove_variable = missing_powerplants
			remove_variable = must_destroy_powerplant
			remove_variable = power_per_plant
			effect_calc_electricity_delta = yes
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_power_plant } } }
				hidden_effect = { create_building = { building = building_power_plant level = 1 } }
				set_variable = must_destroy_powerplant
			}
			else = { set_variable = { name = must_destroy_powerplant value = no } }
			set_variable = {
				name = missing_powerplants
				value = {
					add = {
						value = var:electricity_delta
						multiply = -1
						add = power_per_plant
						subtract = 0.5					# add power_per_plant - 0.5 to ensure ceiling at divison
						divide = power_per_plant
					}
					if = { limit = { b:building_power_plant = { is_under_construction = yes } } subtract = 1 }
					if = {
						limit = { any_scope_building = { is_building_type = building_power_plant occupancy < 0.95 occupancy > 0 } }
						multiply = 0
					}
					round = yes
					min = 0
					if = { limit = { var:must_destroy_powerplant = yes } min = 1 }	# Every state needs a building_power_plant
				}
			}
			hidden_effect = { if = { limit = { var:must_destroy_powerplant = yes } remove_building = building_power_plant } }
		}
	}
}
effect_build_powerplants = {
	effect_calc_powerplants = yes
	show_as_tooltip = {
		every_scope_state = {
			limit = { var:missing_powerplants > 0 }
			while = {
				count = var:missing_powerplants
				start_building_construction = building_power_plant
			}
		}
	}
	hidden_effect = {
		while = {	# Striped
			limit = { any_scope_state = { var:missing_powerplants > 0 } }
			every_scope_state = {
				limit = { var:missing_powerplants > 0 }
				start_building_construction = building_power_plant
				change_variable = { name = missing_powerplants subtract = 1 }
			}
		}
	}
}
effect_build_powerplants_private = {
	effect_calc_powerplants = yes
	show_as_tooltip = {
		every_scope_state = {
			limit = { var:missing_powerplants > 0 }
			while = {
				count = var:missing_powerplants
				start_privately_funded_building_construction = building_power_plant
			}
		}
	}
	hidden_effect = {
		while = {	# Striped
			limit = { any_scope_state = { var:missing_powerplants > 0 } }
			every_scope_state = {
				limit = { var:missing_powerplants > 0 }
				start_privately_funded_building_construction = building_power_plant
				change_variable = { name = missing_powerplants subtract = 1 }
			}
		}
	}
}
effect_seed_const = {
	show_as_tooltip = {
		every_scope_state = {
			limit = { var:const_to_seed > 0 }
			while = {
				count = var:const_to_seed
				start_building_construction = building_construction_sector
			}
		}
	}
	while = {	# Striped
		limit = { any_scope_state = { var:const_to_seed > 0 } }
		every_scope_state = {
			limit = { is_treaty_port = no is_under_colonization = no var:const_to_seed > 0 }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
			start_building_construction = building_construction_sector
			change_variable = { name = const_to_seed subtract = 1 }
		}
	}
}
effect_calc_const = {
	remove_variable = const_tech
	every_scope_state = {
		limit = {
			is_treaty_port = no
			is_under_colonization = no
			OR = {
				is_split_state = no
				is_largest_state_in_region = yes
			}
		}
		set_variable = {
			name = const_to_build
			value = {
				value = modifier:state_building_construction_sector_max_level_add
				subtract = b:building_construction_sector.level
				min = 0
			}
		}
		set_variable = {
			name = const_to_seed
			value = {
				value = 5
				subtract = b:building_construction_sector.level
				min = 0
			}
		}
	}
}
effect_build_const = {
	effect_calc_const = yes
	show_as_tooltip = {
		every_scope_state = {
			limit = { var:const_to_build > 0 }
			while = {
				count = var:const_to_build
				start_building_construction = building_construction_sector
			}
		}
	}
	while = {	# Striped
		limit = { any_scope_state = { var:const_to_build > 0 } }
		every_scope_state = {
			limit = { is_treaty_port = no is_under_colonization = no var:const_to_build > 0 }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
			start_building_construction = building_construction_sector
			change_variable = { name = const_to_build subtract = 1 }
		}
	}
}
effect_build_infres_const = {
	effect_calc_infres_const = yes
	show_as_tooltip = {
		every_scope_state = {
			limit = { var:infres_const_to_build > 0 }
			while = {
				count = var:infres_const_to_build
				start_building_construction = building_infres_construction_sector
			}
		}
	}
	while = {	# Striped
		limit = { any_scope_state = { var:infres_const_to_build > 0 } }
		every_scope_state = {
			limit = { is_treaty_port = no is_under_colonization = no var:infres_const_to_build > 0 }
			start_building_construction = building_infres_construction_sector
			change_variable = { name = infres_const_to_build subtract = 1 }
		}
	}
}
effect_expand_infres_const = {
	effect_calc_infres_const = yes
	show_as_tooltip = {
		every_scope_state = {
			limit = { var:infres_const_to_expand > 0 }
			while = {
				count = var:infres_const_to_expand
				start_building_construction = building_infres_construction_sector
			}
		}
	}
	hidden_effect = {
		while = {	# Striped
			limit = { any_scope_state = { var:infres_const_to_expand > 0 } }
			every_scope_state = {
				limit = { is_treaty_port = no is_under_colonization = no var:infres_const_to_expand > 0 }
				start_building_construction = building_infres_construction_sector
				change_variable = { name = infres_const_to_expand subtract = 1 }
			}
		}
	}
}
effect_calc_unis = {
	ordered_scope_state = {  
		limit = { any_scope_building = { is_building_type = building_university } }
		order_by = b:building_university.level
		position = 0
		save_temporary_scope_as = highest_uni_state
	}
	if = {
		limit = { exists = scope:highest_uni_state }
		set_variable = {
			name = highest_uni_level
			value = {
				value		= scope:highest_uni_state.b:building_university.level
				round_to	=   5
				if = {
					limit = { NOT = { any_scope_building = { is_building_type = building_university level < scope:highest_uni_state.b:building_university.level } } }
					add		=   5
				}
				min			=   5
				max			= 100
			}
		}
	}
	else = { set_variable = { name = highest_uni_level value = 5 } }
	every_scope_state = {
		limit = {
			trigger_incorporated_or_incorporating = yes
			# trigger_if = { limit = { has_building = building_university } b:building_university.occupancy > 0.99 }
		}
		set_variable = {
			name = unis_to_build
			value = {
				value = ROOT.var:highest_uni_level
				subtract = b:building_university.level
				min = 0
			}
		}
	}
}
effect_build_unis = {
	effect_calc_unis = yes
	show_as_tooltip = {
		every_scope_state = {
			limit = { var:unis_to_build > 0 }
			# order_by = state_population
			while = {
				count = var:unis_to_build
				start_building_construction = building_university
			}
		}
	}
	hidden_effect = {
		while = {	# Striped
			limit = { any_scope_state = { var:unis_to_build > 0 } }
			every_scope_state = {
				limit = { OR = { is_incorporated = yes incorporation_progress > 0 } var:unis_to_build > 0 }	# NOT = { b:building_university = { is_under_construction = yes } }
				# order_by = state_population
				start_building_construction = building_university
				change_variable = { name = unis_to_build subtract = 1 }
			}
		}
	}
}
effect_fix_literacy_state = {
	if		= { limit = { modifier:state_education_access_add =  1.00 } every_scope_pop = { limit = { literacy_rate < 1.00 } set_pop_literacy = { literacy_rate = { value = 1.00 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.90 } every_scope_pop = { limit = { literacy_rate < 0.90 } set_pop_literacy = { literacy_rate = { value = 0.90 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.80 } every_scope_pop = { limit = { literacy_rate < 0.80 } set_pop_literacy = { literacy_rate = { value = 0.80 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.70 } every_scope_pop = { limit = { literacy_rate < 0.70 } set_pop_literacy = { literacy_rate = { value = 0.70 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.60 } every_scope_pop = { limit = { literacy_rate < 0.60 } set_pop_literacy = { literacy_rate = { value = 0.60 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.50 } every_scope_pop = { limit = { literacy_rate < 0.50 } set_pop_literacy = { literacy_rate = { value = 0.50 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.40 } every_scope_pop = { limit = { literacy_rate < 0.40 } set_pop_literacy = { literacy_rate = { value = 0.40 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.30 } every_scope_pop = { limit = { literacy_rate < 0.30 } set_pop_literacy = { literacy_rate = { value = 0.30 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.20 } every_scope_pop = { limit = { literacy_rate < 0.20 } set_pop_literacy = { literacy_rate = { value = 0.20 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.10 } every_scope_pop = { limit = { literacy_rate < 0.10 } set_pop_literacy = { literacy_rate = { value = 0.10 } } } }
}
effect_fix_literacy_peasants_state = {
	if		= { limit = { modifier:state_education_access_add =  1.00 } every_scope_pop = { limit = { is_pop_type = peasants is_employed = no literacy_rate < 1.00 } set_pop_literacy = { literacy_rate = { value = 1.00 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.90 } every_scope_pop = { limit = { is_pop_type = peasants is_employed = no literacy_rate < 0.90 } set_pop_literacy = { literacy_rate = { value = 0.90 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.80 } every_scope_pop = { limit = { is_pop_type = peasants is_employed = no literacy_rate < 0.80 } set_pop_literacy = { literacy_rate = { value = 0.80 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.70 } every_scope_pop = { limit = { is_pop_type = peasants is_employed = no literacy_rate < 0.70 } set_pop_literacy = { literacy_rate = { value = 0.70 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.60 } every_scope_pop = { limit = { is_pop_type = peasants is_employed = no literacy_rate < 0.60 } set_pop_literacy = { literacy_rate = { value = 0.60 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.50 } every_scope_pop = { limit = { is_pop_type = peasants is_employed = no literacy_rate < 0.50 } set_pop_literacy = { literacy_rate = { value = 0.50 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.40 } every_scope_pop = { limit = { is_pop_type = peasants is_employed = no literacy_rate < 0.40 } set_pop_literacy = { literacy_rate = { value = 0.40 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.30 } every_scope_pop = { limit = { is_pop_type = peasants is_employed = no literacy_rate < 0.30 } set_pop_literacy = { literacy_rate = { value = 0.30 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.20 } every_scope_pop = { limit = { is_pop_type = peasants is_employed = no literacy_rate < 0.20 } set_pop_literacy = { literacy_rate = { value = 0.20 } } } }
	else_if	= { limit = { modifier:state_education_access_add >= 0.10 } every_scope_pop = { limit = { is_pop_type = peasants is_employed = no literacy_rate < 0.10 } set_pop_literacy = { literacy_rate = { value = 0.10 } } } }
}
effect_calc_peasants = {
	custom_tooltip = {
		text = "Recalc Peasants for [THIS.GetCountry.GetName]"
		every_scope_state = {
			remove_variable = farms_occupancy
			remove_variable = orchards_occupancy
			remove_variable = pastures_occupancy
			remove_variable = fishing_occupancy
			remove_variable = rice_occupancy
			remove_variable = autark_occupancy
			remove_variable = infres_autark_occupancy
		}
		every_scope_state = {
			limit = {
				OR = {
					any_scope_building = { is_subsistence_building = yes }
					any_scope_building = { is_building_type = building_autarky_farm }
					any_scope_building = { is_building_type = building_autarky_greenhouse }
				}
			}
			set_variable = { name = farms_occupancy			value = b:building_subsistence_farms.occupancy }
			set_variable = { name = orchards_occupancy		value = b:building_subsistence_orchards.occupancy }
			set_variable = { name = pastures_occupancy		value = b:building_subsistence_pastures.occupancy }
			set_variable = { name = fishing_occupancy		value = b:building_subsistence_fishing_villages.occupancy }
			set_variable = { name = rice_occupancy			value = b:building_subsistence_rice_paddies.occupancy }
			set_variable = { name = autark_occupancy		value = b:building_autarky_farm.occupancy }
			set_variable = { name = infres_autark_occupancy	value = b:building_autarky_greenhouse.occupancy }
			# every_scope_building = {
				# limit = {
					# OR = {
						# is_subsistence_building = yes
						# is_building_type = building_autarky_farm
						# is_building_type = building_autarky_greenhouse
					# }
				# }
				# set_variable = { name = occupancy_var value = occupancy }
			# }
			set_variable = {
				name = peasantsToSpawn
				value = {
					value = 0
					if = {
						limit = { any_scope_building = { is_building_type = building_subsistence_farms } }
						if = {
							limit = {
								b:building_subsistence_farms = {
									NOR = {
										has_active_production_method = pm_centralised_subsistence_5
										has_active_production_method = pm_tools_subsistence
										has_active_production_method = pm_steam_threshers_subsistence
										has_active_production_method = pm_tractors_subsistence
										has_active_production_method = pm_compression_ignition_tractors_subsistence
										has_active_production_method = pm_electric_tractors_subsistence
									}
								}
							}
							add = {
								value = b:building_subsistence_farms.level
								multiply = {
									if		= { limit = { b:building_subsistence_farms	= { has_active_production_method = pm_auto_fertilized_subsistence_farms		} }	value		= 45 }
									if		= { limit = { b:building_subsistence_farms	= { has_active_production_method = pm_chem_fertilized_subsistence_farms		} }	value		= 30 }
									if		= { limit = { b:building_subsistence_farms	= { has_active_production_method = pm_fertilized_subsistence_farms			} }	value		= 25 }
									if		= { limit = { b:building_subsistence_farms	= { has_active_production_method = pm_enriched_subsistence_farms			} }	value		= 20 }
									if		= { limit = { b:building_subsistence_farms	= { has_active_production_method = default_building_subsistence_farms		} }	value		= 10 }
									if		= { limit = { b:building_subsistence_farms	= { has_active_production_method = pm_tools_disabled_subsistence			} }	value		= 10 }
									min = 1
								}
								multiply = {
									value = 1
									subtract = var:farms_occupancy
								}
								divide = 2	# Half-size
							}
						}
					}
					if = {
						limit = { any_scope_building = { is_building_type = building_subsistence_orchards } }
						if = {
							limit = {
								b:building_subsistence_orchards = {
									NOR = {
										has_active_production_method = pm_centralised_subsistence_5
										has_active_production_method = pm_tools_subsistence
										has_active_production_method = pm_steam_threshers_subsistence
										has_active_production_method = pm_tractors_subsistence
										has_active_production_method = pm_compression_ignition_tractors_subsistence
										has_active_production_method = pm_electric_tractors_subsistence
									}
								}
							}
							add = {
								value = b:building_subsistence_orchards.level
								multiply = {
									if		= { limit = { b:building_subsistence_orchards	= { has_active_production_method = pm_auto_fertilized_subsistence_orchards	} }	value		= 45 }
									if		= { limit = { b:building_subsistence_orchards	= { has_active_production_method = pm_chem_fertilized_subsistence_orchards	} }	value		= 30 }
									if		= { limit = { b:building_subsistence_orchards	= { has_active_production_method = pm_fertilized_subsistence_orchards		} }	value		= 25 }
									if		= { limit = { b:building_subsistence_orchards	= { has_active_production_method = pm_enriched_subsistence_orchards			} }	value		= 20 }
									if		= { limit = { b:building_subsistence_orchards	= { has_active_production_method = default_building_subsistence_orchards	} }	value		= 10 }
									if		= { limit = { b:building_subsistence_orchards	= { has_active_production_method = pm_tools_disabled_subsistence			} }	value		= 10 }
									min = 1
								}
								multiply = {
									value = 1
									subtract = var:orchards_occupancy
								}
								divide = 2	# Half-size
							}
						}
					}
					if = {
						limit = { any_scope_building = { is_building_type = building_subsistence_pastures } }
						if = {
							limit = {
								b:building_subsistence_pastures = {
									NOR = {
										has_active_production_method = pm_centralised_subsistence_5
										has_active_production_method = pm_tools_subsistence
										has_active_production_method = pm_steam_threshers_subsistence
										has_active_production_method = pm_tractors_subsistence
										has_active_production_method = pm_compression_ignition_tractors_subsistence
										has_active_production_method = pm_electric_tractors_subsistence
									}
								}
							}
							add = {
								value = b:building_subsistence_pastures.level
								multiply = {
									if		= { limit = { b:building_subsistence_pastures	= { has_active_production_method = pm_auto_fertilized_subsistence_pastures	} }	value		= 45 }
									if		= { limit = { b:building_subsistence_pastures	= { has_active_production_method = pm_chem_fertilized_subsistence_pastures	} }	value		= 30 }
									if		= { limit = { b:building_subsistence_pastures	= { has_active_production_method = pm_fertilized_subsistence_pastures		} }	value		= 25 }
									if		= { limit = { b:building_subsistence_pastures	= { has_active_production_method = pm_enriched_subsistence_pastures			} }	value		= 20 }
									if		= { limit = { b:building_subsistence_pastures	= { has_active_production_method = default_building_subsistence_pastures	} }	value		= 10 }
									if		= { limit = { b:building_subsistence_pastures	= { has_active_production_method = pm_tools_disabled_subsistence			} }	value		= 10 }
									min = 1
								}
								multiply = {
									value = 1
									subtract = var:pastures_occupancy
								}
								divide = 2	# Half-size
							}
						}
					}
					if = {
						limit = { any_scope_building = { is_building_type = building_subsistence_fishing_villages } }
						if = {
							limit = {
								b:building_subsistence_fishing_villages = {
									NOR = {
										has_active_production_method = pm_centralised_subsistence_5
										has_active_production_method = pm_tools_subsistence
										has_active_production_method = pm_steam_threshers_subsistence
										has_active_production_method = pm_tractors_subsistence
										has_active_production_method = pm_compression_ignition_tractors_subsistence
										has_active_production_method = pm_electric_tractors_subsistence
									}
								}
							}
							add = {
								value = b:building_subsistence_fishing_villages.level
								multiply = {
									if		= { limit = { b:building_subsistence_fishing_villages	= { has_active_production_method = pm_auto_fertilized_subsistence_fishing_villages	} }	value		= 45 }
									if		= { limit = { b:building_subsistence_fishing_villages	= { has_active_production_method = pm_chem_fertilized_subsistence_fishing_villages	} }	value		= 30 }
									if		= { limit = { b:building_subsistence_fishing_villages	= { has_active_production_method = pm_fertilized_subsistence_fishing_villages		} }	value		= 25 }
									if		= { limit = { b:building_subsistence_fishing_villages	= { has_active_production_method = pm_enriched_subsistence_fishing_villages			} }	value		= 20 }
									if		= { limit = { b:building_subsistence_fishing_villages	= { has_active_production_method = default_building_subsistence_fishing_villages	} }	value		= 10 }
									if		= { limit = { b:building_subsistence_fishing_villages	= { has_active_production_method = pm_tools_disabled_subsistence					} }	value		= 10 }
									min = 1
								}
								multiply = {
									value = 1
									subtract = var:fishing_occupancy
								}
								divide = 2	# Half-size
							}
						}
					}
					if = {
						limit = { any_scope_building = { is_building_type = building_subsistence_rice_paddies } }
						if = {
							limit = {
								b:building_subsistence_rice_paddies = {
									NOR = {
										has_active_production_method = pm_centralised_double_subsistence_5
										has_active_production_method = pm_tools_subsistence
										has_active_production_method = pm_steam_threshers_subsistence
										has_active_production_method = pm_tractors_subsistence
										has_active_production_method = pm_compression_ignition_tractors_subsistence
										has_active_production_method = pm_electric_tractors_subsistence
									}
								}
							}
							add = {
								value = b:building_subsistence_rice_paddies.level
								multiply = {
									if		= { limit = { b:building_subsistence_rice_paddies	= { has_active_production_method = pm_auto_fertilized_subsistence_rice_paddies	} }	value		= 45 }
									if		= { limit = { b:building_subsistence_rice_paddies	= { has_active_production_method = pm_chem_fertilized_subsistence_rice_paddies	} }	value		= 30 }
									if		= { limit = { b:building_subsistence_rice_paddies	= { has_active_production_method = pm_fertilized_subsistence_rice_paddies		} }	value		= 25 }
									if		= { limit = { b:building_subsistence_rice_paddies	= { has_active_production_method = pm_enriched_subsistence_rice_paddies			} }	value		= 20 }
									if		= { limit = { b:building_subsistence_rice_paddies	= { has_active_production_method = default_building_subsistence_rice_paddies	} }	value		= 10 }
									if		= { limit = { b:building_subsistence_rice_paddies	= { has_active_production_method = pm_tools_disabled_subsistence				} }	value		= 10 }
									min = 1
								}
								multiply = {
									value = 1
									subtract = var:rice_occupancy
								}
							}
						}
					}
					if = {
						limit = { any_scope_building = { is_building_type = building_autarky_farm } }
						if = {
							limit = {
								b:building_autarky_farm = {
									NOR = {
										has_active_production_method = pm_tools_subsistence
										has_active_production_method = pm_steam_threshers_subsistence
										has_active_production_method = pm_tractors_subsistence
										has_active_production_method = pm_compression_ignition_tractors_subsistence
										has_active_production_method = pm_electric_tractors_subsistence
									}
								}
							}
							add = {
								value = b:building_autarky_farm.level
								multiply = {
									if		= { limit = { b:building_autarky_farm	= { has_active_production_method = pm_auto_fertilized_autarky_farm	} }	value		= 45 }
									if		= { limit = { b:building_autarky_farm	= { has_active_production_method = pm_chem_fertilized_autarky_farm	} }	value		= 30 }
									if		= { limit = { b:building_autarky_farm	= { has_active_production_method = pm_fertilized_autarky_farm		} }	value		= 25 }
									if		= { limit = { b:building_autarky_farm	= { has_active_production_method = pm_enriched_autarky_farm			} }	value		= 20 }
									if		= { limit = { b:building_autarky_farm	= { has_active_production_method = default_building_autarky_farm			} }	value		= 10 }
									if		= { limit = { b:building_autarky_farm	= { has_active_production_method = pm_tools_disabled_subsistence			} }	value		= 10 }
									min = 1
								}
								multiply = {
									value = 1
									subtract = var:autark_occupancy
								}
							}
						}
					}
					if = {
						limit = { any_scope_building = { is_building_type = building_autarky_greenhouse } }
						if = {
							limit = {
								b:building_autarky_greenhouse = {
									NOR = {
										has_active_production_method = pm_tools_subsistence
										has_active_production_method = pm_steam_threshers_subsistence
										has_active_production_method = pm_tractors_subsistence
										has_active_production_method = pm_compression_ignition_tractors_subsistence
										has_active_production_method = pm_electric_tractors_subsistence
									}
								}
							}
							add = {
								value = b:building_autarky_greenhouse.level
								multiply = {
									if		= { limit = { b:building_autarky_greenhouse	= { has_active_production_method = pm_auto_fertilized_autarky_farm	} }	value		= 45 }
									if		= { limit = { b:building_autarky_greenhouse	= { has_active_production_method = pm_chem_fertilized_autarky_farm	} }	value		= 30 }
									if		= { limit = { b:building_autarky_greenhouse	= { has_active_production_method = pm_fertilized_autarky_farm		} }	value		= 25 }
									if		= { limit = { b:building_autarky_greenhouse	= { has_active_production_method = pm_enriched_autarky_farm			} }	value		= 20 }
									if		= { limit = { b:building_autarky_greenhouse	= { has_active_production_method = default_building_autarky_farm			} }	value		= 10 }
									if		= { limit = { b:building_autarky_greenhouse	= { has_active_production_method = pm_tools_disabled_subsistence			} }	value		= 10 }
									min = 1
								}
								multiply = {
									value = 1
									subtract = var:infres_autark_occupancy
								}
							}
						}
					}
					divide = 10	# Causes too much lag
					round = yes
				}
			}
		}
	}
}
effect_spawn_peasants_state = {
	if = {
		limit = { var:peasantsToSpawn1M > 0 }
		while = {
			count = var:peasantsToSpawn1M
			if		= { limit = { state_is_in_india = yes }																			create_pop	= {	culture = anglo_indian	religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 4000000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = jewish_group } } }					create_pop	= {	culture = ashkenazi		religion = jewish	pop_type = peasants	literacy_rate = 0.80	size = 4000000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = european_heritage } } }				create_pop	= {	culture = north_german	religion = atheist	pop_type = peasants	literacy_rate = 0.80	size = 4000000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = east_asian_heritage } } }			create_pop	= {	culture = japanese		religion = shinto	pop_type = peasants	literacy_rate = 0.25	size = 4000000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = north_asian_heritage } } }			create_pop	= {	culture = siberian		religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 4000000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = central_asian_heritage } } }			create_pop	= {	culture = kazak			religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 4000000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = south_asian_heritage } } }			create_pop	= {	culture = anglo_indian	religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 4000000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = southeast_asian_heritage } } }		create_pop	= {	culture = thai			religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 4000000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = african_heritage } } }				create_pop	= {	culture = african		religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 4000000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = middle_eastern_heritage } } }		create_pop	= {	culture = sephardic		religion = jewish	pop_type = peasants	literacy_rate = 0.25	size = 4000000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = indigenous_oceanic_heritage } } }	create_pop	= {	culture = polynesian	religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 4000000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = indigenous_american_heritage } } }	create_pop	= {	culture = siouan		religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 4000000 } }
		}
	}
	if = {
		limit = { var:peasantsToSpawnHundredk > 0 }
		while = {
			count = var:peasantsToSpawnHundredk
			if		= { limit = { state_is_in_india = yes }																			create_pop	= {	culture = anglo_indian	religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 400000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = jewish_group } } }					create_pop	= {	culture = ashkenazi		religion = jewish	pop_type = peasants	literacy_rate = 0.80	size = 400000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = european_heritage } } }				create_pop	= {	culture = north_german	religion = atheist	pop_type = peasants	literacy_rate = 0.80	size = 400000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = east_asian_heritage } } }			create_pop	= {	culture = japanese		religion = shinto	pop_type = peasants	literacy_rate = 0.25	size = 400000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = north_asian_heritage } } }			create_pop	= {	culture = siberian		religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 400000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = central_asian_heritage } } }			create_pop	= {	culture = kazak			religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 400000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = south_asian_heritage } } }			create_pop	= {	culture = anglo_indian	religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 400000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = southeast_asian_heritage } } }		create_pop	= {	culture = thai			religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 400000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = african_heritage } } }				create_pop	= {	culture = african		religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 400000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = middle_eastern_heritage } } }		create_pop	= {	culture = sephardic		religion = jewish	pop_type = peasants	literacy_rate = 0.25	size = 400000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = indigenous_oceanic_heritage } } }	create_pop	= {	culture = polynesian	religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 400000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = indigenous_american_heritage } } }	create_pop	= {	culture = siouan		religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 400000 } }
		}
	}
	if = {
		limit = { var:peasantsToSpawn > 0 }
		while = {
			count = var:peasantsToSpawn
			if		= { limit = { state_is_in_india = yes }																			create_pop	= {	culture = anglo_indian	religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 40000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = jewish_group } } }					create_pop	= {	culture = ashkenazi		religion = jewish	pop_type = peasants	literacy_rate = 0.80	size = 40000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = european_heritage } } }				create_pop	= {	culture = north_german	religion = atheist	pop_type = peasants	literacy_rate = 0.80	size = 40000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = east_asian_heritage } } }			create_pop	= {	culture = japanese		religion = shinto	pop_type = peasants	literacy_rate = 0.25	size = 40000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = north_asian_heritage } } }			create_pop	= {	culture = siberian		religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 40000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = central_asian_heritage } } }			create_pop	= {	culture = kazak			religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 40000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = south_asian_heritage } } }			create_pop	= {	culture = anglo_indian	religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 40000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = southeast_asian_heritage } } }		create_pop	= {	culture = thai			religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 40000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = african_heritage } } }				create_pop	= {	culture = african		religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 40000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = middle_eastern_heritage } } }		create_pop	= {	culture = sephardic		religion = jewish	pop_type = peasants	literacy_rate = 0.25	size = 40000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = indigenous_oceanic_heritage } } }	create_pop	= {	culture = polynesian	religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 40000 } }
			else_if	= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = indigenous_american_heritage } } }	create_pop	= {	culture = siouan		religion = atheist	pop_type = peasants	literacy_rate = 0.25	size = 40000 } }
		}
	}
}
effect_spawn_peasants = {
	effect_calc_peasants = yes
	every_scope_state = {
		limit = { trigger_valid_pop_spawn_state = yes }
		effect_spawn_peasants_state = yes
	}
}
effect_spawn_peasants_colonies = {
	effect_calc_peasants = yes
	every_scope_state = {
		limit = {
			NOT = { trigger_incorporated_or_incorporating = yes }
			trigger_valid_pop_spawn_state = yes
		}
		effect_spawn_peasants_state = yes
	}
}
effect_spawn_peasants_greener_grass = {
	effect_calc_peasants = yes
	every_scope_state = {
		limit = {
			has_decree = decree_greener_grass_campaign
			trigger_valid_pop_spawn_state = yes
		}
		effect_spawn_peasants_state = yes
	}
}
effect_spawn_peasants_relief = {
	effect_calc_peasants = yes
	every_scope_state = {
		limit = {
			has_decree = decree_emergency_relief
			trigger_valid_pop_spawn_state = yes
		}
		effect_spawn_peasants_state = yes
	}
}
effect_spawn_slaves_state = {
	if = {
		limit = { var:peasantsToSpawn1M > 0 }
		while = {
			count = var:peasantsToSpawn1M
			if		= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = lusophone } } }						create_pop	= {	culture = afro_brazilian	religion = atheist	pop_type = slaves size = 4000000 } }
			else_if	= { limit = { state_is_in_north_america = yes }																	create_pop	= {	culture = afro_american		religion = atheist	pop_type = slaves size = 4000000 } }
			else_if	= { limit = { state_is_in_india = yes }																			create_pop	= {	culture = anglo_indian		religion = atheist	pop_type = slaves size = 4000000 } }
			else	= {																												create_pop	= { culture = african			religion = atheist	pop_type = slaves size = 4000000 } }
		}
	}
	if = {
		limit = { var:peasantsToSpawnHundredk > 0 }
		while = {
			count = var:peasantsToSpawnHundredk
			if		= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = lusophone } } }						create_pop	= {	culture = afro_brazilian	religion = atheist	pop_type = slaves size = 400000 } }
			else_if	= { limit = { state_is_in_north_america = yes }																	create_pop	= {	culture = afro_american		religion = atheist	pop_type = slaves size = 400000 } }
			else_if	= { limit = { state_is_in_india = yes }																			create_pop	= {	culture = anglo_indian		religion = atheist	pop_type = slaves size = 400000 } }
			else	= {																												create_pop	= { culture = african			religion = atheist	pop_type = slaves size = 400000 } }
		}
	}
	if = {
		limit = { var:peasantsToSpawn > 0 }
		while = {
			count = var:peasantsToSpawn
			if		= { limit = { OWNER = { any_primary_culture = { has_discrimination_trait = lusophone } } }						create_pop	= {	culture = afro_brazilian	religion = atheist	pop_type = slaves size = 40000 } }
			else_if	= { limit = { state_is_in_north_america = yes }																	create_pop	= {	culture = afro_american		religion = atheist	pop_type = slaves size = 40000 } }
			else_if	= { limit = { state_is_in_india = yes }																			create_pop	= {	culture = anglo_indian		religion = atheist	pop_type = slaves size = 40000 } }
			else	= {																												create_pop	= { culture = african			religion = atheist	pop_type = slaves size = 40000 } }
		}
	}
}
effect_spawn_slaves = {
	effect_calc_peasants = yes
	every_scope_state = {
		limit = { trigger_valid_pop_spawn_state = yes }
		effect_spawn_slaves_state = yes
	}
}
effect_spawn_slaves_colonies = {
	effect_calc_peasants = yes
	every_scope_state = {
		limit = {
			NOT = { trigger_incorporated_or_incorporating = yes }
			trigger_valid_pop_spawn_state = yes
		}
		effect_spawn_slaves_state = yes
		if = {
			limit = { OWNER = { has_law:law_type:law_slavery_banned } }
			liberate_slaves = yes
		}
	}
}
effect_spawn_slaves_greener_grass = {
	effect_calc_peasants = yes
	every_scope_state = {
		limit = {
			has_decree = decree_greener_grass_campaign
			trigger_valid_pop_spawn_state = yes
		}
		effect_spawn_slaves_state = yes
	}
}
effect_seed_autarky_farms_state = {
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_autarky_farm } } }
		start_building_construction = building_autarky_farm
	}
	if = {
		limit = { NOR = { trigger_inhospitable_terrain = yes any_scope_building = { is_building_type = building_autarky_greenhouse } } }
		start_building_construction = building_autarky_greenhouse
	}
}
effect_seed_autarky_farms_private_state = {
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_autarky_farm } } }
		start_privately_funded_building_construction = building_autarky_farm
	}
	if = {
		limit = { NOR = { trigger_inhospitable_terrain = yes any_scope_building = { is_building_type = building_autarky_greenhouse } } }
		start_privately_funded_building_construction = building_autarky_greenhouse
	}
}
effect_seed_autarky_farms			= { every_scope_state = { effect_seed_autarky_farms_state			= yes } }
effect_seed_autarky_farms_private	= { every_scope_state = { effect_seed_autarky_farms_private_state	= yes } }
effect_seed_infrastructure = {
	every_scope_state = {
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_government_administration } }	OWNER = { has_technology_researched = tech_bureaucracy } trigger_incorporated_or_incorporating = yes }
			start_building_construction = building_government_administration
		}
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_university } }					OWNER = { has_technology_researched = academia } trigger_incorporated_or_incorporating = yes }
			start_building_construction = building_university
		}
		if = {
			limit = { OWNER = { OR = { has_law = law_type:law_laissez_faire has_law = law_type:law_extraction_economy } } }
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_port } } is_coastal = yes		OWNER = { has_technology_researched = navigation } }
				start_privately_funded_building_construction = building_port
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_trade_center } }				trade_center_construction_allowed = yes }
				start_privately_funded_building_construction = building_trade_center
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_railway } }					OWNER = { has_technology_researched = railways } }
				start_privately_funded_building_construction = building_railway
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_power_plant } }				OWNER = { has_technology_researched = electrical_generation } }
				start_privately_funded_building_construction = building_power_plant
			}
		}
		else = {
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_port } } is_coastal = yes		OWNER = { has_technology_researched = navigation } }
				start_building_construction = building_port
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_trade_center } }				trade_center_construction_allowed = yes }
				start_building_construction = building_trade_center
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_railway } }					OWNER = { has_technology_researched = railways } }
				start_building_construction = building_railway
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_power_plant } }				OWNER = { has_technology_researched = electrical_generation } }
				start_building_construction = building_power_plant
			}
		}
	}
}
effect_deplete_resources_state = {
	if = {
		limit = {
			NOR = { any_scope_building = { is_building_group = bg_gold_fields } any_scope_building = { is_building_type = building_gold_mine } }
			has_potential_resource = bg_gold_mining
			OWNER = { has_technology_researched = prospecting }
		}
		force_resource_discovery = bg_gold_fields
	}
	if = { limit = { any_scope_building = { is_building_group = bg_gold_fields } } force_resource_depletion = bg_gold_fields }
}
effect_seed_logging = {
	every_scope_state = {
		limit = { NOT = { any_scope_building = { is_building_type = building_logging_camp		} }	has_potential_resource = bg_logging }
		start_building_construction = building_logging_camp
	}
	every_scope_state = {
		limit = { NOT = { any_scope_building = { is_building_type = building_rubber_plantation	} } has_potential_resource = bg_rubber			OWNER = { has_technology_researched = rubber_mastication	} }
		force_resource_discovery = bg_rubber
		start_building_construction = building_rubber_plantation
	}
}
effect_seed_logging_private = {
	every_scope_state = {
		limit = { NOT = { any_scope_building = { is_building_type = building_logging_camp		} }	has_potential_resource = bg_logging }
		start_privately_funded_building_construction = building_logging_camp
	}
	every_scope_state = {
		limit = { NOT = { any_scope_building = { is_building_type = building_rubber_plantation	} } has_potential_resource = bg_rubber			OWNER = { has_technology_researched = rubber_mastication	} }
		force_resource_discovery = bg_rubber
		start_privately_funded_building_construction = building_rubber_plantation
	}
}
effect_seed_resources_state = {
	effect_deplete_resources_state	= yes
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_logging_camp		} }	has_potential_resource = bg_logging }
		start_building_construction = building_logging_camp
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_gold_mine			} }	has_potential_resource = bg_gold_mining		OWNER = { has_technology_researched = prospecting	} }
		start_building_construction = building_gold_mine
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_coal_mine			} }	has_potential_resource = bg_coal_mining		OWNER = { has_technology_researched = shaft_mining	} }
		start_building_construction = building_coal_mine
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_iron_mine			} }	has_potential_resource = bg_iron_mining		OWNER = { has_technology_researched = shaft_mining	} }
		start_building_construction = building_iron_mine
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_lead_mine 			} }	has_potential_resource = bg_lead_mining		OWNER = { has_technology_researched = shaft_mining	} }
		start_building_construction = building_lead_mine
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_sulfur_mine		} }	has_potential_resource = bg_sulfur_mining	OWNER = { has_technology_researched = shaft_mining	} }
		start_building_construction = building_sulfur_mine
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_rubber_plantation	} } has_potential_resource = bg_rubber			OWNER = { has_technology_researched = rubber_mastication	} }
		force_resource_discovery = bg_rubber
		start_building_construction = building_rubber_plantation
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_oil_rig			} } has_potential_resource = bg_oil_extraction	OWNER = { has_technology_researched = pumpjacks	} }
		force_resource_discovery = bg_oil_extraction
		start_building_construction = building_oil_rig
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_fishing_wharf		} }	has_potential_resource = bg_fishing																is_coastal = yes }
		start_building_construction = building_fishing_wharf
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_whaling_station	} }	has_potential_resource = bg_whaling			OWNER = { has_technology_researched = navigation }	is_coastal = yes }
		start_building_construction = building_whaling_station
	}
}
effect_seed_resources_private_state = {
	effect_deplete_resources_state		= yes
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_logging_camp		} }	has_potential_resource = bg_logging }
		start_privately_funded_building_construction = building_logging_camp
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_gold_mine			} }	has_potential_resource = bg_gold_mining		OWNER = { has_technology_researched = prospecting	} }
		start_privately_funded_building_construction = building_gold_mine
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_coal_mine			} }	has_potential_resource = bg_coal_mining		OWNER = { has_technology_researched = shaft_mining	} }
		start_privately_funded_building_construction = building_coal_mine
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_iron_mine			} }	has_potential_resource = bg_iron_mining		OWNER = { has_technology_researched = shaft_mining	} }
		start_privately_funded_building_construction = building_iron_mine
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_lead_mine 			} }	has_potential_resource = bg_lead_mining		OWNER = { has_technology_researched = shaft_mining	} }
		start_privately_funded_building_construction = building_lead_mine
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_sulfur_mine		} }	has_potential_resource = bg_sulfur_mining	OWNER = { has_technology_researched = shaft_mining	} }
		start_privately_funded_building_construction = building_sulfur_mine
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_rubber_plantation	} } has_potential_resource = bg_rubber			OWNER = { has_technology_researched = rubber_mastication	} }
		force_resource_discovery = bg_rubber
		start_privately_funded_building_construction = building_rubber_plantation
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_oil_rig			} } has_potential_resource = bg_oil_extraction	OWNER = { has_technology_researched = pumpjacks	} }
		force_resource_discovery = bg_oil_extraction
		start_privately_funded_building_construction = building_oil_rig
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_fishing_wharf		} }	has_potential_resource = bg_fishing																is_coastal = yes }
		start_privately_funded_building_construction = building_fishing_wharf
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_whaling_station	} }	has_potential_resource = bg_whaling			OWNER = { has_technology_researched = navigation }	is_coastal = yes }
		start_privately_funded_building_construction = building_whaling_station
	}
}
effect_seed_plantations_state = {
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_autarky_greenhouse } } }
		start_building_construction = building_autarky_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_cotton_greenhouse } } }
		start_building_construction = building_cotton_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_sugar_greenhouse } }	OWNER = { OR = { THIS = c:BRZ any_primary_culture = { has_cultural_obsession = sugar } } } }
		start_building_construction = building_sugar_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_vineyard_greenhouse } } }
		start_building_construction = building_vineyard_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_coffee_greenhouse } } }
		start_building_construction = building_coffee_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_tea_greenhouse } } }
		start_building_construction = building_tea_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_dye_greenhouse } }		OWNER = { NOT = { has_technology_researched = aniline } } }
		start_building_construction = building_dye_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_silk_greenhouse } }		OWNER = { NOT = { has_technology_researched = art_silk } } }
		start_building_construction = building_silk_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_opium_greenhouse } }	OWNER = { NOT = { is_banning_goods = g:opium } } }
		start_building_construction = building_opium_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_tobacco_greenhouse } }	OWNER = { NOT = { is_banning_goods = g:tobacco } } }
		start_building_construction = building_tobacco_greenhouse
	}
}
effect_seed_plantations_private_state = {
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_autarky_greenhouse } } }
		start_privately_funded_building_construction = building_autarky_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_cotton_greenhouse } } }
		start_privately_funded_building_construction = building_cotton_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_sugar_greenhouse } }	OWNER = { OR = { THIS = c:BRZ any_primary_culture = { has_cultural_obsession = sugar } } } }
		start_privately_funded_building_construction = building_sugar_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_vineyard_greenhouse } } }
		start_privately_funded_building_construction = building_vineyard_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_coffee_greenhouse } } }
		start_privately_funded_building_construction = building_coffee_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_tea_greenhouse } } }
		start_privately_funded_building_construction = building_tea_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_dye_greenhouse } }		OWNER = { NOT = { has_technology_researched = aniline } } }
		start_privately_funded_building_construction = building_dye_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_silk_greenhouse } }		OWNER = { NOT = { has_technology_researched = art_silk } } }
		start_privately_funded_building_construction = building_silk_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_opium_greenhouse } }	OWNER = { NOT = { is_banning_goods = g:opium } } }
		start_privately_funded_building_construction = building_opium_greenhouse
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_tobacco_greenhouse } }	OWNER = { NOT = { is_banning_goods = g:tobacco } } }
		start_privately_funded_building_construction = building_tobacco_greenhouse
	}
}
effect_seed_industry_state = {
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_tooling_workshops } }			OWNER = { has_technology_researched = manufacturies } }
		start_building_construction = building_tooling_workshops
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_glassworks } }					OWNER = { has_technology_researched = manufacturies } }
		start_building_construction = building_glassworks
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_textile_mills } }				OWNER = { has_technology_researched = manufacturies } }
		start_building_construction = building_textile_mills
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_furniture_manufacturies } }	OWNER = { has_technology_researched = manufacturies } }
		start_building_construction = building_furniture_manufacturies
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_paper_mills } }				OWNER = { has_technology_researched = manufacturies } }
		start_building_construction = building_paper_mills
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_food_industry } }				OWNER = { has_technology_researched = manufacturies } }
		start_building_construction = building_food_industry
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_charcoal_burner } }			OWNER = { has_technology_researched = manufacturies } }
		start_building_construction = building_charcoal_burner
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_steel_mills } }				OWNER = { has_technology_researched = steelworking } }
		start_building_construction = building_steel_mills
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_chemical_plants } }			OWNER = { has_technology_researched = distillation } }
		start_building_construction = building_chemical_plants
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_explosives_factory } }			OWNER = { has_technology_researched = distillation } }
		start_building_construction = building_explosives_factory
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_synthetic_oil_plants } }		OWNER = { has_technology_researched = distillation } }
		start_building_construction = building_synthetic_oil_plants
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_motor_industry } }				OWNER = { has_technology_researched = atmospheric_engine NOT = { trigger_forbidden_heavy_industry = yes } } }
		start_building_construction = building_motor_industry
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_automotive_industry } }		OWNER = { has_technology_researched = combustion_engine NOT = { trigger_forbidden_heavy_industry = yes } } }
		start_building_construction = building_automotive_industry
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_synthetics_plants } }			OWNER = { has_technology_researched = aniline NOT = { trigger_forbidden_heavy_industry = yes } } }
		start_building_construction = building_synthetics_plants
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_electrics_industry } }			OWNER = { has_technology_researched = telephone NOT = { trigger_forbidden_heavy_industry = yes } } }
		start_building_construction = building_electrics_industry
	}
}
effect_seed_industry_private_state = {
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_tooling_workshops } }			OWNER = { has_technology_researched = manufacturies } }
		start_privately_funded_building_construction = building_tooling_workshops
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_glassworks } }					OWNER = { has_technology_researched = manufacturies } }
		start_privately_funded_building_construction = building_glassworks
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_textile_mills } }				OWNER = { has_technology_researched = manufacturies } }
		start_privately_funded_building_construction = building_textile_mills
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_furniture_manufacturies } }	OWNER = { has_technology_researched = manufacturies } }
		start_privately_funded_building_construction = building_furniture_manufacturies
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_paper_mills } }				OWNER = { has_technology_researched = manufacturies } }
		start_privately_funded_building_construction = building_paper_mills
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_food_industry } }				OWNER = { has_technology_researched = manufacturies } }
		start_privately_funded_building_construction = building_food_industry
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_charcoal_burner } }			OWNER = { has_technology_researched = manufacturies } }
		start_privately_funded_building_construction = building_charcoal_burner
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_steel_mills } }				OWNER = { has_technology_researched = steelworking } }
		start_privately_funded_building_construction = building_steel_mills
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_chemical_plants } }			OWNER = { has_technology_researched = distillation } }
		start_privately_funded_building_construction = building_chemical_plants
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_explosives_factory } }			OWNER = { has_technology_researched = distillation } }
		start_privately_funded_building_construction = building_explosives_factory
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_synthetic_oil_plants } }		OWNER = { has_technology_researched = distillation } }
		start_privately_funded_building_construction = building_synthetic_oil_plants
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_motor_industry } }				OWNER = { has_technology_researched = atmospheric_engine NOT = { trigger_forbidden_heavy_industry = yes } } }
		start_privately_funded_building_construction = building_motor_industry
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_automotive_industry } }		OWNER = { has_technology_researched = combustion_engine NOT = { trigger_forbidden_heavy_industry = yes } } }
		start_privately_funded_building_construction = building_automotive_industry
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_synthetics_plants } }			OWNER = { has_technology_researched = aniline NOT = { trigger_forbidden_heavy_industry = yes } } }
		start_privately_funded_building_construction = building_synthetics_plants
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_electrics_industry } }			OWNER = { has_technology_researched = telephone NOT = { trigger_forbidden_heavy_industry = yes } } }
		start_privately_funded_building_construction = building_electrics_industry
	}
}
effect_seed_inf_resources = {
	every_scope_state = {
		limit = { is_treaty_port = no }
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_infres_iron_mine		} }	OWNER = { has_technology_researched = shaft_mining } }
			start_building_construction = building_infres_iron_mine
		}
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_infres_lead_mine		} }	OWNER = { has_technology_researched = shaft_mining } }
			start_building_construction = building_infres_lead_mine
		}
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_infres_logging_camp	} } }
			start_building_construction = building_infres_logging_camp
		}
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_infres_fishing_wharf } }														is_coastal = yes }
			start_building_construction = building_infres_fishing_wharf
		}
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_infres_whaling_station } }	OWNER = { has_technology_researched = navigation }	is_coastal = yes }
			start_building_construction = building_infres_whaling_station
		}
	}
}
effect_seed_inf_resources_private = {
	every_scope_state = {
		limit = { is_treaty_port = no }
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_infres_iron_mine		} }	OWNER = { has_technology_researched = shaft_mining } }
			start_privately_funded_building_construction = building_infres_iron_mine
		}
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_infres_lead_mine		} }	OWNER = { has_technology_researched = shaft_mining } }
			start_privately_funded_building_construction = building_infres_lead_mine
		}
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_infres_logging_camp	} } }
			start_privately_funded_building_construction = building_infres_logging_camp
		}
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_infres_fishing_wharf } }														is_coastal = yes }
			start_privately_funded_building_construction = building_infres_fishing_wharf
		}
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_infres_whaling_station } }	OWNER = { has_technology_researched = navigation }	is_coastal = yes }
			start_privately_funded_building_construction = building_infres_whaling_station
		}
	}
}
effect_seed_resources = {
	every_scope_state = {
		limit = { has_decree = decree_encourage_resource_industry }
		effect_seed_resources_state = yes
	}
	every_scope_state = {
		limit = {
			trigger_incorporated_or_incorporating = yes	# We don't want ownership buildings in colonies
			NOT = { has_decree = decree_encourage_resource_industry }
		}
		effect_seed_resources_state = yes
	}
}
effect_seed_resources_private = {
	every_scope_state = {
		limit = { has_decree = decree_encourage_resource_industry }
		effect_seed_resources_private_state = yes
	}
	every_scope_state = {
		limit = {
			trigger_incorporated_or_incorporating = yes	# We don't want ownership buildings in colonies
			NOT = { has_decree = decree_encourage_resource_industry }
		}
		effect_seed_resources_private_state = yes
	}
}
effect_seed_plantations = {
	every_scope_state = {
		limit = { has_decree = decree_encourage_agricultural_industry }
		effect_seed_plantations_state = yes
	}
	every_scope_state = {
		limit = {
			trigger_incorporated_or_incorporating = yes	# We don't want ownership buildings in colonies
			NOT = { trigger_inhospitable_terrain = yes }
			NOT = { has_decree = decree_encourage_agricultural_industry }
			trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } }
		}
		effect_seed_plantations_state = yes
	}
}
effect_seed_plantations_private = {
	every_scope_state = {
		limit = { has_decree = decree_encourage_agricultural_industry }
		effect_seed_plantations_private_state = yes
	}
	every_scope_state = {
		limit = {
			trigger_incorporated_or_incorporating = yes	# We don't want ownership buildings in colonies
			NOT = { trigger_inhospitable_terrain = yes }
			NOT = { has_decree = decree_encourage_agricultural_industry }
			trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } }
		}
		effect_seed_plantations_private_state = yes
	}
}
effect_seed_industry = {
	every_scope_state = {
		limit = { has_decree = decree_encourage_manufacturing_industry }
		effect_seed_industry_state = yes
	}
	every_scope_state = {
		limit = {
			trigger_incorporated_or_incorporating = yes
			NOT = { has_decree = decree_encourage_manufacturing_industry }
			trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } }
		}
		effect_seed_industry_state = yes
	}
	every_scope_state = {
		limit = { is_incorporated = yes NOT = { any_scope_building = { is_building_type = building_arts_academy } }				OWNER = { has_technology_researched = romanticism } }
		start_building_construction = building_arts_academy
	}
}
effect_seed_industry_private = {
	every_scope_state = {
		limit = { has_decree = decree_encourage_manufacturing_industry }
		effect_seed_industry_private_state = yes
	}
	every_scope_state = {
		limit = {
			trigger_incorporated_or_incorporating = yes
			NOT = { has_decree = decree_encourage_manufacturing_industry }
			trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } }
		}
		effect_seed_industry_private_state = yes
	}
	every_scope_state = {
		limit = { is_incorporated = yes NOT = { any_scope_building = { is_building_type = building_arts_academy } }				OWNER = { has_technology_researched = romanticism } }
		start_privately_funded_building_construction = building_arts_academy
	}
}
effect_set_mil_industry_scope = {
	if = {
		limit = { THIS = c:USA any_scope_state = { state_region = s:STATE_NEW_YORK } }
		s:STATE_NEW_YORK.region_state:USA = {
			save_scope_as = military_industry_state
			save_scope_as = shipyards_state
		}
	}
	else_if = {
		limit = { capital = { is_coastal = yes } }
		capital = {
			save_scope_as = military_industry_state
			save_scope_as = shipyards_state
		}
	}
	else_if = {
		limit = { any_scope_building = { is_building_type = building_shipyards } }
		capital = { save_scope_as = military_industry_state }
		ordered_scope_state = { limit = { any_scope_building = { is_building_type = building_shipyards } } order_by = b:building_shipyards.level position = 0 save_scope_as = shipyards_state }
	}
	else = {
		capital = { save_scope_as = military_industry_state }
		random_scope_state = { limit = { is_coastal = yes has_decree = decree_encourage_manufacturing_industry } save_scope_as = shipyards_state }
	}
}
effect_seed_military_industry = {
	effect_set_mil_industry_scope = yes
	if = {
		limit = { OR = { has_law = law_type:law_laissez_faire has_law = law_type:law_extraction_economy } }
		scope:military_industry_state = {
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_tooling_workshops } }			OWNER = { has_technology_researched = manufacturies } }
				start_privately_funded_building_construction = building_tooling_workshops
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_arms_industry } }				OWNER = { has_technology_researched = gunsmithing } }
				start_privately_funded_building_construction = building_arms_industry
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_artillery_foundries } }		OWNER = { has_technology_researched = artillery } }
				start_privately_funded_building_construction = building_artillery_foundries
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_munition_plants } }			OWNER = { has_technology_researched = percussion_cap	NOT = { has_law = law_type:law_industry_banned } } }
				start_privately_funded_building_construction = building_munition_plants
			}
		}
		scope:shipyards_state = {
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_shipyards } }					OWNER = { has_technology_researched = navigation } is_coastal = yes }
				start_privately_funded_building_construction = building_shipyards
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_military_shipyards } }			OWNER = { has_technology_researched = navigation } is_coastal = yes }
				start_privately_funded_building_construction = building_military_shipyards
			}
		}
	}
	else = {
		scope:military_industry_state = {
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_tooling_workshops } }			OWNER = { has_technology_researched = manufacturies } }
				start_building_construction = building_tooling_workshops
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_arms_industry } }				OWNER = { has_technology_researched = gunsmithing } }
				start_building_construction = building_arms_industry
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_artillery_foundries } }		OWNER = { has_technology_researched = artillery } }
				start_building_construction = building_artillery_foundries
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_munition_plants } }			OWNER = { has_technology_researched = percussion_cap	NOT = { has_law = law_type:law_industry_banned } } }
				start_building_construction = building_munition_plants
			}
		}
		scope:shipyards_state = {
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_shipyards } }					OWNER = { has_technology_researched = navigation } is_coastal = yes }
				start_building_construction = building_shipyards
			}
			if = {
				limit = { NOT = { any_scope_building = { is_building_type = building_military_shipyards } }			OWNER = { has_technology_researched = navigation } is_coastal = yes }
				start_building_construction = building_military_shipyards
			}
		}
	}
}
effect_calc_dye_state = {
	set_variable = {
		name = dye_var
		value = {
			value = b:building_dye_greenhouse.level
			multiply = {
				if		= { limit = { b:building_dye_greenhouse = { has_active_production_method = default_building_dye_plantation } }			value =  25   }
				else_if	= { limit = { b:building_dye_greenhouse = { has_active_production_method = pm_soil_enriching_farming_dye_plantation } }	value =  50   }
				else_if	= { limit = { b:building_dye_greenhouse = { has_active_production_method = pm_fertilization_dye_plantation } }			value =  62.5 }
				else_if	= { limit = { b:building_dye_greenhouse = { has_active_production_method = pm_chemical_fertilizer_dye_plantation } }		value =  75   }
				else_if	= { limit = { b:building_dye_greenhouse = { has_active_production_method = pm_automatic_fertilization_dye_plantation } }	value = 100   }
			}
			divide = {
				if		= { limit = { OWNER = { has_technology_researched = nitrogen_fixation } }														value = 300   }
				else	= {																																value = 100   }
			}
			# if = { limit = { any_scope_building = { is_building_type = building_synthetics_plants } } subtract = b:building_synthetics_plants.level  }
			round = yes
			min = 0
		}
	}
}
effect_calc_dye = {
	every_scope_state = {
		remove_variable = dye_var
		effect_calc_dye_state = yes
	}
}
effect_replace_dye = {
	effect_calc_dye = yes
	if = {
		limit = { has_technology_researched = aniline	NOT = { trigger_forbidden_heavy_industry = yes } }
		# every_scope_state = {	# I dunno why, but this breaks the tooltip
			# if = {
				# limit = { has_building = building_dye_greenhouse }
				# remove_building = building_dye_greenhouse
			# }
		# }
		show_as_tooltip = {
			every_scope_state = {
				limit = { var:dye_var > 0 }
				while = {
					count = var:dye_var
					if		= { limit = { OWNER = { has_law = law_type:law_command_economy } }	start_building_construction						= building_synthetics_plants }
					else	= { 																start_privately_funded_building_construction	= building_synthetics_plants }
				}
			}
		}
		hidden_effect = {
			if = {
				limit = { has_law = law_type:law_command_economy }
				while = {
					limit = { any_scope_state = { var:dye_var > 0 OR = { is_incorporated = yes incorporation_progress > 0 } } }
					every_scope_state = {
						limit = { var:dye_var > 0 }
						start_building_construction = building_synthetics_plants
						change_variable = { name = dye_var subtract = 1 }
					}
				}
			}
			else = {
				while = {
					limit = { any_scope_state = { var:dye_var > 0 OR = { is_incorporated = yes incorporation_progress > 0 } } }
					every_scope_state = {
						limit = { var:dye_var > 0 }
						start_privately_funded_building_construction = building_synthetics_plants
						change_variable = { name = dye_var subtract = 1 }
					}
				}
			}
			every_scope_state = { remove_building = building_dye_greenhouse }	# Remove anyways to prevent ghost buildings
		}
	}
}
effect_calc_silk_state = {
	set_variable = {
		name = silk_var
		value = {
			value = b:building_silk_greenhouse.level
			multiply = {
				if		= { limit = { b:building_silk_greenhouse = { has_active_production_method = default_building_silk_plantation } }				value		=   20 }
				else_if	= { limit = { b:building_silk_greenhouse = { has_active_production_method = pm_soil_enriching_farming_silk_plantation } }	value		=   40 }
				else_if	= { limit = { b:building_silk_greenhouse = { has_active_production_method = pm_fertilization_silk_plantation } }				value		=   50 }
				else_if	= { limit = { b:building_silk_greenhouse = { has_active_production_method = pm_chemical_fertilizer_silk_plantation } }		value		=   60 }
				else_if	= { limit = { b:building_silk_greenhouse = { has_active_production_method = pm_automatic_fertilization_silk_plantation } }	value		=   80 }
				if		= { limit = { OWNER = { has_technology_researched = sericulture } }																	multiply	= 1.25 }
			}
			divide = {
				if		= { limit = { OWNER = { has_technology_researched = nitrogen_fixation } }															value		= 200  }
				else	= {																																	value		=  50  }
			}
			if = { limit = { any_scope_building = { is_building_type = building_synthetics_plants } } subtract = b:building_synthetics_plants.level  }
			round = yes
			min = 0
		}
	}
}
effect_calc_silk = {
	every_scope_state = {
		remove_variable = silk_var
		effect_calc_silk_state = yes
	}
}
effect_replace_silk = {
	effect_calc_silk = yes
	if = {
		limit = { has_technology_researched = art_silk	NOT = { trigger_forbidden_heavy_industry = yes } }
		# every_scope_state = {	# I dunno why, but this breaks the tooltip
			# if = {
				# limit = { has_building = building_silk_greenhouse }
				# remove_building = building_silk_greenhouse
			# }
		# }
		show_as_tooltip = {
			every_scope_state = {
				limit = { var:silk_var > 0 }
				while = {
					count = var:silk_var
					if		= { limit = { OWNER = { has_law = law_type:law_command_economy } }	start_building_construction						= building_synthetics_plants }
					else	= { 																start_privately_funded_building_construction	= building_synthetics_plants }
				}
			}
		}
		hidden_effect = {
			if = {
				limit = { has_law = law_type:law_command_economy }
				while = {
					limit = { any_scope_state = { var:silk_var > 0 } OR = { is_incorporated = yes incorporation_progress > 0 } }
					every_scope_state = {
						limit = { var:silk_var > 0 }
						start_building_construction = building_synthetics_plants
						change_variable = { name = silk_var subtract = 1 }
					}
				}
			}
			else = {
				while = {
					limit = { any_scope_state = { var:silk_var > 0 } OR = { is_incorporated = yes incorporation_progress > 0 } }
					every_scope_state = {
						limit = { var:silk_var > 0 }
						start_privately_funded_building_construction = building_synthetics_plants
						change_variable = { name = silk_var subtract = 1 }
					}
				}
			}
			every_scope_state = { remove_building = building_silk_greenhouse }	# Remove anyways to prevent ghost buildings
		}
	}
}
effect_calc_autarky_target = {
	every_scope_state = {
		limit = { any_scope_building = { is_building_type = building_autarky_greenhouse	} }
		if = {
			limit = { NOT = { any_scope_building = { is_building_type = building_autarky_farm can_queue_building_levels = 1 } } }
			set_variable = {
				name = infres_autarky_build_target
				value = {
					value		= arable_land
					subtract	= b:building_autarky_greenhouse.level
				}
			}
		}
		if = { limit = { var:infres_autarky_build_target < 0 } remove_variable = infres_autarky_build_target }
	}
}
effect_build_autarky_farms_state = {
	if = {
		limit = { any_scope_building = { is_building_type = building_autarky_farm can_queue_building_levels = 1 } }
		start_building_construction = building_autarky_farm
		start_building_construction = building_autarky_greenhouse
		PREV = { change_variable = { name = counter add = 1 } }
	}
	# else_if = {
		# limit = {
			# any_scope_building = { is_building_type = building_autarky_farm is_under_construction = no }
			# var:infres_autarky_build_target > 0
		# }
		# start_building_construction = building_autarky_greenhouse
	# }
	# change_variable = { name = infres_autarky_build_target subtract = 1 }
}
effect_build_autarky_farms_private_state = {
	if = {
		limit = { any_scope_building = { is_building_type = building_autarky_farm can_queue_building_levels = 1 } }
		start_privately_funded_building_construction = building_autarky_farm
		start_privately_funded_building_construction = building_autarky_greenhouse
		PREV = { change_variable = { name = counter add = 1 } }
	}
	# else_if = {
		# limit = {
			# any_scope_building = { is_building_type = building_autarky_farm is_under_construction = no }
			# var:infres_autarky_build_target > 0
		# }
		# start_privately_funded_building_construction = building_autarky_greenhouse
	# }
	# change_variable = { name = infres_autarky_build_target subtract = 1 }
}
effect_build_autarky_farms = {
	hidden_effect = {
		effect_calc_autarky_target = yes
		set_variable = { name = counter value = 0 }	# Precaution to prevent game-freezes taking too long
		every_scope_state = { effect_delete_finite_agro_state = yes }
		effect_seed_autarky_farms = yes
		while = {	# Striped
			limit = {
				OR = {
					any_scope_state = { free_arable_land > 0 }
					any_scope_building = { is_building_type = building_autarky_greenhouse	level < STATE.arable_land }
				}
				var:counter < 1000
			}
			every_scope_state = {
				limit = {
					OR = {
						free_arable_land > 0
						any_scope_building = { is_building_type = building_autarky_greenhouse	level < STATE.arable_land }
					}
				}
				effect_build_autarky_farms_state = yes
			}
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_autarky_farm is_under_construction = no } }
			while = {	# Striped
				limit = { any_scope_state = { any_scope_building = { is_building_type = building_autarky_farm is_under_construction = no } var:infres_autarky_build_target > 0 } }
				every_scope_state = {
					limit = {
						any_scope_building = { is_building_type = building_autarky_farm is_under_construction = no }
						var:infres_autarky_build_target > 0
					}
					start_building_construction = building_autarky_greenhouse
					change_variable = { name = infres_autarky_build_target subtract = 1 }
				}
			}
		}
	}
	custom_label = lag_warning
	show_as_tooltip = {
		every_scope_state = {
			limit = {
				OR = {
					free_arable_land > 0
					any_scope_building = { is_building_type = building_autarky_greenhouse	level < STATE.arable_land }
				}
			}
			if = {
				limit = { free_arable_land > 0 }
				while = {
					count = free_arable_land
					start_building_construction = building_autarky_farm
					start_building_construction = building_autarky_greenhouse
				}
			}
			if = {
				limit = { var:infres_autarky_build_target > 0 }
				while = {
					count = var:infres_autarky_build_target
					start_building_construction = building_autarky_greenhouse
				}
			}
		}
	}
}
effect_build_autarky_farms_private = {
	hidden_effect = {
		effect_calc_autarky_target = yes
		set_variable = { name = counter value = 0 }	# Precaution to prevent game-freezes taking too long
		every_scope_state = { effect_delete_finite_agro_state = yes }
		effect_seed_autarky_farms_private = yes
		while = {	# Striped
			limit = {
				OR = {
					any_scope_state = { free_arable_land > 0 }
					any_scope_building = { is_building_type = building_autarky_greenhouse	level < STATE.arable_land }
				}
				var:counter < 1000
			}
			every_scope_state = {
				limit = {
					OR = {
						free_arable_land > 0
						any_scope_building = { is_building_type = building_autarky_greenhouse	level < STATE.arable_land }
					}
				}
				effect_build_autarky_farms_private_state = yes
			}
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_autarky_farm is_under_construction = no } }
			while = {	# Striped
				limit = { any_scope_state = { any_scope_building = { is_building_type = building_autarky_farm is_under_construction = no } var:infres_autarky_build_target > 0 } }
				every_scope_state = {
					limit = {
						any_scope_building = { is_building_type = building_autarky_farm is_under_construction = no }
						var:infres_autarky_build_target > 0
					}
					start_privately_funded_building_construction = building_autarky_greenhouse
					change_variable = { name = infres_autarky_build_target subtract = 1 }
				}
			}
		}
	}
	custom_label = lag_warning
	show_as_tooltip = {
		every_scope_state = {
			limit = {
				OR = {
					free_arable_land > 0
					any_scope_building = { is_building_type = building_autarky_greenhouse	level < STATE.arable_land }
				}
			}
			if = {
				limit = { free_arable_land > 0 }
				while = {
					count = free_arable_land
					start_privately_funded_building_construction = building_autarky_farm
					start_privately_funded_building_construction = building_autarky_greenhouse
				}
			}
			if = {
				limit = { var:infres_autarky_build_target > 0 }
				while = {
					count = var:infres_autarky_build_target
					start_privately_funded_building_construction = building_autarky_greenhouse
				}
			}
		}
	}
}
effect_build_logging_state = {
	if = {
		limit = { has_potential_resource = bg_logging			any_scope_building = { is_building_type = building_logging_camp			can_queue_building_levels = 1 }																		}
		start_building_construction = building_logging_camp
	}
	if = {
		limit = { has_potential_resource = bg_rubber			any_scope_building = { is_building_type = building_rubber_plantation	can_queue_building_levels = 1 }	OWNER = { has_technology_researched = rubber_mastication }			}
		start_building_construction = building_rubber_plantation
	}
}
effect_build_logging_private_state = {
	if = {
		limit = { has_potential_resource = bg_logging			any_scope_building = { is_building_type = building_logging_camp			can_queue_building_levels = 1 }																		}
		start_privately_funded_building_construction = building_logging_camp
	}
	if = {
		limit = { has_potential_resource = bg_rubber			any_scope_building = { is_building_type = building_rubber_plantation	can_queue_building_levels = 1 }	OWNER = { has_technology_researched = rubber_mastication }			}
		start_privately_funded_building_construction = building_rubber_plantation
	}
}
effect_build_fishing_state = {
	if = {
		limit = { has_potential_resource = bg_fishing			any_scope_building = { is_building_type = building_fishing_wharf		can_queue_building_levels = 1 }	is_coastal = yes													}
		start_building_construction = building_fishing_wharf
	}
	if = {
		limit = { has_potential_resource = bg_whaling			any_scope_building = { is_building_type = building_whaling_station		can_queue_building_levels = 1 } OWNER = { has_technology_researched = navigation } is_coastal = yes }
		start_building_construction = building_whaling_station
	}
}
effect_build_fishing_private_state = {
	if = {
		limit = { has_potential_resource = bg_fishing			any_scope_building = { is_building_type = building_fishing_wharf		can_queue_building_levels = 1 }	is_coastal = yes													}
		start_privately_funded_building_construction = building_fishing_wharf
	}
	if = {
		limit = { has_potential_resource = bg_whaling			any_scope_building = { is_building_type = building_whaling_station		can_queue_building_levels = 1 } OWNER = { has_technology_researched = navigation } is_coastal = yes }
		start_privately_funded_building_construction = building_whaling_station
	}
}
effect_build_logging = {
	show_as_tooltip = {
		every_scope_state = {
			limit = { has_decree = decree_encourage_resource_industry trigger_build_logging_state = yes }
			while = {
				limit = { trigger_build_logging_state = yes }
				effect_build_logging_state = yes
			}
		}
		every_scope_state = {
			limit = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_logging_state = yes }
			while = {
				limit = { trigger_build_logging_state = yes }
				effect_build_logging_state = yes
			}
		}
	}
	hidden_effect = {
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_resource_industry trigger_build_logging_state = yes } }
			every_scope_state = {
				limit = { has_decree = decree_encourage_resource_industry }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
				effect_build_logging_state = yes
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_logging_state = yes } }
			every_scope_state = {
				limit = { NOT = { has_decree = decree_encourage_resource_industry } }
				effect_build_logging_state = yes
			}
		}
	}
}
effect_build_logging_private = {
	show_as_tooltip = {
		every_scope_state = {
			limit = { has_decree = decree_encourage_resource_industry trigger_build_logging_state = yes }
			while = {
				limit = { trigger_build_logging_state = yes }
				effect_build_logging_private_state = yes
			}
		}
		every_scope_state = {
			limit = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_logging_state = yes }
			while = {
				limit = { trigger_build_logging_state = yes }
				effect_build_logging_private_state = yes
			}
		}
	}
	hidden_effect = {
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_resource_industry trigger_build_logging_state = yes } }
			every_scope_state = {
				limit = { has_decree = decree_encourage_resource_industry }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
				effect_build_logging_private_state = yes
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_logging_state = yes } }
			every_scope_state = {
				limit = { NOT = { has_decree = decree_encourage_resource_industry } }
				effect_build_logging_private_state = yes
			}
		}
	}
}
effect_build_fishing = {
	show_as_tooltip = {
		every_scope_state = {
			limit = { has_decree = decree_encourage_resource_industry trigger_build_fishing_state = yes }
			while = {
				limit = { trigger_build_fishing_state = yes }
				effect_build_fishing_state = yes
			}
		}
		every_scope_state = {
			limit = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_fishing_state = yes }
			while = {
				limit = { trigger_build_fishing_state = yes }
				effect_build_fishing_state = yes
			}
		}
	}
	hidden_effect = {
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_resource_industry trigger_build_fishing_state = yes } }
			every_scope_state = {
				limit = { has_decree = decree_encourage_resource_industry }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
				effect_build_fishing_state = yes
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_fishing_state = yes } }
			every_scope_state = {
				limit = { NOT = { has_decree = decree_encourage_resource_industry } }
				effect_build_fishing_state = yes
			}
		}
	}
}
effect_build_fishing_private = {
	show_as_tooltip = {
		every_scope_state = {
			limit = { has_decree = decree_encourage_resource_industry trigger_build_fishing_state = yes }
			while = {
				limit = { trigger_build_fishing_state = yes }
				effect_build_fishing_private_state = yes
			}
		}
		every_scope_state = {
			limit = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_fishing_state = yes }
			while = {
				limit = { trigger_build_fishing_state = yes }
				effect_build_fishing_private_state = yes
			}
		}
	}
	hidden_effect = {
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_resource_industry trigger_build_fishing_state = yes } }
			every_scope_state = {
				limit = { has_decree = decree_encourage_resource_industry }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
				effect_build_fishing_private_state = yes
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_fishing_state = yes } }
			every_scope_state = {
				limit = { NOT = { has_decree = decree_encourage_resource_industry } }
				effect_build_fishing_private_state = yes
			}
		}
	}
}
effect_build_mining_state = {
	if = {
		limit = { has_potential_resource = bg_gold_mining		any_scope_building = { is_building_type = building_gold_mine			can_queue_building_levels = 1 }	OWNER = { has_technology_researched = prospecting } }
		start_building_construction = building_gold_mine
	}
	if = {
		limit = { has_potential_resource = bg_coal_mining		any_scope_building = { is_building_type = building_coal_mine			can_queue_building_levels = 1 }	OWNER = { has_technology_researched = shaft_mining } }
		start_building_construction = building_coal_mine
	}
	if = {
		limit = { has_potential_resource = bg_iron_mining		any_scope_building = { is_building_type = building_iron_mine			can_queue_building_levels = 1 }	OWNER = { has_technology_researched = shaft_mining } }
		start_building_construction = building_iron_mine
	}
	if = {
		limit = { has_potential_resource = bg_lead_mining		any_scope_building = { is_building_type = building_lead_mine			can_queue_building_levels = 1 }	OWNER = { has_technology_researched = shaft_mining } }
		start_building_construction = building_lead_mine
	}
	if = {
		limit = { has_potential_resource = bg_sulfur_mining		any_scope_building = { is_building_type = building_sulfur_mine			can_queue_building_levels = 1 }	OWNER = { has_technology_researched = shaft_mining } }
		start_building_construction = building_sulfur_mine
	}
	if = {
		limit = { has_potential_resource = bg_oil_extraction	any_scope_building = { is_building_type = building_oil_rig				can_queue_building_levels = 1 }	OWNER = { has_technology_researched = pumpjacks } }
		start_building_construction = building_oil_rig
	}
}
effect_build_mining_private_state = {
	if = {
		limit = { has_potential_resource = bg_gold_mining		any_scope_building = { is_building_type = building_gold_mine			can_queue_building_levels = 1 }	OWNER = { has_technology_researched = prospecting } }
		start_privately_funded_building_construction = building_gold_mine
	}
	if = {
		limit = { has_potential_resource = bg_coal_mining		any_scope_building = { is_building_type = building_coal_mine			can_queue_building_levels = 1 }	OWNER = { has_technology_researched = shaft_mining } }
		start_privately_funded_building_construction = building_coal_mine
	}
	if = {
		limit = { has_potential_resource = bg_iron_mining		any_scope_building = { is_building_type = building_iron_mine			can_queue_building_levels = 1 }	OWNER = { has_technology_researched = shaft_mining } }
		start_privately_funded_building_construction = building_iron_mine
	}
	if = {
		limit = { has_potential_resource = bg_lead_mining		any_scope_building = { is_building_type = building_lead_mine			can_queue_building_levels = 1 }	OWNER = { has_technology_researched = shaft_mining } }
		start_privately_funded_building_construction = building_lead_mine
	}
	if = {
		limit = { has_potential_resource = bg_sulfur_mining		any_scope_building = { is_building_type = building_sulfur_mine			can_queue_building_levels = 1 }	OWNER = { has_technology_researched = shaft_mining } }
		start_privately_funded_building_construction = building_sulfur_mine
	}
	if = {
		limit = { has_potential_resource = bg_oil_extraction	any_scope_building = { is_building_type = building_oil_rig				can_queue_building_levels = 1 }	OWNER = { has_technology_researched = pumpjacks } }
		start_privately_funded_building_construction = building_oil_rig
	}
}
effect_build_resources_state = {
	effect_build_logging_state			= yes
	effect_build_mining_state			= yes
	effect_build_fishing_state			= yes
}
effect_build_resources_private_state = {
	effect_build_logging_private_state	= yes
	effect_build_mining_private_state	= yes
	effect_build_fishing_private_state	= yes
}
effect_build_resources = {
	effect_seed_resources = yes
	custom_tooltip = {
		text = effect_build_resources.tt
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_resource_industry trigger_build_resources_state = yes } }
			every_scope_state = {
				limit = { has_decree = decree_encourage_resource_industry }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
				effect_build_resources_state = yes
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_resources_state = yes } }
			every_scope_state = {
				limit = { NOT = { has_decree = decree_encourage_resource_industry } }
				effect_build_resources_state = yes
			}
		}
	}
}
effect_build_resources_private = {
	effect_seed_resources_private = yes
	custom_tooltip = {
		text = effect_build_resources.tt
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_resource_industry trigger_build_resources_state = yes } }
			every_scope_state = {
				limit = { has_decree = decree_encourage_resource_industry }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
				effect_build_resources_private_state = yes
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_resources_state = yes } }
			every_scope_state = {
				limit = { NOT = { has_decree = decree_encourage_resource_industry } }
				effect_build_resources_private_state = yes
			}
		}
	}
}
effect_calc_autarky_refund = {
	set_variable = {
		name = autarky_refund
		value = {
			value = 0
			if = {
				limit = { has_building = building_autarky_farm }
				add = {
					value = b:building_autarky_farm.level
					multiply = construction_cost_low
				}
			}
			multiply = 1000	# 1k/point
		}
	}
}
effect_calc_agro_refund = {
	set_variable = {
		name = agro_refund
		value = {
			value = 0
			if = {
				limit = { has_building = building_rye_farm }
				add = {
					value = b:building_rye_farm.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_wheat_farm }
				add = {
					value = b:building_wheat_farm.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_maize_farm }
				add = {
					value = b:building_maize_farm.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_rice_farm }
				add = {
					value = b:building_rice_farm.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_millet_farm }
				add = {
					value = b:building_millet_farm.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_livestock_ranch }
				add = {
					value = b:building_livestock_ranch.level
					multiply = construction_cost_low
				}
			}
			multiply = 1000	# 1k/point
		}
	}
}
effect_delete_finite_agro_state = {
	effect_calc_agro_refund = yes
	if = { limit = { has_building = building_rye_farm }				remove_building = building_rye_farm }
	if = { limit = { has_building = building_wheat_farm }			remove_building = building_wheat_farm }
	if = { limit = { has_building = building_maize_farm }			remove_building = building_maize_farm }
	if = { limit = { has_building = building_rice_farm }			remove_building = building_rice_farm }
	if = { limit = { has_building = building_millet_farm }			remove_building = building_millet_farm }
	if = { limit = { has_building = building_livestock_ranch }		remove_building = building_livestock_ranch }
	hidden_effect = {	# Do it even if it doesn't exist, to prevent ghost buildings
		remove_building = building_rye_farm
		remove_building = building_wheat_farm
		remove_building = building_maize_farm
		remove_building = building_rice_farm
		remove_building = building_millet_farm
		remove_building = building_livestock_ranch
	}
	if = { limit = { var:agro_refund > 0 } custom_tooltip = { text = agro_refund.tt OWNER = { add_investment_pool = PREV.var:agro_refund } } }
	remove_variable = agro_refund
}
effect_calc_plant_refund = {
	set_variable = {
		name = plant_refund
		value = {
			value = 0
			if = {
				limit = { has_building = building_vineyard_plantation }
				add = {
					value = b:building_vineyard_plantation.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_coffee_plantation }
				add = {
					value = b:building_coffee_plantation.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_cotton_plantation }
				add = {
					value = b:building_cotton_plantation.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_dye_plantation }
				add = {
					value = b:building_dye_plantation.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_opium_plantation }
				add = {
					value = b:building_opium_plantation.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_tea_plantation }
				add = {
					value = b:building_tea_plantation.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_tobacco_plantation }
				add = {
					value = b:building_tobacco_plantation.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_sugar_plantation }
				add = {
					value = b:building_sugar_plantation.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_banana_plantation }
				add = {
					value = b:building_banana_plantation.level
					multiply = construction_cost_low
				}
			}
			if = {
				limit = { has_building = building_silk_plantation }
				add = {
					value = b:building_silk_plantation.level
					multiply = construction_cost_low
				}
			}
			multiply = 1000	# 1k/point
		}
	}
}
effect_delete_finite_plant_state = {
	effect_calc_plant_refund = yes
	if = { limit = { has_building = building_vineyard_plantation }	remove_building = building_vineyard_plantation }
	if = { limit = { has_building = building_coffee_plantation }	remove_building = building_coffee_plantation }
	if = { limit = { has_building = building_cotton_plantation }	remove_building = building_cotton_plantation }
	if = { limit = { has_building = building_dye_plantation }		remove_building = building_dye_plantation }
	if = { limit = { has_building = building_opium_plantation }		remove_building = building_opium_plantation }
	if = { limit = { has_building = building_tea_plantation }		remove_building = building_tea_plantation }
	if = { limit = { has_building = building_tobacco_plantation }	remove_building = building_tobacco_plantation }
	if = { limit = { has_building = building_sugar_plantation }		remove_building = building_sugar_plantation }
	if = { limit = { has_building = building_banana_plantation }	remove_building = building_banana_plantation }
	if = { limit = { has_building = building_silk_plantation }		remove_building = building_silk_plantation }
	hidden_effect = {	# Do it even if it doesn't exist, to prevent ghost buildings
		remove_building = building_vineyard_plantation
		remove_building = building_coffee_plantation
		remove_building = building_cotton_plantation
		remove_building = building_dye_plantation
		remove_building = building_opium_plantation
		remove_building = building_tea_plantation
		remove_building = building_tobacco_plantation
		remove_building = building_sugar_plantation
		remove_building = building_banana_plantation
		remove_building = building_silk_plantation
	}
	if = { limit = { var:plant_refund > 0 } custom_tooltip = { text = plant_refund.tt OWNER = { add_investment_pool = PREV.var:plant_refund } } }
	remove_variable = plant_refund
}
effect_calc_inf_plant_refund = {	# Todo: Convert to script value -> Figure out how to display script values in loc.
	set_variable = {
		name = inf_plant_refund
		value = {
			value = 0
			if = {
				limit = { has_building = building_vineyard_greenhouse }
				add = {
					value = b:building_vineyard_greenhouse.level
					multiply = construction_cost_medium
				}
			}
			if = {
				limit = { has_building = building_coffee_greenhouse }
				add = {
					value = b:building_coffee_greenhouse.level
					multiply = construction_cost_medium
				}
			}
			if = {
				limit = { has_building = building_cotton_greenhouse }
				add = {
					value = b:building_cotton_greenhouse.level
					multiply = construction_cost_medium
				}
			}
			if = {
				limit = { has_building = building_dye_greenhouse }
				add = {
					value = b:building_dye_greenhouse.level
					multiply = construction_cost_medium
				}
			}
			if = {
				limit = { has_building = building_opium_greenhouse }
				add = {
					value = b:building_opium_greenhouse.level
					multiply = construction_cost_medium
				}
			}
			if = {
				limit = { has_building = building_tea_greenhouse }
				add = {
					value = b:building_tea_greenhouse.level
					multiply = construction_cost_medium
				}
			}
			if = {
				limit = { has_building = building_tobacco_greenhouse }
				add = {
					value = b:building_tobacco_greenhouse.level
					multiply = construction_cost_medium
				}
			}
			if = {
				limit = { has_building = building_sugar_greenhouse }
				add = {
					value = b:building_sugar_greenhouse.level
					multiply = construction_cost_medium
				}
			}
			if = {
				limit = { has_building = building_banana_greenhouse }
				add = {
					value = b:building_banana_greenhouse.level
					multiply = construction_cost_medium
				}
			}
			if = {
				limit = { has_building = building_silk_greenhouse }
				add = {
					value = b:building_silk_greenhouse.level
					multiply = construction_cost_medium
				}
			}
			multiply = 1000	# 1k/point
		}
	}
}
effect_delete_inhospitable = {
	every_scope_state = {
		limit = { OR = { trigger_inhospitable_terrain = yes is_treaty_port = yes } }
		effect_calc_inf_plant_refund = yes
		if = {
			limit = { any_scope_building = { is_building_type = building_vineyard_greenhouse } }
			remove_building = building_vineyard_greenhouse
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_coffee_greenhouse } }
			remove_building = building_coffee_greenhouse
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_cotton_greenhouse } }
			remove_building = building_cotton_greenhouse
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_opium_greenhouse } }
			remove_building = building_opium_greenhouse
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_tea_greenhouse } }
			remove_building = building_tea_greenhouse
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_tobacco_greenhouse } }
			remove_building = building_tobacco_greenhouse
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_sugar_greenhouse } }
			remove_building = building_sugar_greenhouse
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_silk_greenhouse } }
			remove_building = building_silk_greenhouse
		}
		if = { limit = { var:inf_plant_refund > 0 } custom_tooltip = { text = inf_plant_refund.tt OWNER = { add_investment_pool = PREV.var:inf_plant_refund } } }
		remove_variable = inf_plant_refund
	}
}
effect_calc_mil_refund = {
	set_variable = {
		name = mil_refund
		value = {
			value = 0
			if = {
				limit = { has_building = building_arms_industry }
				add = {
					value = b:building_arms_industry.level
					multiply = construction_cost_high
				}
			}
			if = {
				limit = { has_building = building_artillery_foundries }
				add = {
					value = b:building_artillery_foundries.level
					multiply = construction_cost_high
				}
			}
			if = {
				limit = { has_building = building_munition_plants }
				add = {
					value = b:building_munition_plants.level
					multiply = construction_cost_very_high
				}
			}
			multiply = 1000	# 1k/point
		}
	}
}
effect_calc_ship_refund = {
	set_variable = {
		name = ship_refund
		value = {
			value = 0
			if = {
				limit = { has_building = building_shipyards }
				add = {
					value = b:building_shipyards.level
					multiply = construction_cost_high
				}
			}
			if = {
				limit = { has_building = building_military_shipyards }
				add = {
					value = b:building_military_shipyards.level
					multiply = construction_cost_high
				}
			}
			multiply = 1000	# 1k/point
		}
	}
}
effect_delete_mil_non_capital = {
	effect_set_mil_industry_scope = yes
	every_scope_state = {
		limit = { NOT = { THIS = scope:military_industry_state } }
		show_as_tooltip = {
			if = {
				limit = { any_scope_building = { is_building_type = building_arms_industry } }
				remove_building = building_arms_industry
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_artillery_foundries } }
				remove_building = building_artillery_foundries
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_munition_plants } }
				remove_building = building_munition_plants
			}
		}
		hidden_effect = {
			remove_building = building_arms_industry
			remove_building = building_artillery_foundries
			remove_building = building_munition_plants
		}
		if = { limit = { var:mil_refund > 0 } custom_tooltip = { text = mil_refund.tt OWNER = { add_investment_pool = PREV.var:mil_refund } } }
		remove_variable = mil_refund
	}
	every_scope_state = {
		limit = { NOT = { THIS = scope:shipyards_state } }
		show_as_tooltip = {
			if = {
				limit = { any_scope_building = { is_building_type = building_shipyards } }
				remove_building = building_shipyards
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_military_shipyards } }
				remove_building = building_military_shipyards
			}
		}
		hidden_effect = {
			remove_building = building_shipyards
			remove_building = building_military_shipyards
		}
		if = { limit = { var:ship_refund > 0 } custom_tooltip = { text = ship_refund.tt OWNER = { add_investment_pool = PREV.var:ship_refund } } }
		remove_variable = ship_refund
	}
}
effect_calc_ind_refund = {
	set_variable = {
		name = ind_refund
		value = {
			value = 0
			if = {
				limit = { has_building = building_food_industry }
				add = {
					value = b:building_food_industry.level
					multiply = construction_cost_high
				}
			}
			if = {
				limit = { has_building = building_textile_mills }
				add = {
					value = b:building_textile_mills.level
					multiply = construction_cost_high
				}
			}
			if = {
				limit = { has_building = building_furniture_manufacturies }
				add = {
					value = b:building_furniture_manufacturies.level
					multiply = construction_cost_high
				}
			}
			if = {
				limit = { has_building = building_glassworks }
				add = {
					value = b:building_glassworks.level
					multiply = construction_cost_high
				}
			}
			if = {
				limit = { has_building = building_tooling_workshops }
				add = {
					value = b:building_tooling_workshops.level
					multiply = construction_cost_high
				}
			}
			if = {
				limit = { has_building = building_paper_mills }
				add = {
					value = b:building_paper_mills.level
					multiply = construction_cost_high
				}
			}
			if = {
				limit = { has_building = building_chemical_plants }
				add = {
					value = b:building_chemical_plants.level
					multiply = construction_cost_very_high
				}
			}
			if = {
				limit = { has_building = building_explosives_factory }
				add = {
					value = b:building_explosives_factory.level
					multiply = construction_cost_very_high
				}
			}
			if = {
				limit = { has_building = building_synthetics_plants }
				add = {
					value = b:building_synthetics_plants.level
					multiply = construction_cost_very_high
				}
			}
			if = {
				limit = { has_building = building_steel_mills }
				add = {
					value = b:building_steel_mills.level
					multiply = construction_cost_very_high
				}
			}
			if = {
				limit = { has_building = building_motor_industry }
				add = {
					value = b:building_motor_industry.level
					multiply = construction_cost_very_high
				}
			}
			if = {
				limit = { has_building = building_automotive_industry }
				add = {
					value = b:building_automotive_industry.level
					multiply = construction_cost_very_high
				}
			}
			if = {
				limit = { has_building = building_electrics_industry }
				add = {
					value = b:building_electrics_industry.level
					multiply = construction_cost_very_high
				}
			}
			if = {
				limit = { has_building = building_synthetic_oil_plants }
				add = {
					value = b:building_synthetic_oil_plants.level
					multiply = construction_cost_very_high
				}
			}
			if = {
				limit = { has_building = building_charcoal_burner }
				add = {
					value = b:building_charcoal_burner.level
					multiply = construction_cost_high
				}
			}
			if = {
				limit = { has_building = building_arts_academy }
				add = {
					value = b:building_arts_academy.level
					multiply = construction_cost_medium
				}
			}
			multiply = 1000	# 1k/point
		}
	}
}
effect_delete_unincorporated_industry = {
	every_scope_state = {
		limit = {
			OR = {
				state_region = s:STATE_DISTRICT_OF_COLUMBIA
				AND = {
					is_incorporated = no
					incorporation_progress = 0
				}
			}
		}
		effect_calc_ind_refund	= yes
		effect_calc_mil_refund	= yes
		effect_calc_ship_refund = yes
		show_as_tooltip = {
			if = {
				limit = { any_scope_building = { is_building_type = building_food_industry } }
				remove_building = building_food_industry
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_textile_mills } }
				remove_building = building_textile_mills
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_furniture_manufacturies } }
				remove_building = building_furniture_manufacturies
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_glassworks } }
				remove_building = building_glassworks
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_tooling_workshops } }
				remove_building = building_tooling_workshops
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_paper_mills } }
				remove_building = building_paper_mills
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_chemical_plants } }
				remove_building = building_chemical_plants
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_explosives_factory } }
				remove_building = building_explosives_factory
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_synthetics_plants } }
				remove_building = building_synthetics_plants
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_steel_mills } }
				remove_building = building_steel_mills
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_motor_industry } }
				remove_building = building_motor_industry
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_automotive_industry } }
				remove_building = building_automotive_industry
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_electrics_industry } }
				remove_building = building_electrics_industry
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_shipyards } }
				remove_building = building_shipyards
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_military_shipyards } }
				remove_building = building_military_shipyards
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_arms_industry } }
				remove_building = building_arms_industry
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_artillery_foundries } }
				remove_building = building_artillery_foundries
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_munition_plants } }
				remove_building = building_munition_plants
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_synthetic_oil_plants } }
				remove_building = building_synthetic_oil_plants
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_charcoal_burner } }
				remove_building = building_charcoal_burner
			}
			if = {
				limit = { any_scope_building = { is_building_type = building_arts_academy } }
				remove_building = building_arts_academy
			}
		}
		hidden_effect = {	# Remove anyways to prevent ghost buildings
			remove_building = building_food_industry
			remove_building = building_textile_mills
			remove_building = building_furniture_manufacturies
			remove_building = building_glassworks
			remove_building = building_tooling_workshops
			remove_building = building_paper_mills
			remove_building = building_chemical_plants
			remove_building = building_explosives_factory
			remove_building = building_synthetics_plants
			remove_building = building_steel_mills
			remove_building = building_motor_industry
			remove_building = building_automotive_industry
			remove_building = building_electrics_industry
			remove_building = building_shipyards
			remove_building = building_military_shipyards
			remove_building = building_arms_industry
			remove_building = building_artillery_foundries
			remove_building = building_munition_plants
			remove_building = building_synthetic_oil_plants
			remove_building = building_charcoal_burner
			remove_building = building_arts_academy
		}
		if = { limit = { var:ind_refund > 0 } custom_tooltip = { text = ind_refund.tt OWNER = { add_investment_pool = PREV.var:ind_refund } } }
		remove_variable = ind_refund
		if = { limit = { var:mil_refund > 0 } custom_tooltip = { text = mil_refund.tt OWNER = { add_investment_pool = PREV.var:mil_refund } } }
		remove_variable = mil_refund
		if = { limit = { var:ship_refund > 0 } custom_tooltip = { text = ship_refund.tt OWNER = { add_investment_pool = PREV.var:ship_refund } } }
		remove_variable = ship_refund
	}
}
effect_calc_economy_of_scale = {
	set_variable = {
		name = economy_of_scale_target	# Rounded to the next multiple of 25
		value = {
			value =  25	# Base = 20
			if		= { limit = { has_technology_researched = mechanized_workshops }	add		=  25 }	# 30 ->  50
			if		= { limit = { has_technology_researched = shift_work }				add		=  50 }	# 50 -> 100
			min = 0
		}
	}
	every_state = {
		limit = { has_variable = economy_of_scale_target }
		remove_variable = economy_of_scale_target
	}
}
# Industry
effect_calc_industry_target = {
	every_scope_state = {
		remove_variable = food_target
		remove_variable = textile_target
		remove_variable = furniture_target
		remove_variable = glass_target
		remove_variable = tools_target
		remove_variable = paper_target
		remove_variable = fertilizer_target
		remove_variable = explosives_target
		remove_variable = synth_dye_target
		remove_variable = steel_target
		remove_variable = motor_target
		remove_variable = automotive_target
		remove_variable = electronics_target
		remove_variable = charcoal_target
		remove_variable = synth_oil_target
		remove_variable = arts_target
	}
	if = {
		limit = { has_technology_researched = manufacturies }
		every_scope_state = {
			limit = { trigger_incorporated_or_incorporating = yes }
			set_variable = {
				name = food_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_food_industry.level
					if = { limit = { b:building_food_industry = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			set_variable = {
				name = textile_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_textile_mills.level
					if = { limit = { b:building_textile_mills = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			set_variable = {
				name = furniture_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_furniture_manufacturies.level
					if = { limit = { b:building_furniture_manufacturies = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			set_variable = {
				name = glass_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_glassworks.level
					if = { limit = { b:building_glassworks = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			set_variable = {
				name = tools_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_tooling_workshops.level
					if = { limit = { b:building_tooling_workshops = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			set_variable = {
				name = paper_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_paper_mills.level
					if = { limit = { b:building_paper_mills = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			if = {
				limit = { OWNER = { has_technology_researched = distillation } }
				set_variable = {	# intensive_agriculture
					name = fertilizer_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_chemical_plants.level
						if = { limit = { b:building_chemical_plants = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
				set_variable = {	# intensive_agriculture
					name = explosives_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_explosives_factory.level
						if = { limit = { b:building_explosives_factory = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
			if = {
				limit = { OWNER = { has_technology_researched = steelworking } }
				set_variable = {
					name = steel_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_steel_mills.level
						if = { limit = { b:building_steel_mills = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
			if = {
				limit = { OWNER = { has_technology_researched = atmospheric_engine	NOT = { trigger_forbidden_heavy_industry = yes } } }
				set_variable = {
					name = motor_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_motor_industry.level
						if = { limit = { b:building_motor_industry = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
			if = {
				limit = { OWNER = { has_technology_researched = combustion_engine	NOT = { trigger_forbidden_heavy_industry = yes } } }
				set_variable = {
					name = automotive_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_automotive_industry.level
						if = { limit = { b:building_automotive_industry = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
			if = {
				limit = { OWNER = { has_technology_researched = aniline				NOT = { trigger_forbidden_heavy_industry = yes } } }
				set_variable = {
					name = synth_dye_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_synthetics_plants.level
						if = { limit = { b:building_synthetics_plants = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
			if = {
				limit = { OWNER = { has_technology_researched = telephone			NOT = { trigger_forbidden_heavy_industry = yes } } }
				set_variable = {
					name = electronics_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_electrics_industry.level
						if = { limit = { b:building_electrics_industry = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
			set_variable = {
				name = charcoal_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_charcoal_burner.level
					if = { limit = { b:building_charcoal_burner = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			if = {
				limit = { OWNER = { has_technology_researched = distillation } }
				set_variable = {
					name = synth_oil_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_synthetic_oil_plants.level
						if = { limit = { b:building_synthetic_oil_plants = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
			if = {
				limit = { is_incorporated = yes OWNER = { has_technology_researched = romanticism } }
				set_variable = {
					name = arts_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_arts_academy.level
						if = { limit = { b:building_arts_academy = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
		}
	}
}
effect_build_industry_state = {
	if = {
		limit = { var:tools_target > 0 }
		start_building_construction = building_tooling_workshops
		change_variable = { name = tools_target subtract = 1 }
	}
	if = {
		limit = { var:glass_target > 0 }
		start_building_construction = building_glassworks
		change_variable = { name = glass_target subtract = 1 }
	}
	if = {
		limit = { var:textile_target > 0 }
		start_building_construction = building_textile_mills
		change_variable = { name = textile_target subtract = 1 }
	}
	if = {
		limit = { var:furniture_target > 0 }
		start_building_construction = building_furniture_manufacturies
		change_variable = { name = furniture_target subtract = 1 }
	}
	if = {
		limit = { var:paper_target > 0 }
		start_building_construction = building_paper_mills
		change_variable = { name = paper_target subtract = 1 }
	}
	if = {
		limit = { var:food_target > 0 }
		start_building_construction = building_food_industry
		change_variable = { name = food_target subtract = 1 }
	}
	if = {
		limit = { var:charcoal_target > 0 }
		start_building_construction = building_charcoal_burner
		change_variable = { name = charcoal_target subtract = 1 }
	}
	if = {
		limit = { var:steel_target > 0 }
		start_building_construction = building_steel_mills
		change_variable = { name = steel_target subtract = 1 }
	}
	if = {
		limit = { var:fertilizer_target > 0 }
		start_building_construction = building_chemical_plants
		change_variable = { name = fertilizer_target subtract = 1 }
	}
	if = {
		limit = { var:explosives_target > 0 }
		start_building_construction = building_explosives_factory
		change_variable = { name = explosives_target subtract = 1 }
	}
	if = {
		limit = { var:synth_oil_target > 0 }
		start_building_construction = building_synthetic_oil_plants
		change_variable = { name = synth_oil_target subtract = 1 }
	}
	if = {
		limit = { var:motor_target > 0 }
		start_building_construction = building_motor_industry
		change_variable = { name = motor_target subtract = 1 }
	}
	if = {
		limit = { var:automotive_target > 0 }
		start_building_construction = building_automotive_industry
		change_variable = { name = automotive_target subtract = 1 }
	}
	if = {
		limit = { var:synth_dye_target > 0 }
		start_building_construction = building_synthetics_plants
		change_variable = { name = synth_dye_target subtract = 1 }
	}
	if = {
		limit = { var:electronics_target > 0 }
		start_building_construction = building_electrics_industry
		change_variable = { name = electronics_target subtract = 1 }
	}
	if = {
		limit = { var:arts_target > 0 }
		start_building_construction = building_arts_academy
		change_variable = { name = arts_target subtract = 1 }
	}
}
effect_build_industry_private_state = {
	if = {
		limit = { var:tools_target > 0 }
		start_privately_funded_building_construction = building_tooling_workshops
		change_variable = { name = tools_target subtract = 1 }
	}
	if = {
		limit = { var:glass_target > 0 }
		start_privately_funded_building_construction = building_glassworks
		change_variable = { name = glass_target subtract = 1 }
	}
	if = {
		limit = { var:textile_target > 0 }
		start_privately_funded_building_construction = building_textile_mills
		change_variable = { name = textile_target subtract = 1 }
	}
	if = {
		limit = { var:furniture_target > 0 }
		start_privately_funded_building_construction = building_furniture_manufacturies
		change_variable = { name = furniture_target subtract = 1 }
	}
	if = {
		limit = { var:paper_target > 0 }
		start_privately_funded_building_construction = building_paper_mills
		change_variable = { name = paper_target subtract = 1 }
	}
	if = {
		limit = { var:food_target > 0 }
		start_privately_funded_building_construction = building_food_industry
		change_variable = { name = food_target subtract = 1 }
	}
	if = {
		limit = { var:charcoal_target > 0 }
		start_privately_funded_building_construction = building_charcoal_burner
		change_variable = { name = charcoal_target subtract = 1 }
	}
	if = {
		limit = { var:steel_target > 0 }
		start_privately_funded_building_construction = building_steel_mills
		change_variable = { name = steel_target subtract = 1 }
	}
	if = {
		limit = { var:fertilizer_target > 0 }
		start_privately_funded_building_construction = building_chemical_plants
		change_variable = { name = fertilizer_target subtract = 1 }
	}
	if = {
		limit = { var:explosives_target > 0 }
		start_privately_funded_building_construction = building_explosives_factory
		change_variable = { name = explosives_target subtract = 1 }
	}
	if = {
		limit = { var:synth_oil_target > 0 }
		start_privately_funded_building_construction = building_synthetic_oil_plants
		change_variable = { name = synth_oil_target subtract = 1 }
	}
	if = {
		limit = { var:motor_target > 0 }
		start_privately_funded_building_construction = building_motor_industry
		change_variable = { name = motor_target subtract = 1 }
	}
	if = {
		limit = { var:automotive_target > 0 }
		start_privately_funded_building_construction = building_automotive_industry
		change_variable = { name = automotive_target subtract = 1 }
	}
	if = {
		limit = { var:synth_dye_target > 0 }
		start_privately_funded_building_construction = building_synthetics_plants
		change_variable = { name = synth_dye_target subtract = 1 }
	}
	if = {
		limit = { var:electronics_target > 0 }
		start_privately_funded_building_construction = building_electrics_industry
		change_variable = { name = electronics_target subtract = 1 }
	}
	if = {
		limit = { var:arts_target > 0 }
		start_privately_funded_building_construction = building_arts_academy
		change_variable = { name = arts_target subtract = 1 }
	}
}
effect_build_industry_tooltip = {
	show_as_tooltip = {
		every_scope_state = {
			if = {
				limit = { var:tools_target > 0 }
				while = { count = var:tools_target			start_building_construction = building_tooling_workshops }
			}
			if = {
				limit = { var:glass_target > 0 }
				while = { count = var:glass_target			start_building_construction = building_glassworks }
			}
			if = {
				limit = { var:textile_target > 0 }
				while = { count = var:textile_target		start_building_construction = building_textile_mills }
			}
			if = {
				limit = { var:furniture_target > 0 }
				while = { count = var:furniture_target		start_building_construction = building_furniture_manufacturies }
			}
			if = {
				limit = { var:paper_target > 0 }
				while = { count = var:paper_target			start_building_construction = building_paper_mills }
			}
			if = {
				limit = { var:food_target > 0 }
				while = { count = var:food_target			start_building_construction = building_food_industry }
			}
			if = {
				limit = { var:charcoal_target > 0 }
				while = { count = var:charcoal_target		start_building_construction = building_charcoal_burner }
			}
			if = {
				limit = { var:steel_target > 0 }
				while = { count = var:steel_target			start_building_construction = building_steel_mills }
			}
			if = {
				limit = { var:fertilizer_target > 0 }
				while = { count = var:fertilizer_target		start_building_construction = building_chemical_plants }
			}
			if = {
				limit = { var:explosives_target > 0 }
				while = { count = var:explosives_target		start_building_construction = building_explosives_factory }
			}
			if = {
				limit = { var:synth_oil_target > 0 }
				while = { count = var:synth_oil_target		start_building_construction = building_synthetic_oil_plants }
			}
			if = {
				limit = { var:motor_target > 0 }
				while = { count = var:motor_target 			start_building_construction = building_motor_industry }
			}
			if = {
				limit = { var:automotive_target > 0 }
				while = { count = var:automotive_target		start_building_construction = building_automotive_industry }
			}
			if = {
				limit = { var:synth_dye_target > 0 }
				while = { count = var:synth_dye_target		start_building_construction = building_synthetics_plants }
			}
			if = {
				limit = { var:electronics_target > 0 }
				while = { count = var:electronics_target	start_building_construction = building_electrics_industry }
			}
			if = {
				limit = { var:arts_target > 0 }
				while = { count = var:arts_target			start_building_construction = building_arts_academy }
			}
		}
	}
}
effect_build_industry_private_tooltip = {
	show_as_tooltip = {
		every_scope_state = {
			if = {
				limit = { var:tools_target > 0 }
				while = { count = var:tools_target			start_privately_funded_building_construction = building_tooling_workshops }
			}
			if = {
				limit = { var:glass_target > 0 }
				while = { count = var:glass_target			start_privately_funded_building_construction = building_glassworks }
			}
			if = {
				limit = { var:textile_target > 0 }
				while = { count = var:textile_target		start_privately_funded_building_construction = building_textile_mills }
			}
			if = {
				limit = { var:furniture_target > 0 }
				while = { count = var:furniture_target		start_privately_funded_building_construction = building_furniture_manufacturies }
			}
			if = {
				limit = { var:paper_target > 0 }
				while = { count = var:paper_target			start_privately_funded_building_construction = building_paper_mills }
			}
			if = {
				limit = { var:food_target > 0 }
				while = { count = var:food_target			start_privately_funded_building_construction = building_food_industry }
			}
			if = {
				limit = { var:charcoal_target > 0 }
				while = { count = var:charcoal_target		start_privately_funded_building_construction = building_charcoal_burner }
			}
			if = {
				limit = { var:steel_target > 0 }
				while = { count = var:steel_target			start_privately_funded_building_construction = building_steel_mills }
			}
			if = {
				limit = { var:fertilizer_target > 0 }
				while = { count = var:fertilizer_target		start_privately_funded_building_construction = building_chemical_plants }
			}
			if = {
				limit = { var:explosives_target > 0 }
				while = { count = var:explosives_target		start_privately_funded_building_construction = building_explosives_factory }
			}
			if = {
				limit = { var:synth_oil_target > 0 }
				while = { count = var:synth_oil_target		start_privately_funded_building_construction = building_synthetic_oil_plants }
			}
			if = {
				limit = { var:motor_target > 0 }
				while = { count = var:motor_target			start_privately_funded_building_construction = building_motor_industry }
			}
			if = {
				limit = { var:automotive_target > 0 }
				while = { count = var:automotive_target		start_privately_funded_building_construction = building_automotive_industry }
			}
			if = {
				limit = { var:synth_dye_target > 0 }
				while = { count = var:synth_dye_target		start_privately_funded_building_construction = building_synthetics_plants }
			}
			if = {
				limit = { var:electronics_target > 0 }
				while = { count = var:electronics_target	start_privately_funded_building_construction = building_electrics_industry }
			}
			if = {
				limit = { var:arts_target > 0 }
				while = { count = var:arts_target			start_privately_funded_building_construction = building_arts_academy }
			}
		}
	}
}
effect_build_industry_gov = {
	if = {
		limit = { any_scope_state = { count > 2 } }
		set_variable = { name = counter value = 0 }	# Precaution to prevent game-freezes taking too long
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_manufacturing_industry trigger_build_industry_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = { has_decree = decree_encourage_manufacturing_industry }
				effect_build_industry_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_manufacturing_industry } trigger_build_industry_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = {
					trigger_incorporated_or_incorporating = yes
					NOT = { has_decree = decree_encourage_manufacturing_industry }
					trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } }
				}
				effect_build_industry_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
	}
	else = {
		while = {	# Striped
			limit = { any_scope_state = { trigger_build_industry_state = yes } }
			every_scope_state = {
				limit = {
					trigger_incorporated_or_incorporating = yes
					trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } }
				}
				effect_build_industry_state = yes
			}
		}
	}
}
effect_build_industry_ivp = {
	if = {
		limit = { any_scope_state = { count > 2 } }
		set_variable = { name = counter value = 0 }	# Precaution to prevent game-freezes taking too long
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_manufacturing_industry trigger_build_industry_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = { has_decree = decree_encourage_manufacturing_industry }
				effect_build_industry_private_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_manufacturing_industry } trigger_build_industry_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = {
					trigger_incorporated_or_incorporating = yes
					NOT = { has_decree = decree_encourage_manufacturing_industry }
					trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } }
				}
				effect_build_industry_private_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
	}
	else = {
		while = {	# Striped
			limit = { any_scope_state = { trigger_build_industry_state = yes } }
			every_scope_state = {
				limit = {
					trigger_incorporated_or_incorporating = yes
					trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } }
				}
				effect_build_industry_private_state = yes
			}
		}
	}
}
effect_build_industry = {			# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_industry			= yes
	effect_calc_economy_of_scale	= yes
	effect_calc_industry_target		= yes
	custom_tooltip = {
		text = effect_build_industry.tt
		effect_build_industry_gov = yes
	}
	effect_build_industry_tooltip = yes
}
effect_build_industry_private = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_industry			= yes
	effect_calc_economy_of_scale	= yes
	effect_calc_industry_target		= yes
	custom_tooltip = {
		text = effect_build_industry.tt
		effect_build_industry_ivp = yes
	}
	effect_build_industry_private_tooltip = yes
}
effect_build_industry_05 = {		# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_industry			= yes
	set_variable = { name = economy_of_scale_target value = 5 }
	effect_calc_industry_target		= yes
	custom_tooltip = {
		text = effect_build_industry_05.tt
		effect_build_industry_gov = yes
	}
	# effect_build_industry_tooltip = yes
}
effect_build_industry_private_05 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_industry			= yes
	set_variable = { name = economy_of_scale_target value = 5 }
	effect_calc_industry_target		= yes
	custom_tooltip = {
		text = effect_build_industry_05.tt
		effect_build_industry_ivp = yes
	}
	# effect_build_industry_private_tooltip = yes
}
effect_build_industry_25 = {		# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_industry			= yes
	set_variable = { name = economy_of_scale_target value = 25 }
	effect_calc_industry_target		= yes
	custom_tooltip = {
		text = effect_build_industry_25.tt
		effect_build_industry_gov = yes
	}
	# effect_build_industry_tooltip = yes
}
effect_build_industry_private_25 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_industry			= yes
	set_variable = { name = economy_of_scale_target value = 25 }
	effect_calc_industry_target		= yes
	custom_tooltip = {
		text = effect_build_industry_25.tt
		effect_build_industry_ivp = yes
	}
	# effect_build_industry_private_tooltip = yes
}
effect_build_industry_50 = {		# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_industry			= yes
	set_variable = { name = economy_of_scale_target value = 50 }
	effect_calc_industry_target		= yes
	custom_tooltip = {
		text = effect_build_industry_50.tt
		effect_build_industry_gov = yes
	}
	# effect_build_industry_tooltip = yes
}
effect_build_industry_private_50 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_industry			= yes
	set_variable = { name = economy_of_scale_target value = 50 }
	effect_calc_industry_target		= yes
	custom_tooltip = {
		text = effect_build_industry_50.tt
		effect_build_industry_ivp = yes
	}
	# effect_build_industry_private_tooltip = yes
}
# Plantations
effect_calc_plantations_target = {
	every_scope_state = {
		remove_variable = agro_target
		remove_variable = sugar_target
		remove_variable = wine_target
		remove_variable = coffee_target
		remove_variable = cotton_target
		remove_variable = tea_target
		remove_variable = dye_target
		remove_variable = silk_target
		remove_variable = opium_target
		remove_variable = tobacco_target
	}
	if = {
		limit = { has_technology_researched = enclosure }
		every_scope_state = {
			limit = { NOR = { trigger_inhospitable_terrain = yes is_treaty_port = yes } }
			set_variable = {
				name = agro_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_autarky_greenhouse.level
					if = { limit = { b:building_autarky_greenhouse = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			if = {
				limit = { trigger_infres_sugar_allowed = yes }
				set_variable = {
					name = sugar_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_sugar_greenhouse.level
						if = { limit = { b:building_sugar_greenhouse = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
			set_variable = {
				name = wine_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_vineyard_greenhouse.level
					if = { limit = { b:building_vineyard_greenhouse = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			set_variable = {
				name = coffee_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_coffee_greenhouse.level
					if = { limit = { b:building_coffee_greenhouse = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			set_variable = {
				name = cotton_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_cotton_greenhouse.level
					if = { limit = { b:building_cotton_greenhouse = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			set_variable = {
				name = tea_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_tea_greenhouse.level
					if = { limit = { b:building_tea_greenhouse = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			if = {
				limit = { OWNER = { NOT = { has_technology_researched = aniline } } }
				set_variable = {
					name = dye_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_dye_greenhouse.level
						if = { limit = { b:building_dye_greenhouse = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
			if = {
				limit = { OWNER = { NOT = { has_technology_researched = art_silk } } }
				set_variable = {
					name = silk_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_silk_greenhouse.level
						if = { limit = { b:building_silk_greenhouse = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
			if = {
				limit = { OWNER = { NOT = { is_banning_goods = g:opium } } }
				set_variable = {
					name = opium_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_opium_greenhouse.level
						if = { limit = { b:building_opium_greenhouse = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
			if = {
				limit = { OWNER = { NOT = { is_banning_goods = g:tobacco } } }
				set_variable = {
					name = tobacco_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_tobacco_greenhouse.level
						if = { limit = { b:building_tobacco_greenhouse = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
		}
	}
}
effect_build_plantations_state = {
	if = {
		limit = { var:agro_target > 0 }
		start_building_construction = building_autarky_greenhouse
		change_variable = { name = agro_target subtract = 1 }
	}
	if = {
		limit = { var:sugar_target > 0 }
		start_building_construction = building_sugar_greenhouse
		change_variable = { name = sugar_target subtract = 1 }
	}
	if = {
		limit = { var:wine_target > 0 }
		start_building_construction = building_vineyard_greenhouse
		change_variable = { name = wine_target subtract = 1 }
	}
	if = {
		limit = { var:coffee_target > 0 }
		start_building_construction = building_coffee_greenhouse
		change_variable = { name = coffee_target subtract = 1 }
	}
	if = {
		limit = { var:cotton_target > 0 }
		start_building_construction = building_cotton_greenhouse
		change_variable = { name = cotton_target subtract = 1 }
	}
	if = {
		limit = { var:tea_target > 0 }
		start_building_construction = building_tea_greenhouse
		change_variable = { name = tea_target subtract = 1 }
	}
	if = {
		limit = { var:dye_target > 0 }
		start_building_construction = building_dye_greenhouse
		change_variable = { name = dye_target subtract = 1 }
	}
	if = {
		limit = { var:silk_target > 0 }
		start_building_construction = building_silk_greenhouse
		change_variable = { name = silk_target subtract = 1 }
	}
	if = {
		limit = { var:opium_target > 0 }
		start_building_construction = building_opium_greenhouse
		change_variable = { name = opium_target subtract = 1 }
	}
	if = {
		limit = { var:tobacco_target > 0 }
		start_building_construction = building_tobacco_greenhouse
		change_variable = { name = tobacco_target subtract = 1 }
	}
}
effect_build_plantations_private_state = {
	if = {
		limit = { var:agro_target > 0 }
		start_privately_funded_building_construction = building_autarky_greenhouse
		change_variable = { name = agro_target subtract = 1 }
	}
	if = {
		limit = { var:sugar_target > 0 }
		start_privately_funded_building_construction = building_sugar_greenhouse
		change_variable = { name = sugar_target subtract = 1 }
	}
	if = {
		limit = { var:wine_target > 0 }
		start_privately_funded_building_construction = building_vineyard_greenhouse
		change_variable = { name = wine_target subtract = 1 }
	}
	if = {
		limit = { var:coffee_target > 0 }
		start_privately_funded_building_construction = building_coffee_greenhouse
		change_variable = { name = coffee_target subtract = 1 }
	}
	if = {
		limit = { var:cotton_target > 0 }
		start_privately_funded_building_construction = building_cotton_greenhouse
		change_variable = { name = cotton_target subtract = 1 }
	}
	if = {
		limit = { var:tea_target > 0 }
		start_privately_funded_building_construction = building_tea_greenhouse
		change_variable = { name = tea_target subtract = 1 }
	}
	if = {
		limit = { var:dye_target > 0 }
		start_privately_funded_building_construction = building_dye_greenhouse
		change_variable = { name = dye_target subtract = 1 }
	}
	if = {
		limit = { var:silk_target > 0 }
		start_privately_funded_building_construction = building_silk_greenhouse
		change_variable = { name = silk_target subtract = 1 }
	}
	if = {
		limit = { var:opium_target > 0 }
		start_privately_funded_building_construction = building_opium_greenhouse
		change_variable = { name = opium_target subtract = 1 }
	}
	if = {
		limit = { var:tobacco_target > 0 }
		start_privately_funded_building_construction = building_tobacco_greenhouse
		change_variable = { name = tobacco_target subtract = 1 }
	}
}
effect_build_plantations_tooltip = {
	show_as_tooltip = {
		every_scope_state = {
			if = {
				limit = { var:agro_target > 0 }
				while = { count = var:agro_target				start_building_construction = building_autarky_greenhouse }
			}
			if = {
				limit = { var:wine_target > 0 }
				while = { count = var:wine_target				start_building_construction = building_vineyard_greenhouse }
			}
			if = {
				limit = { var:coffee_target > 0 }
				while = { count = var:coffee_target				start_building_construction = building_coffee_greenhouse }
			}
			if = {
				limit = { var:cotton_target > 0 }
				while = { count = var:cotton_target				start_building_construction = building_cotton_greenhouse }
			}
			if = {
				limit = { var:tea_target > 0 }
				while = { count = var:tea_target				start_building_construction = building_tea_greenhouse }
			}
			if = {
				limit = { var:dye_target > 0 }
				while = { count = var:dye_target				start_building_construction = building_dye_greenhouse }
			}
			if = {
				limit = { var:silk_target > 0 }
				while = { count = var:silk_target				start_building_construction = building_silk_greenhouse }
			}
			if = {
				limit = { var:opium_target > 0 }
				while = { count = var:opium_target				start_building_construction = building_opium_greenhouse }
			}
			if = {
				limit = { var:tobacco_target > 0 }
				while = { count = var:tobacco_target			start_building_construction = building_tobacco_greenhouse }
			}
		}
	}
}
effect_build_plantations_private_tooltip = {
	show_as_tooltip = {
		every_scope_state = {
			if = {
				limit = { var:agro_target > 0 }
				while = { count = var:agro_target				start_privately_funded_building_construction = building_autarky_greenhouse }
			}
			if = {
				limit = { var:wine_target > 0 }
				while = { count = var:wine_target				start_privately_funded_building_construction = building_vineyard_greenhouse }
			}
			if = {
				limit = { var:coffee_target > 0 }
				while = { count = var:coffee_target				start_privately_funded_building_construction = building_coffee_greenhouse }
			}
			if = {
				limit = { var:cotton_target > 0 }
				while = { count = var:cotton_target				start_privately_funded_building_construction = building_cotton_greenhouse }
			}
			if = {
				limit = { var:tea_target > 0 }
				while = { count = var:tea_target				start_privately_funded_building_construction = building_tea_greenhouse }
			}
			if = {
				limit = { var:dye_target > 0 }
				while = { count = var:dye_target				start_privately_funded_building_construction = building_dye_greenhouse }
			}
			if = {
				limit = { var:silk_target > 0 }
				while = { count = var:silk_target				start_privately_funded_building_construction = building_silk_greenhouse }
			}
			if = {
				limit = { var:opium_target > 0 }
				while = { count = var:opium_target				start_privately_funded_building_construction = building_opium_greenhouse }
			}
			if = {
				limit = { var:tobacco_target > 0 }
				while = { count = var:tobacco_target			start_privately_funded_building_construction = building_tobacco_greenhouse }
			}
		}
	}
}
effect_build_plantations_gov = {
	if = {
		limit = { any_scope_state = { count > 2 } }
		set_variable = { name = counter value = 0 }	# Precaution to prevent game-freezes taking too long
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_agricultural_industry trigger_build_plantations_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = { has_decree = decree_encourage_agricultural_industry }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
				effect_build_plantations_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_agricultural_industry } trigger_build_plantations_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = {
					NAND = {
						trigger_inhospitable_terrain = yes
						has_decree = decree_encourage_agricultural_industry
						trigger_microstate = yes
					}
				}
				effect_build_plantations_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
	}
	else = {
		while = {	# Striped
			limit = { any_scope_state = { trigger_build_plantations_state = yes } }
			every_scope_state = {
				limit = {
					NAND = {
						trigger_inhospitable_terrain = yes
						trigger_microstate = yes
					}
				}
				effect_build_plantations_state = yes
			}
		}
	}
}
effect_build_plantations_ivp = {
	if = {
		limit = { any_scope_state = { count > 2 } }
		set_variable = { name = counter value = 0 }	# Precaution to prevent game-freezes taking too long
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_agricultural_industry trigger_build_plantations_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = { has_decree = decree_encourage_agricultural_industry }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
				effect_build_plantations_private_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_agricultural_industry } trigger_build_plantations_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = {
					NAND = {
						trigger_inhospitable_terrain = yes
						has_decree = decree_encourage_agricultural_industry
						trigger_microstate = yes
					}
				}
				effect_build_plantations_private_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
	}
	else = {
		while = {	# Striped
			limit = { any_scope_state = { trigger_build_plantations_state = yes } }
			every_scope_state = {
				limit = {
					NAND = {
						trigger_inhospitable_terrain = yes
						trigger_microstate = yes
					}
				}
				effect_build_plantations_private_state = yes
			}
		}
	}
}
effect_build_plantations = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_plantations			= yes
	effect_calc_economy_of_scale	= yes
	effect_calc_plantations_target	= yes
	custom_tooltip = {
		text = effect_build_plantations.tt
		effect_build_plantations_gov = yes
	}
	effect_build_plantations_tooltip = yes
}
effect_build_plantations_private = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_plantations			= yes
	effect_calc_economy_of_scale	= yes
	effect_calc_plantations_target	= yes
	custom_tooltip = {
		text = effect_build_plantations.tt
		effect_build_plantations_ivp = yes
	}
	effect_build_plantations_private_tooltip = yes
}
effect_build_plantations_05 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_plantations				= yes
	set_variable = { name = economy_of_scale_target value = 5 }
	effect_calc_plantations_target		= yes
	custom_tooltip = {
		text = effect_build_plantations_05.tt
		effect_build_plantations_gov = yes
	}
	# effect_build_plantations_tooltip = yes
}
effect_build_plantations_private_05 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_plantations				= yes
	set_variable = { name = economy_of_scale_target value = 5 }
	effect_calc_plantations_target		= yes
	custom_tooltip = {
		text = effect_build_plantations_05.tt
		effect_build_plantations_ivp = yes
	}
	# effect_build_plantations_private_tooltip = yes
}
effect_build_plantations_25 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_plantations				= yes
	set_variable = { name = economy_of_scale_target value = 25 }
	effect_calc_plantations_target		= yes
	custom_tooltip = {
		text = effect_build_plantations_25.tt
		effect_build_plantations_gov = yes
	}
	# effect_build_plantations_tooltip = yes
}
effect_build_plantations_private_25 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_plantations				= yes
	set_variable = { name = economy_of_scale_target value = 25 }
	effect_calc_plantations_target		= yes
	custom_tooltip = {
		text = effect_build_plantations_25.tt
		effect_build_plantations_ivp = yes
	}
	# effect_build_plantations_private_tooltip = yes
}
effect_build_plantations_50 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_plantations			= yes
	set_variable = { name = economy_of_scale_target value = 50 }
	effect_calc_plantations_target	= yes
	custom_tooltip = {
		text = effect_build_plantations_50.tt
		effect_build_plantations_gov = yes
	}
	# effect_build_plantations_tooltip = yes
}
effect_build_plantations_private_50 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_plantations			= yes
	set_variable = { name = economy_of_scale_target value = 50 }
	effect_calc_plantations_target	= yes
	custom_tooltip = {
		text = effect_build_plantations_50.tt
		effect_build_plantations_ivp = yes
	}
	# effect_build_plantations_private_tooltip = yes
}
# Resources
effect_calc_inf_resources_target = {
	every_scope_state = {
		remove_variable = inf_wood_target
		remove_variable = inf_iron_target
		remove_variable = inf_lead_target
		remove_variable = inf_fish_target
		remove_variable = inf_whale_target
	}
	every_scope_state = {
		limit = { NOT = { is_treaty_port = yes } }
		set_variable = {
			name = inf_wood_target
			value = {
				value = OWNER.var:economy_of_scale_target
				subtract = b:building_infres_logging_camp.level
				if = { limit = { b:building_infres_logging_camp = { is_under_construction = yes } } subtract = 1 }
				min = 0
			}
		}
		if = {
			limit = { OWNER = { has_technology_researched = shaft_mining } }
			set_variable = {
				name = inf_iron_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_infres_iron_mine.level
					if = { limit = { b:building_infres_iron_mine = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			set_variable = {
				name = inf_lead_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_infres_lead_mine.level
					if = { limit = { b:building_infres_lead_mine = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
		}
		if = {
			limit = { is_sea_adjacent = yes }
			set_variable = {
				name = inf_fish_target
				value = {
					value = OWNER.var:economy_of_scale_target
					subtract = b:building_infres_fishing_wharf.level
					if = { limit = { b:building_infres_fishing_wharf = { is_under_construction = yes } } subtract = 1 }
					min = 0
				}
			}
			if = {
				limit = { OWNER = { has_technology_researched = navigation } }
				set_variable = {
					name = inf_whale_target
					value = {
						value = OWNER.var:economy_of_scale_target
						subtract = b:building_infres_whaling_station.level
						if = { limit = { b:building_infres_whaling_station = { is_under_construction = yes } } subtract = 1 }
						min = 0
					}
				}
			}
		}
	}
}
effect_build_inf_resources_state = {
	if = {
		limit = { var:inf_wood_target > 0 }
		start_building_construction = building_infres_logging_camp
		change_variable = { name = inf_wood_target subtract = 1 }
	}
	if = {
		limit = { var:inf_iron_target > 0 }
		start_building_construction = building_infres_iron_mine
		change_variable = { name = inf_iron_target subtract = 1 }
	}
	if = {
		limit = { var:inf_lead_target > 0 }
		start_building_construction = building_infres_lead_mine
		change_variable = { name = inf_lead_target subtract = 1 }
	}
	if = {
		limit = { var:inf_fish_target > 0 }
		start_building_construction = building_infres_fishing_wharf
		change_variable = { name = inf_fish_target subtract = 1 }
	}
	if = {
		limit = { var:inf_whale_target > 0 }
		start_building_construction = building_infres_whaling_station
		change_variable = { name = inf_whale_target subtract = 1 }
	}
}
effect_build_inf_resources_private_state = {
	if = {
		limit = { var:inf_wood_target > 0 }
		start_privately_funded_building_construction = building_infres_logging_camp
		change_variable = { name = inf_wood_target subtract = 1 }
	}
	if = {
		limit = { var:inf_iron_target > 0 }
		start_privately_funded_building_construction = building_infres_iron_mine
		change_variable = { name = inf_iron_target subtract = 1 }
	}
	if = {
		limit = { var:inf_lead_target > 0 }
		start_privately_funded_building_construction = building_infres_lead_mine
		change_variable = { name = inf_lead_target subtract = 1 }
	}
	if = {
		limit = { var:inf_fish_target > 0 }
		start_privately_funded_building_construction = building_infres_fishing_wharf
		change_variable = { name = inf_fish_target subtract = 1 }
	}
	if = {
		limit = { var:inf_whale_target > 0 }
		start_privately_funded_building_construction = building_infres_whaling_station
		change_variable = { name = inf_whale_target subtract = 1 }
	}
}
effect_build_inf_resources_tooltip = {
	show_as_tooltip = {
		every_scope_state = {
			if = {
				limit = { var:inf_wood_target > 0 }
				while = { count = var:inf_wood_target			start_building_construction = building_infres_logging_camp }
			}
			if = {
				limit = { var:inf_iron_target > 0 }
				while = { count = var:inf_iron_target			start_building_construction = building_infres_iron_mine }
			}
			if = {
				limit = { var:inf_lead_target > 0 }
				while = { count = var:inf_lead_target			start_building_construction = building_infres_lead_mine }
			}
			if = {
				limit = { var:inf_fish_target > 0 }
				while = { count = var:inf_fish_target			start_building_construction = building_infres_fishing_wharf }
			}
			if = {
				limit = { var:inf_whale_target > 0 }
				while = { count = var:inf_whale_target			start_building_construction = building_infres_whaling_station }
			}
		}
	}
}
effect_build_inf_resources_private_tooltip = {
	show_as_tooltip = {
		every_scope_state = {
			if = {
				limit = { var:inf_wood_target > 0 }
				while = { count = var:inf_wood_target			start_privately_funded_building_construction = building_infres_logging_camp }
			}
			if = {
				limit = { var:inf_iron_target > 0 }
				while = { count = var:inf_iron_target			start_privately_funded_building_construction = building_infres_iron_mine }
			}
			if = {
				limit = { var:inf_lead_target > 0 }
				while = { count = var:inf_lead_target			start_privately_funded_building_construction = building_infres_lead_mine }
			}
			if = {
				limit = { var:inf_fish_target > 0 }
				while = { count = var:inf_fish_target			start_privately_funded_building_construction = building_infres_fishing_wharf }
			}
			if = {
				limit = { var:inf_whale_target > 0 }
				while = { count = var:inf_whale_target			start_privately_funded_building_construction = building_infres_whaling_station }
			}
		}
	}
}
effect_build_inf_resources_gov = {
	if = {
		limit = { any_scope_state = { count > 2 } }
		set_variable = { name = counter value = 0 }	# Precaution to prevent game-freezes taking too long
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_resource_industry trigger_build_inf_resources_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = { has_decree = decree_encourage_resource_industry }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
				effect_build_inf_resources_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_inf_resources_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = {
					NAND = {
						has_decree = decree_encourage_resource_industry
						trigger_microstate = yes
					}
				}
				effect_build_inf_resources_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
	}
	else = {
		while = {	# Striped
			limit = { any_scope_state = { trigger_build_inf_resources_state = yes } }
			every_scope_state = {
				limit = { trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } } }
				effect_build_inf_resources_state = yes
			}
		}
	}
}
effect_build_inf_resources_ivp = {
	if = {
		limit = { any_scope_state = { count > 2 } }
		set_variable = { name = counter value = 0 }	# Precaution to prevent game-freezes taking too long
		while = {	# Striped
			limit = { any_scope_state = { has_decree = decree_encourage_resource_industry trigger_build_inf_resources_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = { has_decree = decree_encourage_resource_industry }	# NOT = { b:building_construction_sector = { is_under_construction = yes } }
				effect_build_inf_resources_private_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
		while = {	# Striped
			limit = { any_scope_state = { NOT = { has_decree = decree_encourage_resource_industry } trigger_build_inf_resources_state = yes } var:counter < 1000 }
			every_scope_state = {
				limit = {
					NAND = {
						has_decree = decree_encourage_resource_industry
						trigger_microstate = yes
					}
				}
				effect_build_inf_resources_private_state = yes
				PREV = { change_variable = { name = counter add = 1 } }
			}
		}
	}
	else = {
		while = {	# Striped
			limit = { any_scope_state = { trigger_build_inf_resources_state = yes } }
			every_scope_state = {
				limit = { trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } } }
				effect_build_inf_resources_private_state = yes
			}
		}
	}
}
effect_build_inf_resources = {			# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_inf_resources			= yes
	effect_calc_economy_of_scale		= yes
	effect_calc_inf_resources_target	= yes
	custom_tooltip = {
		text = effect_build_inf_resources.tt
		effect_build_inf_resources_gov	= yes
	}
	effect_build_inf_resources_tooltip = yes
}
effect_build_inf_resources_private = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_inf_resources			= yes
	effect_calc_economy_of_scale		= yes
	effect_calc_inf_resources_target	= yes
	custom_tooltip = {
		text = effect_build_inf_resources.tt
		effect_build_inf_resources_ivp	= yes
	}
	effect_build_inf_resources_private_tooltip = yes
}
effect_build_inf_resources_25 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_inf_resources			= yes
	set_variable = { name = economy_of_scale_target value = 25 }
	effect_calc_inf_resources_target		= yes
	custom_tooltip = {
		text = effect_build_inf_resources_25.tt
		effect_build_inf_resources_gov	= yes
	}
	# effect_build_inf_resources_tooltip = yes
}
effect_build_inf_resources_private_25 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_inf_resources			= yes
	set_variable = { name = economy_of_scale_target value = 25 }
	effect_calc_inf_resources_target		= yes
	custom_tooltip = {
		text = effect_build_inf_resources_25.tt
		effect_build_inf_resources_ivp	= yes
	}
	# effect_build_inf_resources_private_tooltip = yes
}
effect_build_inf_resources_50 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_inf_resources			= yes
	set_variable = { name = economy_of_scale_target value = 50 }
	effect_calc_inf_resources_target	= yes
	custom_tooltip = {
		text = effect_build_inf_resources_50.tt
		effect_build_inf_resources_gov	= yes
	}
	# effect_build_inf_resources_tooltip = yes
}
effect_build_inf_resources_private_50 = {	# VERY HEAVY - EXECUTE WITH CAUTION
	effect_seed_inf_resources			= yes
	set_variable = { name = economy_of_scale_target value = 50 }
	effect_calc_inf_resources_target	= yes
	custom_tooltip = {
		text = effect_build_inf_resources_50.tt
		effect_build_inf_resources_ivp	= yes
	}
	# effect_build_inf_resources_private_tooltip = yes
}
effect_calc_mil_industry = {	# This one does not delete buildings, so you can fire it as many times as you want.
	set_variable = { name = arms_level	value = 0 }
	set_variable = { name = arty_level	value = 0 }
	set_variable = { name = ammo_level	value = 0 }
	set_variable = { name = ship_level	value = 0 }
	set_variable = { name = wship_level	value = 0 }
	every_scope_state = {
		limit = { NOT = { THIS = scope:military_industry_state } }
		if = {
			limit = { any_scope_building = { is_building_type = building_arms_industry } }
			OWNER = { change_variable = { name = arms_level		add = PREV.b:building_arms_industry.level } }
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_artillery_foundries } }
			OWNER = { change_variable = { name = arty_level		add = PREV.b:building_artillery_foundries.level } }
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_munition_plants } }
			OWNER = { change_variable = { name = ammo_level		add = PREV.b:building_munition_plants.level } }
		}
		effect_calc_mil_refund = yes
	}
	every_scope_state = {
		limit = { NOT = { THIS = scope:shipyards_state } }
		if = {
			limit = { any_scope_building = { is_building_type = building_shipyards } }
			OWNER = { change_variable = { name = ship_level		add = PREV.b:building_shipyards.level } }
		}
		if = {
			limit = { any_scope_building = { is_building_type = building_military_shipyards } }
			OWNER = { change_variable = { name = wship_level	add = PREV.b:building_military_shipyards.level } }
		}
		effect_calc_ship_refund = yes
	}
}
effect_build_mil_industry_private_state = {
	show_as_tooltip = {
		if = {
			limit = { OWNER.var:arms_level	> 0 }
			while = {
				count = OWNER.var:arms_level
				start_privately_funded_building_construction = building_arms_industry
			}
		}
		if = {
			limit = { OWNER.var:arty_level	> 0 }
			while = {
				count = OWNER.var:arty_level
				start_privately_funded_building_construction = building_artillery_foundries
			}
		}
		if = {
			limit = { OWNER.var:ammo_level	> 0 }
			while = {
				count = OWNER.var:ammo_level
				start_privately_funded_building_construction = building_munition_plants
			}
		}
	}
	hidden_effect = {
		while = {
			limit = {
				OR = {
					OWNER.var:arms_level	> 0
					OWNER.var:arty_level	> 0
					OWNER.var:ammo_level	> 0
				}
			}
			if = {
				limit = { OWNER.var:arms_level	> 0 }
				start_privately_funded_building_construction = building_arms_industry
				OWNER = { change_variable = { name = arms_level	subtract = 1 } }
			}
			if = {
				limit = { OWNER.var:arty_level	> 0 }
				start_privately_funded_building_construction = building_artillery_foundries
				OWNER = { change_variable = { name = arty_level	subtract = 1 } }
			}
			if = {
				limit = { OWNER.var:ammo_level	> 0 }
				start_privately_funded_building_construction = building_munition_plants
				OWNER = { change_variable = { name = ammo_level	subtract = 1 } }
			}
		}
	}
}
effect_build_mil_industry_state = {
	show_as_tooltip = {
		if = {
			limit = { OWNER.var:arms_level	> 0 }
			while = {
				count = OWNER.var:arms_level
				start_building_construction = building_arms_industry
			}
		}
		if = {
			limit = { OWNER.var:arty_level	> 0 }
			while = {
				count = OWNER.var:arty_level
				start_building_construction = building_artillery_foundries
			}
		}
		if = {
			limit = { OWNER.var:ammo_level	> 0 }
			while = {
				count = OWNER.var:ammo_level
				start_building_construction = building_munition_plants
			}
		}
	}
	hidden_effect = {
		while = {
			limit = {
				OR = {
					OWNER.var:arms_level	> 0
					OWNER.var:arty_level	> 0
					OWNER.var:ammo_level	> 0
				}
			}
			if = {
				limit = { OWNER.var:arms_level	> 0 }
				start_building_construction = building_arms_industry
				OWNER = { change_variable = { name = arms_level	subtract = 1 } }
			}
			if = {
				limit = { OWNER.var:arty_level	> 0 }
				start_building_construction = building_artillery_foundries
				OWNER = { change_variable = { name = arty_level	subtract = 1 } }
			}
			if = {
				limit = { OWNER.var:ammo_level	> 0 }
				start_building_construction = building_munition_plants
				OWNER = { change_variable = { name = ammo_level	subtract = 1 } }
			}
		}
	}
}
effect_build_mil_industry_coastal_private_state = {
	show_as_tooltip = {
		if = {
			limit = { OWNER.var:ship_level		> 0 }
			while = {
				count = OWNER.var:ship_level
				start_privately_funded_building_construction = building_shipyards
			}
		}
		if = {
			limit = { OWNER.var:wship_level		> 0 }
			while = {
				count = OWNER.var:wship_level
				start_privately_funded_building_construction = building_military_shipyards
			}
		}
	}
	hidden_effect = {
		while = {
			limit = {
				OR = {
					OWNER.var:ship_level		> 0
					OWNER.var:wship_level		> 0
				}
			}
			if = {
				limit = { OWNER.var:ship_level	> 0 }
				start_privately_funded_building_construction = building_shipyards
				OWNER = { change_variable = { name = ship_level	subtract = 1 } }
			}
			if = {
				limit = { OWNER.var:wship_level	> 0 }
				start_privately_funded_building_construction = building_military_shipyards
				OWNER = { change_variable = { name = wship_level	subtract = 1 } }
			}
		}
	}
}
effect_build_mil_industry_coastal_state = {
	show_as_tooltip = {
		if = {
			limit = { OWNER.var:ship_level		> 0 }
			while = {
				count = OWNER.var:ship_level
				start_building_construction = building_shipyards
			}
		}
		if = {
			limit = { OWNER.var:wship_level		> 0 }
			while = {
				count = OWNER.var:wship_level
				start_building_construction = building_military_shipyards
			}
		}
	}
	hidden_effect = {
		while = {
			limit = {
				OR = {
					OWNER.var:ship_level		> 0
					OWNER.var:wship_level		> 0
				}
			}
			if = {
				limit = { OWNER.var:ship_level	> 0 }
				start_building_construction = building_shipyards
				OWNER = { change_variable = { name = ship_level	subtract = 1 } }
			}
			if = {
				limit = { OWNER.var:wship_level	> 0 }
				start_building_construction = building_military_shipyards
				OWNER = { change_variable = { name = wship_level	subtract = 1 } }
			}
		}
	}
}
effect_build_mil_industry = {
	if = {
		limit = {
			OR = {
				has_law = law_type:law_laissez_faire
				has_law = law_type:law_extraction_economy
				# has_company = company_type:company_krupp
				# has_company = company_type:company_rheinmetall
				# has_company = company_type:company_la_rosada
				# has_company = company_type:company_famae
				# has_company = company_type:company_skoda
				# has_company = company_type:company_oevg
				# has_company = company_type:company_hanyang_arsenal
				# has_company = company_type:company_rossi
				# has_company = company_type:company_trubia
				# has_company = company_type:company_zastava
				# has_company = company_type:company_saint_etienne
				# has_company = company_type:company_izhevsk_arms_plant
				# has_company = company_type:company_basic_metalworks
			}
		}
		scope:military_industry_state	= { effect_build_mil_industry_private_state	= yes }
	}
	else = { scope:military_industry_state	= { effect_build_mil_industry_state		= yes } }
	if = {
		limit = {
			OR = {
				has_law = law_type:law_laissez_faire
				has_law = law_type:law_extraction_economy
				# has_company = company_type:company_suez_company
				# has_company = company_type:company_panama_company
				# has_company = company_type:company_foochow_arsenal
				# has_company = company_type:company_estaleiro_maua
				# has_company = company_type:company_sudamericana_de_vapores
				# has_company = company_type:company_basileiades
				# has_company = company_type:company_gotaverken
				# has_company = company_type:company_aker_mek
				# has_company = company_type:company_ap_moller
				# has_company = company_type:company_fcm
				# has_company = company_type:company_schichau
				# has_company = company_type:company_john_brown
				# has_company = company_type:company_wadia_shipbuilders
				# has_company = company_type:company_stt
				# has_company = company_type:company_mitsubishi
				# has_company = company_type:company_william_cramp
				# has_company = company_type:company_basic_shipyards
			}
		}
		scope:shipyards_state		= { effect_build_mil_industry_coastal_private_state	= yes }
	}
	else = { scope:shipyards_state	= { effect_build_mil_industry_coastal_state			= yes } }
}
effect_centralise_war_industry = {
	effect_calc_mil_industry		= yes
	effect_delete_mil_non_capital	= yes
	effect_build_mil_industry		= yes
}
effect_overlord_war_industry = {
	OVERLORD.capital = {
		while = {
			count = 20
			start_privately_funded_building_construction = building_munition_plants
		}
	}
}
effect_fix_puppets = {
	if = {
		limit = { has_technology_researched = enclosure }
		every_subject_or_below = { limit = { NOT = { has_technology_researched = enclosure } }				add_technology_researched = enclosure }
	}
	if = {
		limit = { has_technology_researched = shaft_mining }
		every_subject_or_below = { limit = { NOT = { has_technology_researched = shaft_mining } }			add_technology_researched = shaft_mining }
	}
	if = {
		limit = { has_technology_researched = prospecting }
		every_subject_or_below = { limit = { NOT = { has_technology_researched = prospecting } }			add_technology_researched = prospecting }
	}
	if = {
		limit = { has_technology_researched = intensive_agriculture }
		every_subject_or_below = { limit = { NOT = { has_technology_researched = intensive_agriculture } }	add_technology_researched = intensive_agriculture }
	}
	if = {
		limit = { has_technology_researched = improved_fertilizer }
		every_subject_or_below = { limit = { NOT = { has_technology_researched = improved_fertilizer } }	add_technology_researched = improved_fertilizer }
	}
	if = {
		limit = { has_technology_researched = nitrogen_fixation }
		every_subject_or_below = { limit = { NOT = { has_technology_researched = nitrogen_fixation } }		add_technology_researched = nitrogen_fixation }
	}
	if = {
		limit = { has_technology_researched = mechanized_farming }
		every_subject_or_below = { limit = { NOT = { has_technology_researched = mechanized_farming } }		add_technology_researched = mechanized_farming }
	}
	if = {
		limit = { has_technology_researched = aniline }
		every_subject_or_below = { limit = { NOT = { has_technology_researched = aniline } }				add_technology_researched = aniline }
	}
	if = {
		limit = { has_technology_researched = art_silk }
		every_subject_or_below = { limit = { NOT = { has_technology_researched = art_silk } }				add_technology_researched = art_silk }
	}
	every_state = {	# This puts them in our construction queue instead of theirs - Or it should
		limit = { OWNER = { is_subject_of = ROOT } }
		effect_delete_finite_agro_state		= yes
		effect_delete_finite_plant_state	= yes
		# effect_seed_autarky_farms_state		= yes
		if = { limit = { free_arable_land > 0 } create_building = { building = building_autarky_farm level = arable_land } }
		effect_seed_resources_state			= yes
		if = {
			limit = {
				NOT = { trigger_inhospitable_terrain = yes }
				trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } }
			}
			effect_seed_plantations_state	= yes
		}
		# every_scope_building = { limit = { is_building_type = building_autarky_farm is_subsidized = no } set_subsidized = yes }
	}
	every_country = {
		limit = { is_subject_of = ROOT }
		hidden_effect = { activate_production_method = { building_type = building_autarky_greenhouse		production_method = pm_tools_disabled_subsistence } }
		custom_tooltip = {
			text = effect_tool_fertilizer_switch.tt
			effect_fertilizer_switch = yes
			effect_tools_switch = yes
		}
		effect_replace_dye	= yes
		effect_replace_silk	= yes
		effect_make_admins	= yes
		# effect_build_autarky_farms	= yes
	}
}
effect_fix_customs_union = {
	if = {
		limit = { has_technology_researched = enclosure }
		every_country = {
			limit = {
				trigger_PREV_has_investment_rights = yes
				NOT = { has_technology_researched = enclosure }
			}
			add_technology_researched = enclosure
		}
	}
	if = {
		limit = { has_technology_researched = shaft_mining }
		every_country = {
			limit = {
				trigger_PREV_has_investment_rights = yes
				NOT = { has_technology_researched = shaft_mining }
			}
			add_technology_researched = shaft_mining
		}
	}
	if = {
		limit = { has_technology_researched = prospecting }
		every_country = {
			limit = {
				trigger_PREV_has_investment_rights = yes
				NOT = { has_technology_researched = prospecting }
			}
			add_technology_researched = prospecting
		}
	}
	if = {
		limit = { has_technology_researched = intensive_agriculture }
		every_country = {
			limit = {
				trigger_PREV_has_investment_rights = yes
				NOT = { has_technology_researched = intensive_agriculture }
			}
			add_technology_researched = intensive_agriculture
		}
	}
	if = {
		limit = { has_technology_researched = improved_fertilizer }
		every_country = {
			limit = {
				trigger_PREV_has_investment_rights = yes
				NOT = { has_technology_researched = improved_fertilizer }
			}
			add_technology_researched = improved_fertilizer
		}
	}
	if = {
		limit = { has_technology_researched = nitrogen_fixation }
		every_country = {
			limit = {
				trigger_PREV_has_investment_rights = yes
				NOT = { has_technology_researched = nitrogen_fixation }
			}
			add_technology_researched = nitrogen_fixation
		}
	}
	if = {
		limit = { has_technology_researched = mechanized_farming }
		every_country = {
			limit = {
				trigger_PREV_has_investment_rights = yes
				NOT = { has_technology_researched = mechanized_farming }
			}
			add_technology_researched = mechanized_farming
		}
	}
	if = {
		limit = { has_technology_researched = aniline }
		every_country = {
			limit = {
				trigger_PREV_has_investment_rights = yes
				NOT = { has_technology_researched = aniline }
			}
			add_technology_researched = aniline
		}
	}
	if = {
		limit = { has_technology_researched = art_silk }
		every_country = {
			limit = {
				trigger_PREV_has_investment_rights = yes
				NOT = { has_technology_researched = art_silk }
			}
			add_technology_researched = art_silk
		}
	}
	every_country = {
		limit = { trigger_PREV_has_investment_rights = yes }
		every_scope_state = {
			effect_delete_finite_agro_state		= yes
			effect_delete_finite_plant_state	= yes
			# effect_seed_autarky_farms_state		= yes
			# if = { limit = { free_arable_land > 0 }
				# create_building = {
					# building = building_autarky_farm
					# level = arable_land
					# # add_ownership = {
						# # country = {
							# # country = ROOT
							# # levels = arable_land
						# # }
					# # }
				# }
			# }
			effect_seed_resources_state			= yes
			if = {
				limit = {
					NOT = { trigger_inhospitable_terrain = yes }
					trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } }
				}
				effect_seed_plantations_state	= yes
			}
		}
		hidden_effect = { activate_production_method = { building_type = building_autarky_greenhouse		production_method = pm_tools_disabled_subsistence } }
		custom_tooltip = {
			text = effect_tool_fertilizer_switch.tt
			effect_fertilizer_switch = yes
			effect_tools_switch = yes
		}
		effect_replace_dye	= yes
		effect_replace_silk	= yes
		effect_build_autarky_farms	= yes
	}
}
effect_enslave_discriminated_pops = {
	custom_tooltip = {
		text = "All discriminated pops will be enslaved."
		every_scope_pop = {
			limit = {
				trigger_if		= { limit = { is_employed = yes } is_pop_type = workplace.type.slaves_role }
				trigger_else	= { is_pop_type = laborers }
				pop_acceptance < acceptance_status_4
			}
			change_poptype = pop_type:slaves
		}
	}
}
effect_delete_invalid_subsistence = {
	every_state = {
		limit = { free_arable_land = 0 }
		show_as_tooltip = {
			switch = {
				trigger = has_building
				building_subsistence_farms				= { remove_building = building_subsistence_farms }
				building_subsistence_orchards			= { remove_building = building_subsistence_orchards }
				building_subsistence_pastures			= { remove_building = building_subsistence_pastures }
				building_subsistence_fishing_villages	= { remove_building = building_subsistence_fishing_villages }
				building_subsistence_rice_paddies		= { remove_building = building_subsistence_rice_paddies }
			}
		}
		hidden_effect = {
			remove_building = building_subsistence_farms
			remove_building = building_subsistence_orchards
			remove_building = building_subsistence_pastures
			remove_building = building_subsistence_fishing_villages
			remove_building = building_subsistence_rice_paddies
		}
	}
}
# effect_merge_india = {	# Check for south_asian_heritage in any primary culture
	# random_country = {
		# limit = { OR = { THIS = c:BIC has_variable = india_subject_var } }
		# save_scope_as = BIC_scope
	# }
	# every_state_region = {
		# limit = {
			# OR = {
				# state_is_in_india = yes
				# THIS = s:STATE_MALAYA
				# is_homeland = cu:burmese
				# is_homeland = cu:kachin
			# }
			# NOT = { THIS = s:STATE_TENASSERIM }			# Split with SIAM
		# }
		# every_scope_state = { limit = { NOT = { owner = scope:BIC_scope } } set_state_owner = scope:BIC_scope }
	# }
# }
effect_merge_bic = {
	if = {
		limit = { any_country = { filter = { country_is_in_india = yes } OR = { has_variable = india_subject_var THIS = c:BIC THIS = c:BHT } } }
		random_country = { limit = { country_is_in_india = yes OR = { has_variable = india_subject_var THIS = c:BIC THIS = c:BHT } } save_scope_as = BIC_scope }
	}
	else = { random_country = { limit = { country_is_in_india = yes } save_scope_as = BIC_scope } }
	every_state_region = {
		limit = {
			OR = {
				state_is_in_india = yes
				THIS = s:STATE_MALAYA
				is_homeland = cu:burmese
				is_homeland = cu:kachin
				any_scope_state = {
					state_is_in_southeast_asia = yes
					OWNER = scope:BIC_scope.OVERLORD
				}
			}
			NOT = { THIS = s:STATE_TENASSERIM }			# Split with SIAM
		}
		every_scope_state = { limit = { NOT = { owner = scope:BIC_scope } } set_state_owner = scope:BIC_scope }
	}
}
effect_merge_dei = {
	every_state_region = {
		limit = {
			OR = {
				is_homeland = cu:balinese
				is_homeland = cu:batak
				is_homeland = cu:bornean
				is_homeland = cu:dayak
				is_homeland = cu:javan
				is_homeland = cu:malay
				is_homeland = cu:moluccan
				is_homeland = cu:sumatran
				THIS = s:STATE_WESTERN_NEW_GUINEA
				THIS = s:STATE_EASTERN_NEW_GUINEA
			}
			NOT = { THIS = s:STATE_MALAYA }		# Belongs to Britain
		}
		if		= { limit = { exists = c:DEI } 						every_scope_state = { limit = { NOT = { OWNER = c:DEI } } set_state_owner = c:DEI } }
		else_if	= { limit = { exists = c:IDN } 						every_scope_state = { limit = { NOT = { OWNER = c:IDN } } set_state_owner = c:IDN } }
		else_if	= { limit = { c:BIC = { is_subject_of = ROOT } }	every_scope_state = { limit = { NOT = { OWNER = c:BIC } } set_state_owner = c:BIC } }
		else_if	= { limit = { exists = c:NET } 						every_scope_state = { limit = { NOT = { OWNER = c:NET } } set_state_owner = c:NET } }
		else_if	= { limit = { exists = c:BNL } 						every_scope_state = { limit = { NOT = { OWNER = c:BNL } } set_state_owner = c:BNL } }
		else_if	= { limit = { exists = c:UNL } 						every_scope_state = { limit = { NOT = { OWNER = c:UNL } } set_state_owner = c:UNL } }
	}
}
effect_tobacco_ban = {
	market = {
		every_scope_country = {
			limit = { NOT = { is_banning_goods = g:tobacco } }
			add_banned_goods = g:tobacco
			add_modifier = { name = tobacco_ban_authority }
		}
		every_scope_country = {
			limit = {
				OR = {
					any_scope_building = { is_building_type = building_tobacco_plantation }
					any_scope_building = { is_building_type = building_tobacco_greenhouse }
				}
			}
			show_as_tooltip = {
				every_scope_state = { limit = { has_building = building_tobacco_plantation }		remove_building = building_tobacco_plantation }
				every_scope_state = { limit = { has_building = building_tobacco_greenhouse }	remove_building = building_tobacco_greenhouse }
			}
			hidden_effect = {
				every_scope_state = {
					remove_building = building_tobacco_plantation
					remove_building = building_tobacco_greenhouse
				}
			}
		}
		every_scope_country = {
			limit = { any_primary_culture = { has_cultural_obsession = tobacco } }
			every_primary_culture = {
				limit = { has_cultural_obsession = tobacco }
				remove_cultural_obsession = tobacco
			}
		}
	}
}
effect_remove_tobacco_ban = {
	market = {
		every_scope_country = {
			limit = { is_banning_goods = g:tobacco }
			remove_banned_goods = g:tobacco
			remove_modifier = tobacco_ban_authority
		}
	}
}
effect_default_import_export = {	# set_tariffs_no_priority	set_tariffs_export_priority	set_tariffs_import_priority
	# Military
	if = {
		limit = { any_scope_building = { is_building_type = building_arms_industry } }
		set_tariffs_export_priority	= g:small_arms
	}
	else = { set_tariffs_import_priority	= g:small_arms }
	if = {
		limit = { any_scope_building = { is_building_type = building_artillery_foundries } }
		set_tariffs_export_priority	= g:artillery
	}
	else = { set_tariffs_import_priority	= g:artillery }
	if = {
		limit = { any_scope_building = { is_building_type = building_munition_plants } }
		set_tariffs_export_priority	= g:ammunition
	}
	else = { set_tariffs_import_priority	= g:ammunition }
	set_tariffs_export_priority	= g:aeroplanes
	set_tariffs_export_priority	= g:tanks
	if = {
		limit = { any_scope_building = { is_building_type = building_military_shipyards } has_technology_researched = ironclad_tech }
		set_tariffs_export_priority	= g:manowars
		set_tariffs_export_priority	= g:ironclads
	}
	else_if = {
		limit = { any_scope_building = { is_building_type = building_military_shipyards } NOT = { has_technology_researched = ironclad_tech } }
		set_tariffs_export_priority	= g:manowars
		set_tariffs_import_priority	= g:ironclads
	}
	else = {
		set_tariffs_import_priority	= g:manowars
		set_tariffs_import_priority	= g:ironclads
	}
	# Staple
	set_tariffs_export_priority	= g:fabric
	set_tariffs_export_priority	= g:wood
	set_tariffs_export_priority	= g:groceries
	set_tariffs_export_priority	= g:clothes
	set_tariffs_export_priority	= g:furniture
	set_tariffs_export_priority	= g:paper
	# Industrial
	if = {
		limit = { any_scope_building = { is_building_type = building_shipyards } has_technology_researched = ironclad_tech }
		set_tariffs_export_priority	= g:clippers
		set_tariffs_export_priority	= g:steamers
	}
	else_if = {
		limit = { any_scope_building = { is_building_type = building_shipyards } NOT = { has_technology_researched = ironclad_tech } }
		set_tariffs_export_priority	= g:clippers
		set_tariffs_import_priority	= g:steamers
	}
	else = {
		set_tariffs_import_priority	= g:clippers
		set_tariffs_import_priority	= g:steamers
	}
	set_tariffs_export_priority	= g:silk
	set_tariffs_export_priority	= g:dye
	set_tariffs_export_priority	= g:sulfur
	set_tariffs_export_priority	= g:coal
	set_tariffs_import_priority	= g:iron
	set_tariffs_import_priority	= g:lead
	if = {
		limit = { mg:hardwood = { market_goods_cheaper >= 0.5 } }
		set_tariffs_import_priority			= g:hardwood
	}
	else = { set_tariffs_export_priority	= g:hardwood }
	if = {
		limit = { has_technology_researched = plastics }
		set_tariffs_export_priority			= g:rubber
	}
	else = { set_tariffs_import_priority	= g:rubber }
	set_tariffs_export_priority	= g:oil
	set_tariffs_export_priority	= g:engines
	# set_tariffs_no_priority		= g:steel
	# set_tariffs_no_priority		= g:glass
	set_tariffs_export_priority	= g:fertilizer
	set_tariffs_export_priority	= g:explosives
	set_tariffs_export_priority	= g:explosives
	set_tariffs_export_priority	= g:tools
	# Luxury
	set_tariffs_export_priority	= g:porcelain
	set_tariffs_export_priority	= g:luxury_clothes
	set_tariffs_export_priority	= g:luxury_furniture
	set_tariffs_export_priority	= g:meat
	set_tariffs_export_priority	= g:fruit
	set_tariffs_export_priority	= g:sugar
	set_tariffs_export_priority	= g:liquor
	set_tariffs_export_priority	= g:wine
	set_tariffs_export_priority	= g:tea
	set_tariffs_export_priority	= g:coffee
	set_tariffs_export_priority	= g:tobacco
	set_tariffs_export_priority	= g:opium
	set_tariffs_export_priority	= g:automobiles
	set_tariffs_export_priority	= g:telephones
	set_tariffs_export_priority	= g:radios
	set_tariffs_export_priority	= g:fine_art
}
effect_innovative_general = {
	create_character = {
		female = yes
		is_general = yes
		age = 18
		religion = rel:atheist
		interest_group = ig:ig_armed_forces
		trait_generation = {
			add_trait = innovative
			add_trait = basic_offensive_planner
			add_trait = basic_defensive_strategist
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill			
			}
			if = { limit = { has_trait = traditionalist_commander } remove_trait = traditionalist_commander }
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = {
			if = { limit = { has_ideology = ideology:ideology_traditionalist }													set_ideology = ideology:ideology_atheist }
			if = { limit = { OWNER = c:BIC culture = { has_discrimination_trait = south_asian_heritage } }						change_character_culture = cu:anglo_indian }
			if = { limit = { OWNER = { has_technology_researched = feminism }	has_ideology = ideology:ideology_reformer }		set_ideology = ideology:ideology_feminist_reformer }
		}
	}
}
effect_innovative_admiral = {
	create_character = {
		female = yes
		is_admiral = yes
		age = 18
		religion = rel:atheist
		interest_group = ig:ig_armed_forces
		trait_generation = {
			add_trait = innovative
			add_trait = basic_naval_commander	# 2in1
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill
			}
			if = { limit = { has_trait = traditionalist_commander } remove_trait = traditionalist_commander }
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = {
			if = { limit = { has_ideology = ideology:ideology_traditionalist }													set_ideology = ideology:ideology_moderate }
			if = { limit = { OWNER = c:BIC culture = { has_discrimination_trait = south_asian_heritage } }						change_character_culture = cu:anglo_indian }
		}
	}
}
effect_humanitarian_agitator = {
	create_character = {
		female = yes
		age = 18
		is_agitator = yes
		religion = rel:atheist
		interest_group = ig:ig_armed_forces
		ideology = ideology_humanitarian
		trait_generation = {
			add_trait = innovative
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill
			}
			if = {
				limit = { has_trait = traditionalist_commander }
				remove_trait = traditionalist_commander
			}
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = { add_modifier = { name = modifier_character_popular_adored } }
	}
}
effect_innovative_general_junker = {
	create_character = {
		female = yes
		is_general = yes
		age = 18
		religion = rel:atheist
		interest_group = ig:ig_landowners
		trait_generation = {
			add_trait = innovative
			add_trait = basic_offensive_planner
			add_trait = basic_defensive_strategist
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill			
			}
			if = {
				limit = { has_trait = traditionalist_commander }
				remove_trait = traditionalist_commander
			}
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = {
			if = { limit = { has_ideology = ideology:ideology_traditionalist }													set_ideology = ideology:ideology_moderate }
			if = { limit = { OWNER = c:BIC culture = { has_discrimination_trait = south_asian_heritage } }						change_character_culture = cu:anglo_indian }
			if = { limit = { OWNER = { has_technology_researched = feminism }	has_ideology = ideology:ideology_reformer }		set_ideology = ideology:ideology_feminist_reformer }
		}
	}
}
effect_innovative_admiral_junker = {
	create_character = {
		female = yes
		is_admiral = yes
		age = 18
		religion = rel:atheist
		interest_group = ig:ig_landowners
		trait_generation = {
			add_trait = innovative
			add_trait = basic_naval_commander	# 2in1
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill
			}
			if = {
				limit = { has_trait = traditionalist_commander }
				remove_trait = traditionalist_commander
			}
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = {
			if = { limit = { has_ideology = ideology:ideology_traditionalist }	´												set_ideology = ideology:ideology_moderate }
			if = { limit = { OWNER = c:BIC culture = { has_discrimination_trait = south_asian_heritage } }						change_character_culture = cu:anglo_indian }
		}
	}
}
effect_humanitarian_agitator_junker = {
	create_character = {
		female = yes
		age = 18
		is_agitator = yes
		religion = rel:atheist
		interest_group = ig:ig_landowners
		ideology = ideology_humanitarian
		trait_generation = {
			add_trait = innovative
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill
			}
			if = {
				limit = { has_trait = traditionalist_commander }
				remove_trait = traditionalist_commander
			}
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = { add_modifier = { name = modifier_character_popular_adored } }
	}
}
effect_innovative_general_TU = {
	create_character = {
		female = yes
		is_general = yes
		age = 18
		religion = rel:atheist
		interest_group = ig:ig_trade_unions
		trait_generation = {
			add_trait = innovative
			add_trait = basic_offensive_planner
			add_trait = basic_defensive_strategist
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill			
			}
			if = {
				limit = { has_trait = traditionalist_commander }
				remove_trait = traditionalist_commander
			}
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = {
			if = { limit = { has_ideology = ideology:ideology_traditionalist }													set_ideology = ideology:ideology_moderate }
			if = { limit = { OWNER = c:BIC culture = { has_discrimination_trait = south_asian_heritage } }						change_character_culture = cu:anglo_indian }
			if = { limit = { OWNER = { has_technology_researched = feminism }	has_ideology = ideology:ideology_reformer }		set_ideology = ideology:ideology_feminist_reformer }
		}
	}
}
effect_innovative_admiral_TU = {
	create_character = {
		female = yes
		is_admiral = yes
		age = 18
		religion = rel:atheist
		interest_group = ig:ig_trade_unions
		trait_generation = {
			add_trait = innovative
			add_trait = basic_naval_commander	# 2in1
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill
			}
			if = {
				limit = { has_trait = traditionalist_commander }
				remove_trait = traditionalist_commander
			}
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = {
			if = { limit = { OWNER = c:BIC culture = { has_discrimination_trait = south_asian_heritage } }						change_character_culture = cu:anglo_indian }
			if = { limit = { has_ideology = ideology:ideology_traditionalist }													set_ideology = ideology:ideology_moderate }
		}
	}
}
effect_innovative_general_INT = {
	create_character = {
		female = yes
		is_general = yes
		age = 18
		religion = rel:atheist
		interest_group = ig:ig_intelligentsia
		trait_generation = {
			add_trait = innovative
			add_trait = basic_offensive_planner
			add_trait = basic_defensive_strategist
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill			
			}
			if = {
				limit = { has_trait = traditionalist_commander }
				remove_trait = traditionalist_commander
			}
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = {
			if = { limit = { has_ideology = ideology:ideology_traditionalist }													set_ideology = ideology:ideology_moderate }
			if = { limit = { OWNER = c:BIC culture = { has_discrimination_trait = south_asian_heritage } }						change_character_culture = cu:anglo_indian }
			if = { limit = { OWNER = { has_technology_researched = feminism }	has_ideology = ideology:ideology_reformer }		set_ideology = ideology:ideology_feminist_reformer }
		}
	}
}
effect_innovative_admiral_INT = {
	create_character = {
		female = yes
		is_admiral = yes
		age = 18
		religion = rel:atheist
		interest_group = ig:ig_intelligentsia
		trait_generation = {
			add_trait = innovative
			add_trait = basic_naval_commander	# 2in1
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill
			}
			if = {
				limit = { has_trait = traditionalist_commander }
				remove_trait = traditionalist_commander
			}
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = {
			if = { limit = { has_ideology = ideology:ideology_traditionalist }													set_ideology = ideology:ideology_moderate }
			if = { limit = { OWNER = c:BIC culture = { has_discrimination_trait = south_asian_heritage } }						change_character_culture = cu:anglo_indian }
		}
	}
}
effect_innovative_general_IND = {
	create_character = {
		female = yes
		is_general = yes
		age = 18
		religion = rel:atheist
		interest_group = ig:ig_industrialists
		trait_generation = {
			add_trait = innovative
			add_trait = basic_offensive_planner
			add_trait = basic_defensive_strategist
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill			
			}
			if = {
				limit = { has_trait = traditionalist_commander }
				remove_trait = traditionalist_commander
			}
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = {
			if = { limit = { has_ideology = ideology:ideology_traditionalist }													set_ideology = ideology:ideology_moderate }
			if = { limit = { OWNER = c:BIC culture = { has_discrimination_trait = south_asian_heritage } }						change_character_culture = cu:anglo_indian }
			if = { limit = { OWNER = { has_technology_researched = feminism }	has_ideology = ideology:ideology_reformer }		set_ideology = ideology:ideology_feminist_reformer }
		}
	}
}
effect_innovative_admiral_IND = {
	create_character = {
		female = yes
		is_admiral = yes
		age = 18
		religion = rel:atheist
		interest_group = ig:ig_industrialists
		trait_generation = {
			add_trait = innovative
			add_trait = basic_naval_commander	# 2in1
			if = {
				limit = { trait_value > 0 }
				set_variable = has_historical_traits
				add_experience = trait_value
			}
			else = { add_experience = 4 }
			add_random_trait = personality
			while = { limit = { has_trait = bigoted } remove_trait = bigoted add_random_trait = personality }
			if = {
				limit = { OR = { NOT = { has_variable = has_historical_traits } trait_value <= 3 } }
				add_random_trait = skill
			}
			if = {
				limit = { has_trait = traditionalist_commander }
				remove_trait = traditionalist_commander
			}
			if = { limit = { NOT = { has_modifier = modifier_character_extra_ten_percent_command } } add_modifier = { name = modifier_character_extra_ten_percent_command } }
		}
		on_created = {
			if = { limit = { has_ideology = ideology:ideology_traditionalist }													set_ideology = ideology:ideology_moderate }
			if = { limit = { OWNER = c:BIC culture = { has_discrimination_trait = south_asian_heritage } }						change_character_culture = cu:anglo_indian }
		}
	}
}
effect_build_art = {
	if		= { limit = { var:arts_target <  10 } create_building = { building = building_arts_academy level =  10 } }
	else_if	= { limit = { var:arts_target <  20 } create_building = { building = building_arts_academy level =  20 } }
	else_if	= { limit = { var:arts_target <  30 } create_building = { building = building_arts_academy level =  30 } }
	else_if	= { limit = { var:arts_target <  40 } create_building = { building = building_arts_academy level =  40 } }
	else_if	= { limit = { var:arts_target <  50 } create_building = { building = building_arts_academy level =  50 } }
	else_if	= { limit = { var:arts_target <  60 } create_building = { building = building_arts_academy level =  60 } }
	else_if	= { limit = { var:arts_target <  70 } create_building = { building = building_arts_academy level =  70 } }
	else_if	= { limit = { var:arts_target <  80 } create_building = { building = building_arts_academy level =  80 } }
	else_if	= { limit = { var:arts_target <  90 } create_building = { building = building_arts_academy level =  90 } }
	
	else_if	= { limit = { var:arts_target < 100 } create_building = { building = building_arts_academy level = 100 } }
	else_if	= { limit = { var:arts_target < 110 } create_building = { building = building_arts_academy level = 110 } }
	else_if	= { limit = { var:arts_target < 120 } create_building = { building = building_arts_academy level = 120 } }
	else_if	= { limit = { var:arts_target < 130 } create_building = { building = building_arts_academy level = 130 } }
	else_if	= { limit = { var:arts_target < 140 } create_building = { building = building_arts_academy level = 140 } }
	else_if	= { limit = { var:arts_target < 150 } create_building = { building = building_arts_academy level = 150 } }
	else_if	= { limit = { var:arts_target < 160 } create_building = { building = building_arts_academy level = 160 } }
	else_if	= { limit = { var:arts_target < 170 } create_building = { building = building_arts_academy level = 170 } }
	else_if	= { limit = { var:arts_target < 180 } create_building = { building = building_arts_academy level = 180 } }
	else_if	= { limit = { var:arts_target < 190 } create_building = { building = building_arts_academy level = 190 } }
	
	else_if	= { limit = { var:arts_target < 200 } create_building = { building = building_arts_academy level = 200 } }
	else_if	= { limit = { var:arts_target < 210 } create_building = { building = building_arts_academy level = 210 } }
	else_if	= { limit = { var:arts_target < 220 } create_building = { building = building_arts_academy level = 220 } }
	else_if	= { limit = { var:arts_target < 230 } create_building = { building = building_arts_academy level = 230 } }
	else_if	= { limit = { var:arts_target < 240 } create_building = { building = building_arts_academy level = 240 } }
	else_if	= { limit = { var:arts_target < 250 } create_building = { building = building_arts_academy level = 250 } }
	else_if	= { limit = { var:arts_target < 260 } create_building = { building = building_arts_academy level = 260 } }
	else_if	= { limit = { var:arts_target < 270 } create_building = { building = building_arts_academy level = 270 } }
	else_if	= { limit = { var:arts_target < 280 } create_building = { building = building_arts_academy level = 280 } }
	else_if	= { limit = { var:arts_target < 290 } create_building = { building = building_arts_academy level = 290 } }
	
	else_if	= { limit = { var:arts_target < 300 } create_building = { building = building_arts_academy level = 300 } }
	else_if	= { limit = { var:arts_target < 310 } create_building = { building = building_arts_academy level = 310 } }
	else_if	= { limit = { var:arts_target < 320 } create_building = { building = building_arts_academy level = 320 } }
	else_if	= { limit = { var:arts_target < 330 } create_building = { building = building_arts_academy level = 330 } }
	else_if	= { limit = { var:arts_target < 340 } create_building = { building = building_arts_academy level = 340 } }
	else_if	= { limit = { var:arts_target < 350 } create_building = { building = building_arts_academy level = 350 } }
	else_if	= { limit = { var:arts_target < 360 } create_building = { building = building_arts_academy level = 360 } }
	else_if	= { limit = { var:arts_target < 370 } create_building = { building = building_arts_academy level = 370 } }
	else_if	= { limit = { var:arts_target < 380 } create_building = { building = building_arts_academy level = 380 } }
	else_if	= { limit = { var:arts_target < 390 } create_building = { building = building_arts_academy level = 390 } }
	
	else_if	= { limit = { var:arts_target < 400 } create_building = { building = building_arts_academy level = 400 } }
	else_if	= { limit = { var:arts_target < 410 } create_building = { building = building_arts_academy level = 410 } }
	else_if	= { limit = { var:arts_target < 420 } create_building = { building = building_arts_academy level = 420 } }
	else_if	= { limit = { var:arts_target < 430 } create_building = { building = building_arts_academy level = 430 } }
	else_if	= { limit = { var:arts_target < 440 } create_building = { building = building_arts_academy level = 440 } }
	else_if	= { limit = { var:arts_target < 450 } create_building = { building = building_arts_academy level = 450 } }
	else_if	= { limit = { var:arts_target < 460 } create_building = { building = building_arts_academy level = 460 } }
	else_if	= { limit = { var:arts_target < 470 } create_building = { building = building_arts_academy level = 470 } }
	else_if	= { limit = { var:arts_target < 480 } create_building = { building = building_arts_academy level = 480 } }
	else_if	= { limit = { var:arts_target < 490 } create_building = { building = building_arts_academy level = 490 } }
	
	else_if	= { limit = { var:arts_target < 500 } create_building = { building = building_arts_academy level = 500 } }
	else_if	= { limit = { var:arts_target < 510 } create_building = { building = building_arts_academy level = 510 } }
	else_if	= { limit = { var:arts_target < 520 } create_building = { building = building_arts_academy level = 520 } }
	else_if	= { limit = { var:arts_target < 530 } create_building = { building = building_arts_academy level = 530 } }
	else_if	= { limit = { var:arts_target < 540 } create_building = { building = building_arts_academy level = 540 } }
	else_if	= { limit = { var:arts_target < 550 } create_building = { building = building_arts_academy level = 550 } }
	else_if	= { limit = { var:arts_target < 560 } create_building = { building = building_arts_academy level = 560 } }
	else_if	= { limit = { var:arts_target < 570 } create_building = { building = building_arts_academy level = 570 } }
	else_if	= { limit = { var:arts_target < 580 } create_building = { building = building_arts_academy level = 580 } }
	else_if	= { limit = { var:arts_target < 590 } create_building = { building = building_arts_academy level = 590 } }
	
	else_if	= { limit = { var:arts_target < 600 } create_building = { building = building_arts_academy level = 600 } }
	else_if	= { limit = { var:arts_target < 610 } create_building = { building = building_arts_academy level = 610 } }
	else_if	= { limit = { var:arts_target < 620 } create_building = { building = building_arts_academy level = 620 } }
	else_if	= { limit = { var:arts_target < 630 } create_building = { building = building_arts_academy level = 630 } }
	else_if	= { limit = { var:arts_target < 640 } create_building = { building = building_arts_academy level = 640 } }
	else_if	= { limit = { var:arts_target < 650 } create_building = { building = building_arts_academy level = 650 } }
	else_if	= { limit = { var:arts_target < 660 } create_building = { building = building_arts_academy level = 660 } }
	else_if	= { limit = { var:arts_target < 670 } create_building = { building = building_arts_academy level = 670 } }
	else_if	= { limit = { var:arts_target < 680 } create_building = { building = building_arts_academy level = 680 } }
	else_if	= { limit = { var:arts_target < 690 } create_building = { building = building_arts_academy level = 690 } }
	
	else_if	= { limit = { var:arts_target < 700 } create_building = { building = building_arts_academy level = 700 } }
	else_if	= { limit = { var:arts_target < 710 } create_building = { building = building_arts_academy level = 710 } }
	else_if	= { limit = { var:arts_target < 720 } create_building = { building = building_arts_academy level = 720 } }
	else_if	= { limit = { var:arts_target < 730 } create_building = { building = building_arts_academy level = 730 } }
	else_if	= { limit = { var:arts_target < 740 } create_building = { building = building_arts_academy level = 740 } }
	else_if	= { limit = { var:arts_target < 750 } create_building = { building = building_arts_academy level = 750 } }
	else_if	= { limit = { var:arts_target < 760 } create_building = { building = building_arts_academy level = 760 } }
	else_if	= { limit = { var:arts_target < 770 } create_building = { building = building_arts_academy level = 770 } }
	else_if	= { limit = { var:arts_target < 780 } create_building = { building = building_arts_academy level = 780 } }
	else_if	= { limit = { var:arts_target < 790 } create_building = { building = building_arts_academy level = 790 } }
	
	else_if	= { limit = { var:arts_target < 800 } create_building = { building = building_arts_academy level = 800 } }
	else_if	= { limit = { var:arts_target < 810 } create_building = { building = building_arts_academy level = 810 } }
	else_if	= { limit = { var:arts_target < 820 } create_building = { building = building_arts_academy level = 820 } }
	else_if	= { limit = { var:arts_target < 830 } create_building = { building = building_arts_academy level = 830 } }
	else_if	= { limit = { var:arts_target < 840 } create_building = { building = building_arts_academy level = 840 } }
	else_if	= { limit = { var:arts_target < 850 } create_building = { building = building_arts_academy level = 850 } }
	else_if	= { limit = { var:arts_target < 860 } create_building = { building = building_arts_academy level = 860 } }
	else_if	= { limit = { var:arts_target < 870 } create_building = { building = building_arts_academy level = 870 } }
	else_if	= { limit = { var:arts_target < 880 } create_building = { building = building_arts_academy level = 880 } }
	else_if	= { limit = { var:arts_target < 890 } create_building = { building = building_arts_academy level = 890 } }
	
	else_if	= { limit = { var:arts_target < 900 } create_building = { building = building_arts_academy level = 900 } }
	else_if	= { limit = { var:arts_target < 910 } create_building = { building = building_arts_academy level = 910 } }
	else_if	= { limit = { var:arts_target < 920 } create_building = { building = building_arts_academy level = 920 } }
	else_if	= { limit = { var:arts_target < 930 } create_building = { building = building_arts_academy level = 930 } }
	else_if	= { limit = { var:arts_target < 940 } create_building = { building = building_arts_academy level = 940 } }
	else_if	= { limit = { var:arts_target < 950 } create_building = { building = building_arts_academy level = 950 } }
	else_if	= { limit = { var:arts_target < 960 } create_building = { building = building_arts_academy level = 960 } }
	else_if	= { limit = { var:arts_target < 970 } create_building = { building = building_arts_academy level = 970 } }
	else_if	= { limit = { var:arts_target < 980 } create_building = { building = building_arts_academy level = 980 } }
	else_if	= { limit = { var:arts_target < 990 } create_building = { building = building_arts_academy level = 990 } }
	
	else_if	= { limit = { var:arts_target <1000 } create_building = { building = building_arts_academy level =1000 } }
}
effect_autarky_ownership = {
	every_scope_building = {
		is_building_type = building_autarky_farm
		add_ownership = {
			building = {
				type	= building_manor_house
				country	= "OWNER"
				levels	= 1
				region	= STATE.state_region
			}
		}
	}
}
effect_sovereign_wealth_fund = {
	if = {
		limit = { has_company = company_type:company_sovereign_wealth_fund }
		save_temporary_scope_as = country_scope
		every_country = {
			limit = {
				OR = {
					THIS = ROOT
					trigger_PREV_has_investment_rights = yes
				}
			}
			every_scope_state = {
				limit = { has_potential_resource = bg_coal_mining }
				create_building = { building = "building_coal_mine"						add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 400 points x 1k/point in Millions
			}
			every_scope_state = {
				limit = { has_potential_resource = bg_iron_mining }
				create_building = { building = "building_iron_mine"						add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 400 points x 1k/point in Millions
			}
			every_scope_state = {
				limit = { has_potential_resource = bg_lead_mining }
				create_building = { building = "building_lead_mine"						add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 400 points x 1k/point in Millions
			}
			every_scope_state = {
				limit = { has_potential_resource = bg_sulfur_mining }
				create_building = { building = "building_sulfur_mine"					add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 400 points x 1k/point in Millions
			}
			every_scope_state = {
				limit = { has_potential_resource = bg_gold_mining }
				create_building = { building = "building_gold_mine"						add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 400 points x 1k/point in Millions
			}
			every_scope_state = {
				limit = { has_potential_resource = bg_fishing }
				create_building = { building = "building_fishing_wharf"					add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.2 } }	# Every building costs 200 points x 1k/point in Millions
			}
			every_scope_state = {
				limit = { has_potential_resource = bg_whaling }
				create_building = { building = "building_whaling_station"				add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.2 } }	# Every building costs 200 points x 1k/point in Millions
			}
			every_scope_state = {
				limit = { has_potential_resource = bg_logging }
				create_building = { building = "building_logging_camp"					add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.2 } }	# Every building costs 200 points x 1k/point in Millions
			}
			every_scope_state = {
				limit = { has_potential_resource = bg_rubber }
				create_building = { building = "building_rubber_plantation"				add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.2 } }	# Every building costs 200 points x 1k/point in Millions
			}
			every_scope_state = {
				limit = { has_potential_resource = bg_oil_extraction }
				create_building = { building = "building_oil_rig"						add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 400 points x 1k/point in Millions
			}
			every_scope_state = {
				create_building = { building = "building_infres_logging_camp"			add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.2 } }	# Every building costs 200 points x 1k/point in Millions
			}
			every_scope_state = {
				limit = { is_sea_adjacent = yes }
				create_building = { building = "building_infres_fishing_wharf"			add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.2 } }	# Every building costs 200 points x 1k/point in Millions
			}
			every_scope_state = {
				limit = { is_sea_adjacent = yes }
				create_building = { building = "building_infres_whaling_station"		add_ownership = { company = { type = company_sovereign_wealth_fund country = "scope:country_scope" levels = 1 } } }
				ROOT = { change_variable = { name = loans_var add = 0.2 } }	# Every building costs 200 points x 1k/point in Millions
			}
		}
	}
}
effect_prussian_state_railways = {
	if = {
		limit = { has_company = company_type:company_prussian_state_railways }
		save_temporary_scope_as = country_scope
		every_scope_state = {
			limit = { ROOT = { has_technology_researched = railways } }
			if		= { limit = { has_building = building_motor_industry }	set_variable = { name = old_level value = b:building_motor_industry.level } }
			else	= {														set_variable = { name = old_level value = 0 } }
			create_building = { building = "building_motor_industry" add_ownership = { company = { type = company_prussian_state_railways country = "scope:country_scope" levels = 1 } } }
			if = {
				limit = { b:building_motor_industry.level > var:old_level }	# Required to prevent division by zero errors
				set_variable = {
					name = temp_price
					value = {
						value		= b:building_motor_industry.level
						subtract	= var:old_level
						multiply = {
							value	= construction_cost_very_high	# Building price in construction points
							divide	= 1000							# 1k/point in Millions
						}
						min			= 0
					}
				}
				ROOT = { change_variable = { name = loans_var add = PREV.var:temp_price } }
			}
			remove_variable = old_level
			remove_variable = temp_price
		}
		every_country = {
			limit = {
				OR = {
					THIS = ROOT
					trigger_PREV_has_investment_rights = yes
				}
			}
			every_scope_state = {
				limit = { ROOT = { has_technology_researched = railways } }
				if		= { limit = { has_building = building_railway }			set_variable = { name = old_level value = b:building_railway.level } }
				else	= {														set_variable = { name = old_level value = 0 } }
				create_building = { building = "building_railway" subsidized = yes add_ownership = { company = { type = company_prussian_state_railways country = "scope:country_scope" levels = 1 } } }
				if = {
					limit = { b:building_railway.level > var:old_level }	# Required to prevent division by zero errors
					set_variable = {
						name = temp_price
						value = {
							value		= b:building_railway.level
							subtract	= var:old_level
							multiply = {
								value	= construction_cost_very_high	# Building price in construction points
								divide	= 1000							# 1k/point in Millions
							}
							min			= 0
						}
					}
					ROOT = { change_variable = { name = loans_var add = PREV.var:temp_price } }
				}
				remove_variable = old_level
				remove_variable = temp_price
			}
			every_scope_state = {
				limit = { ROOT = { has_technology_researched = electrical_generation } }
				if		= { limit = { has_building = building_power_plant }		set_variable = { name = old_level value = b:building_power_plant.level } }
				else	= {														set_variable = { name = old_level value = 0 } }
				create_building = { building = "building_power_plant" subsidized = yes add_ownership = { company = { type = company_prussian_state_railways country = "scope:country_scope" levels = 1 } } }
				if = {
					limit = { b:building_power_plant.level > var:old_level }	# Required to prevent division by zero errors
					set_variable = {
						name = temp_price
						value = {
							value		= b:building_power_plant.level
							subtract	= var:old_level
							multiply = {
								value	= construction_cost_very_high	# Building price in construction points
								divide	= 1000							# 1k/point in Millions
							}
							min			= 0
						}
					}
					ROOT = { change_variable = { name = loans_var add = PREV.var:temp_price } }
				}
				remove_variable = old_level
				remove_variable = temp_price
			}
		}
	}
}
effect_edeka = {
	if = {
		limit = { has_company = company_type:company_edeka }
		save_temporary_scope_as = country_scope
		every_scope_state = {
			limit = { OWNER = { has_technology_researched = manufacturies } }
			create_building = { building = "building_food_industry"					add_ownership = { company = { type = company_edeka country = "scope:country_scope" levels = 1 } } }
			create_building = { building = "building_textile_mills"					add_ownership = { company = { type = company_edeka country = "scope:country_scope" levels = 1 } } }
			create_building = { building = "building_furniture_manufacturies"		add_ownership = { company = { type = company_edeka country = "scope:country_scope" levels = 1 } } }
			create_building = { building = "building_glassworks"					add_ownership = { company = { type = company_edeka country = "scope:country_scope" levels = 1 } } }
			ROOT = { change_variable = { name = loans_var add = 2.4 } }	# Every building costs 600 points x 1k/point in Millions
		}
		every_scope_state = {
			limit = { OWNER = { has_technology_researched = enclosure } }
			create_building = { building = "building_autarky_greenhouse"	add_ownership = { company = { type = company_edeka country = "scope:country_scope" levels = 1 } } }
			create_building = { building = "building_vineyard_greenhouse"	add_ownership = { company = { type = company_edeka country = "scope:country_scope" levels = 1 } } }
			create_building = { building = "building_coffee_greenhouse"		add_ownership = { company = { type = company_edeka country = "scope:country_scope" levels = 1 } } }
			create_building = { building = "building_tea_greenhouse"			add_ownership = { company = { type = company_edeka country = "scope:country_scope" levels = 1 } } }
			create_building = { building = "building_opium_greenhouse"		add_ownership = { company = { type = company_edeka country = "scope:country_scope" levels = 1 } } }
			ROOT = { change_variable = { name = loans_var add = 1.0 } }	# Every building costs 200 points x 1k/point in Millions
		}
	}
}
effect_beic = {
	if = {
		limit = { has_company = company_type:company_east_india_company }
		save_temporary_scope_as = country_scope
		every_scope_state = {
			limit = { OWNER = { has_technology_researched = enclosure } }
			create_building = { building = "building_tea_greenhouse"			add_ownership = { company = { type = company_east_india_company country = "scope:country_scope" levels = 1 } } }
			create_building = { building = "building_tobacco_greenhouse"		add_ownership = { company = { type = company_east_india_company country = "scope:country_scope" levels = 1 } } }
			create_building = { building = "building_opium_greenhouse"		add_ownership = { company = { type = company_east_india_company country = "scope:country_scope" levels = 1 } } }
			ROOT = { change_variable = { name = loans_var add = 0.6 } }	# Every building costs 200 points x 1k/point in Millions
		}
	}
	else_if = {
		limit = { can_establish_company = yes }
		add_company = company_type:company_east_india_company
		company:company_east_india_company = { set_company_establishment_date = 1600.12.31 set_company_state_region = s:STATE_WEST_BENGAL }
		save_temporary_scope_as = country_scope
		every_scope_state = {
			limit = { OWNER = { has_technology_researched = enclosure } state_is_in_india = yes }
			create_building = { building = "building_tea_greenhouse"			add_ownership = { company = { type = company_east_india_company country = "scope:country_scope" levels = 1 } } }
			create_building = { building = "building_tobacco_greenhouse"		add_ownership = { company = { type = company_east_india_company country = "scope:country_scope" levels = 1 } } }
			create_building = { building = "building_opium_greenhouse"		add_ownership = { company = { type = company_east_india_company country = "scope:country_scope" levels = 1 } } }
			ROOT = { change_variable = { name = loans_var add = 0.6 } }	# Every building costs 200 points x 1k/point in Millions
		}
	}
}
effect_indian_railway = {
	if = {
		limit = { has_company = company_type:company_great_indian_railway }
		save_temporary_scope_as = country_scope
		every_scope_state = {
			limit = { ROOT = { has_technology_researched = railways } }
			if		= { limit = { has_building = building_motor_industry }	set_variable = { name = old_level value = b:building_motor_industry.level } }
			else	= {														set_variable = { name = old_level value = 0 } }
			create_building = { building = "building_motor_industry" add_ownership = { company = { type = company_great_indian_railway country = "scope:country_scope" levels = 1 } } }
			if = {
				limit = { b:building_motor_industry.level > var:old_level }	# Required to prevent division by zero errors
				set_variable = {
					name = temp_price
					value = {
						value		= b:building_motor_industry.level
						subtract	= var:old_level
						multiply = {
							value	= construction_cost_very_high	# Building price in construction points
							divide	= 1000							# 1k/point in Millions
						}
						min			= 0
					}
				}
				ROOT = { change_variable = { name = loans_var add = PREV.var:temp_price } }
			}
			remove_variable = old_level
			remove_variable = temp_price
		}
		every_country = {
			limit = {
				OR = {
					THIS = ROOT
					is_subject_of = ROOT
					trigger_PREV_has_investment_rights = yes
				}
			}
			every_scope_state = {
				limit = { ROOT = { has_technology_researched = railways } }
				if		= { limit = { has_building = building_railway }			set_variable = { name = old_level value = b:building_railway.level } }
				else	= {														set_variable = { name = old_level value = 0 } }
				create_building = { building = "building_railway" subsidized = yes add_ownership = { company = { type = company_great_indian_railway country = "scope:country_scope" levels = 1 } } }
				if = {
					limit = { b:building_railway.level > var:old_level }	# Required to prevent division by zero errors
					set_variable = {
						name = temp_price
						value = {
							value		= b:building_railway.level
							subtract	= var:old_level
							multiply = {
								value	= construction_cost_very_high	# Building price in construction points
								divide	= 1000						# 1k/point in Millions
							}
							min			= 0
						}
					}
					ROOT = { change_variable = { name = loans_var add = PREV.var:temp_price } }
				}
				remove_variable = old_level
				remove_variable = temp_price
			}
		}
	}
}
effect_company_construction = {
	if = {
		limit = { has_company = company_type:company_construction_power_bloc }
		save_temporary_scope_as = country_scope
		every_scope_state = {
			limit = { ROOT = { has_technology_researched = manufacturies } }
			create_building = { building = "building_glassworks"		add_ownership = { company = { type = company_construction_power_bloc country = "scope:country_scope" levels = 5 } } }
			ROOT = { change_variable = { name = loans_var add = 3.0 } }	# Every building costs 600 points x 1k/point in Millions
		}
		every_scope_state = {
			limit = { ROOT = { has_technology_researched = manufacturies } }
			create_building = { building = "building_tooling_workshops"	add_ownership = { company = { type = company_construction_power_bloc country = "scope:country_scope" levels = 5 } } }
			ROOT = { change_variable = { name = loans_var add = 3.0 } }	# Every building costs 600 points x 1k/point in Millions
		}
		every_scope_state = {
			limit = { ROOT = { has_technology_researched = steelworking } }
			create_building = { building = "building_steel_mills"		add_ownership = { company = { type = company_construction_power_bloc country = "scope:country_scope" levels = 5 } } }
			ROOT = { change_variable = { name = loans_var add = 4.0 } }	# Every building costs 800 points x 1k/point in Millions
		}
	}
}
effect_recalc_build_options = {
	every_state = {
		remove_variable = must_destroy_building
		effect_calc_autarky_refund		= yes
		effect_calc_agro_refund			= yes
		effect_calc_plant_refund		= yes
		effect_calc_inf_plant_refund	= yes
		effect_calc_ind_refund			= yes
	}
	effect_calc_const					= yes
	effect_calc_infres_const			= yes
	effect_calc_unis					= yes
	effect_calc_ports					= yes
	effect_calc_admins					= yes
	effect_calc_railways				= yes
	effect_calc_powerplants				= yes
	effect_calc_dye						= yes
	effect_calc_silk					= yes
	effect_calc_mil_industry			= yes
	effect_calc_economy_of_scale		= yes
	effect_calc_industry_target			= yes
	effect_calc_plantations_target		= yes
	effect_calc_inf_resources_target	= yes
	effect_calc_autarky_target			= yes
}
effect_claim_homelands = {
	every_state = {
		limit = { is_homeland_of_country_cultures = ROOT NOR = { OWNER = ROOT has_claim_by = ROOT } }
		state_region = { add_claim = ROOT }
	}
}
effect_take_homelands = {
	every_state = {
		limit = { is_homeland_of_country_cultures = ROOT NOT = { OWNER = ROOT } }
		set_state_owner = ROOT
	}
}
effect_unincorporate_non_homelands = {
	every_scope_state = {
		limit = { NOT = { is_homeland_of_country_cultures = ROOT } is_incorporated = yes }
		set_state_type = unincorporated
	}
}
effect_art_patronage = {
	if = {
		limit = { has_building = building_arts_academy }
		if = {
			limit = { is_production_method_active = { building_type = building_arts_academy production_method = pm_traditional_patronage } NOT = { has_modifier = modifier_traditional_patronage } }
			add_modifier	= modifier_traditional_patronage
			remove_modifier	= modifier_bourgeoisie_patronage
			remove_modifier	= modifier_independent_artists
		}
		else_if = {
			limit = { is_production_method_active = { building_type = building_arts_academy production_method = pm_bourgeoisie_patronage } NOT = { has_modifier = modifier_bourgeoisie_patronage } }
			add_modifier	= modifier_bourgeoisie_patronage
			remove_modifier	= modifier_traditional_patronage
			remove_modifier	= modifier_independent_artists
		}
		else_if = {
			limit = { is_production_method_active = { building_type = building_arts_academy production_method = pm_independent_artists } NOT = { has_modifier = modifier_independent_artists } }
			add_modifier	= modifier_independent_artists
			remove_modifier	= modifier_traditional_patronage
			remove_modifier	= modifier_bourgeoisie_patronage
		}
	}
	else = {
		while = { limit = { has_modifier = modifier_traditional_patronage }	remove_modifier	= modifier_traditional_patronage }
		while = { limit = { has_modifier = modifier_bourgeoisie_patronage }	remove_modifier	= modifier_bourgeoisie_patronage }
		while = { limit = { has_modifier = modifier_independent_artists }	remove_modifier	= modifier_independent_artists }
	}
}
effect_remove_subject_var = {
	every_country = {
		limit = {
			has_variable = india_subject_var
			any_primary_culture = { has_discrimination_trait = south_asian_heritage }
		}
		custom_label = effect_remove_subject_var.tt
		remove_variable = india_subject_var
	}
	every_country = {
		limit = {
			has_variable = indonesia_subject_var
			any_primary_culture = { has_discrimination_trait = southeast_asian_heritage }
		}
		custom_label = effect_remove_subject_var.tt
		remove_variable = indonesia_subject_var
	}
}
effect_reset_autarky_pm = {
	switch = {
		trigger = has_law
		law_type:law_serfdom = {
			if = {
				limit = { is_production_method_active	= { building_type = building_autarky_farm	production_method = pm_serfdom } }
				activate_production_method				= { building_type = building_autarky_farm	production_method = pm_serfdom }
			}
		}
		law_type:law_homesteading = {
			if = {
				limit = { is_production_method_active	= { building_type = building_autarky_farm	production_method = pm_homesteading_building_subsistence } }
				activate_production_method				= { building_type = building_autarky_farm	production_method = pm_homesteading_building_subsistence }
			}
		}
		fallback = {
			if = {
				limit = { is_production_method_active	= { building_type = building_autarky_farm	production_method = pm_serfdom_no } }
				activate_production_method				= { building_type = building_autarky_farm	production_method = pm_serfdom_no }
			}
		}
	}
}
effect_instant_seed_autarky_ivr = {
	save_temporary_scope_as = country_scope
	every_scope_state = {
		limit = { NOT = { has_building = building_autarky_farm } }
		create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels = 1 } } }
		ROOT = { change_variable = { name = loans_var add = 0.2 } }	# Every building costs 200 points x 1k/point in Millions
	}
	every_country = {
		limit = { trigger_PREV_has_investment_rights = yes }
		every_scope_state = {
			limit = { NOT = { has_building = building_autarky_farm } }
			create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels = 1 } } }
			ROOT = { change_variable = { name = loans_var add = 0.2 } }	# Every building costs 200 points x 1k/point in Millions
		}
		every_scope_state = {
			limit = { NOT = { has_building = building_autarky_greenhouse } }
			create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels = 1 } } }
			ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 200 points x 1k/point in Millions
		}
		hidden_effect = { effect_reset_autarky_pm = yes }
		hidden_effect = { activate_production_method = { building_type = building_autarky_greenhouse		production_method = pm_tools_disabled_subsistence } }
		custom_tooltip = {
			text = effect_tool_fertilizer_switch.tt
			effect_fertilizer_switch = yes
			effect_tools_switch = yes
		}
	}
}
effect_instant_build_autarky_ivr = {
	save_temporary_scope_as = country_scope
	every_country = {
		limit = {
			OR = {
				THIS = ROOT
				trigger_PREV_has_investment_rights = yes
			}
		}
		every_scope_state = { effect_delete_finite_agro_state = yes }
		every_scope_state = {
			limit = { b:building_autarky_farm.level < arable_land }
			set_variable = { name = old_level value = b:building_autarky_farm.level }
			if		= { limit = { arable_land <=  11 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =   10 } } } }
			else_if	= { limit = { arable_land <=  21 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =   20 } } } }
			else_if	= { limit = { arable_land <=  31 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =   30 } } } }
			else_if	= { limit = { arable_land <=  41 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =   40 } } } }
			else_if	= { limit = { arable_land <=  51 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =   50 } } } }
			else_if	= { limit = { arable_land <=  61 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =   60 } } } }
			else_if	= { limit = { arable_land <=  71 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =   70 } } } }
			else_if	= { limit = { arable_land <=  81 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =   80 } } } }
			else_if	= { limit = { arable_land <=  91 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =   90 } } } }
			else_if	= { limit = { arable_land <=  101 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =  100 } } } }
			else_if	= { limit = { arable_land <=  201 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =  200 } } } }
			else_if	= { limit = { arable_land <=  301 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =  300 } } } }
			else_if	= { limit = { arable_land <=  401 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =  400 } } } }
			else_if	= { limit = { arable_land <=  501 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =  500 } } } }
			else_if	= { limit = { arable_land <=  601 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =  600 } } } }
			else_if	= { limit = { arable_land <=  701 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =  700 } } } }
			else_if	= { limit = { arable_land <=  801 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =  800 } } } }
			else_if	= { limit = { arable_land <=  901 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels =  900 } } } }
			else_if	= { limit = { arable_land <= 1001 }	create_building = { building = building_autarky_farm			add_ownership = { country = { country = scope:country_scope levels = 1000 } } } }
			if = {
				limit = { b:building_autarky_farm.level > var:old_level }	# Required to prevent division by zero errors
				set_variable = {
					name = temp_price
					value = {
						value		= b:building_autarky_farm.level
						subtract	= var:old_level
						multiply = {
							value	= construction_cost_low			# Building price in construction points
							divide	= 1000							# 1k/point in Millions
						}
						min			= 0
					}
				}
				ROOT = { change_variable = { name = loans_var add = PREV.var:temp_price } }
			}
			remove_variable = old_level
			remove_variable = temp_price
		}
	}
}
effect_instant_build_infres_autarky_ivr = {
	save_temporary_scope_as = country_scope
	every_country = {
		limit = {
			OR = {
				THIS = ROOT
				trigger_PREV_has_investment_rights = yes
			}
		}
		every_scope_state = {
			limit = { b:building_autarky_greenhouse.level < arable_land }
			set_variable = { name = old_level value = b:building_autarky_greenhouse.level }
			if		= { limit = { arable_land <=  11 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =   10 } } } }
			else_if	= { limit = { arable_land <=  21 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =   20 } } } }
			else_if	= { limit = { arable_land <=  31 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =   30 } } } }
			else_if	= { limit = { arable_land <=  41 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =   40 } } } }
			else_if	= { limit = { arable_land <=  51 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =   50 } } } }
			else_if	= { limit = { arable_land <=  61 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =   60 } } } }
			else_if	= { limit = { arable_land <=  71 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =   70 } } } }
			else_if	= { limit = { arable_land <=  81 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =   80 } } } }
			else_if	= { limit = { arable_land <=  91 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =   90 } } } }
			else_if	= { limit = { arable_land <=  101 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =  100 } } } }
			else_if	= { limit = { arable_land <=  201 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =  200 } } } }
			else_if	= { limit = { arable_land <=  301 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =  300 } } } }
			else_if	= { limit = { arable_land <=  401 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =  400 } } } }
			else_if	= { limit = { arable_land <=  501 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =  500 } } } }
			else_if	= { limit = { arable_land <=  601 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =  600 } } } }
			else_if	= { limit = { arable_land <=  701 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =  700 } } } }
			else_if	= { limit = { arable_land <=  801 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =  800 } } } }
			else_if	= { limit = { arable_land <=  901 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels =  900 } } } }
			else_if	= { limit = { arable_land <= 1001 }	create_building = { building = building_autarky_greenhouse	add_ownership = { country = { country = scope:country_scope levels = 1000 } } } }
			if = {
				limit = { b:building_autarky_greenhouse.level > var:old_level }	# Required to prevent division by zero errors
				set_variable = {
					name = temp_price
					value = {
						value		= b:building_autarky_greenhouse.level
						subtract	= var:old_level
						multiply = {
							value	= construction_cost_medium		# Building price in construction points
							divide	= 1000							# 1k/point in Millions
						}
						min			= 0
					}
				}
				ROOT = { change_variable = { name = loans_var add = PREV.var:temp_price } }
			}
			remove_variable = old_level
			remove_variable = temp_price
		}
	}
}
effect_instant_seed_plantations = {
	every_scope_state = {
		limit = {
			is_treaty_port = no
			NOT = { trigger_inhospitable_terrain = yes }
			trigger_if = { limit = { is_capital = no } NOT = { trigger_microstate = yes } }
		}
		effect_instant_seed_plantations_state = yes
	}
}
effect_instant_seed_plantations_state = {
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_autarky_greenhouse } } }
		create_building = { building = building_autarky_greenhouse level = 1 }
		ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 200 points x 1k/point in Millions
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_vineyard_greenhouse } } }
		create_building = { building = building_vineyard_greenhouse level = 1 }
		ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 200 points x 1k/point in Millions
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_coffee_greenhouse } } }
		create_building = { building = building_coffee_greenhouse level = 1 }
		ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 200 points x 1k/point in Millions
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_tea_greenhouse } } }
		create_building = { building = building_tea_greenhouse level = 1 }
		ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 200 points x 1k/point in Millions
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_sugar_greenhouse } }	OWNER = { OR = { THIS = c:BRZ any_primary_culture = { has_cultural_obsession = sugar } } } }
		create_building = { building = building_sugar_greenhouse level = 1 }
		ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 200 points x 1k/point in Millions
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_opium_greenhouse } }	OWNER = { NOT = { is_banning_goods = g:opium } } }
		create_building = { building = building_opium_greenhouse level = 1 }
		ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 200 points x 1k/point in Millions
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_tobacco_greenhouse } }	OWNER = { NOT = { is_banning_goods = g:tobacco } } }
		create_building = { building = building_tobacco_greenhouse level = 1 }
		ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 200 points x 1k/point in Millions
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_cotton_greenhouse } } }
		create_building = { building = building_cotton_greenhouse level = 1 }
		ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 200 points x 1k/point in Millions
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_dye_greenhouse } }		OWNER = { NOT = { has_technology_researched = aniline } } }
		create_building = { building = building_dye_greenhouse level = 1 }
		ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 200 points x 1k/point in Millions
	}
	if = {
		limit = { NOT = { any_scope_building = { is_building_type = building_silk_greenhouse } }		OWNER = { NOT = { has_technology_researched = art_silk } } }
		create_building = { building = building_silk_greenhouse level = 1 }
		ROOT = { change_variable = { name = loans_var add = 0.4 } }	# Every building costs 200 points x 1k/point in Millions
	}
}
effect_set_culture_scopes = {
	if = {
		limit = { any_primary_culture = { has_discrimination_trait = european_heritage } }
		ordered_primary_culture = { limit = { has_discrimination_trait = european_heritage }			position = 0 save_scope_as = european_culture		}
	}
	if = {
		limit = { any_primary_culture = { has_discrimination_trait = east_asian_heritage } }
		ordered_primary_culture = { limit = { has_discrimination_trait = east_asian_heritage }			position = 0 save_scope_as = east_asian_culture		}
	}
	if = {
		limit = { any_primary_culture = { has_discrimination_trait = north_asian_heritage } }
		ordered_primary_culture = { limit = { has_discrimination_trait = north_asian_heritage }			position = 0 save_scope_as = north_asian_culture	}
	}
	if = {
		limit = { any_primary_culture = { has_discrimination_trait = central_asian_heritage } }
		ordered_primary_culture = { limit = { has_discrimination_trait = central_asian_heritage }		position = 0 save_scope_as = central_asian_culture	}
	}
	if = {
		limit = { any_primary_culture = { has_discrimination_trait = south_asian_heritage } }
		ordered_primary_culture = { limit = { has_discrimination_trait = south_asian_heritage }			position = 0 save_scope_as = indian_culture			}
	}
	if = {
		limit = { any_primary_culture = { has_discrimination_trait = southeast_asian_heritage } }
		ordered_primary_culture = { limit = { has_discrimination_trait = southeast_asian_heritage }		position = 0 save_scope_as = sea_culture			}
	}
	if = {
		limit = { any_primary_culture = { has_discrimination_trait = african_heritage } }
		ordered_primary_culture = { limit = { has_discrimination_trait = african_heritage }				position = 0 save_scope_as = african_culture		}
	}
	if = {
		limit = { any_primary_culture = { has_discrimination_trait = middle_eastern_heritage } }
		ordered_primary_culture = { limit = { has_discrimination_trait = middle_eastern_heritage }		position = 0 save_scope_as = arab_culture			}
	}
	if = {
		limit = { any_primary_culture = { has_discrimination_trait = indigenous_oceanic_heritage } }
		ordered_primary_culture = { limit = { has_discrimination_trait = indigenous_oceanic_heritage }	position = 0 save_scope_as = pacific_culture		}
	}
	if = {
		limit = { any_primary_culture = { has_discrimination_trait = indigenous_american_heritage } }
		ordered_primary_culture = { limit = { has_discrimination_trait = indigenous_american_heritage }	position = 0 save_scope_as = american_culture		}
	}
}
effect_assimilate_pops = {
	effect_set_culture_scopes = yes
	if = {
		limit = { exists = scope:european_culture }
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE } has_discrimination_trait = european_heritage } }
			change_pop_culture = { target = scope:european_culture		value = 1.00 }
		}
	}
	if = {
		limit = { exists = scope:east_asian_culture }
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE } has_discrimination_trait = east_asian_heritage } }
			change_pop_culture = { target = scope:east_asian_culture	value = 1.00 }
		}
	}
	if = {
		limit = { exists = scope:north_asian_culture }
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE } has_discrimination_trait = north_asian_heritage } }
			change_pop_culture = { target = scope:north_asian_culture	value = 1.00 }
		}
	}
	if = {
		limit = { exists = scope:central_asian_culture }
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE } has_discrimination_trait = central_asian_heritage } }
			change_pop_culture = { target = scope:central_asian_culture	value = 1.00 }
		}
	}
	if = {
		limit = { exists = scope:indian_culture }
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE } has_discrimination_trait = south_asian_heritage } }
			change_pop_culture = { target = scope:indian_culture		value = 1.00 }
		}
	}
	else = {
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE THIS = cu:anglo_indian } has_discrimination_trait = south_asian_heritage } }
			change_pop_culture = { target = cu:anglo_indian				value = 1.00 }
		}
	}
	if = {
		limit = { exists = scope:sea_culture }
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE } has_discrimination_trait = southeast_asian_heritage } }
			change_pop_culture = { target = scope:sea_culture			value = 1.00 }
		}
	}
	if = {
		limit = { exists = scope:african_culture }
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE } has_discrimination_trait = african_heritage } }
			change_pop_culture = { target = scope:african_culture		value = 1.00 }
		}
	}
	else = {
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE THIS = cu:african } has_discrimination_trait = african_heritage } }
			change_pop_culture = { target = cu:african					value = 1.00 }
		}
	}
	if = {
		limit = { exists = scope:arab_culture }
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE } has_discrimination_trait = middle_eastern_heritage } }
			change_pop_culture = { target = scope:arab_culture			value = 1.00 }
		}
	}
	if = {
		limit = { exists = scope:pacific_culture }
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE } has_discrimination_trait = indigenous_oceanic_heritage } }
			change_pop_culture = { target = scope:pacific_culture		value = 1.00 }
		}
	}
	if = {
		limit = { exists = scope:american_culture }
		every_scope_pop = {
			limit = { culture = { NOR = { is_primary_culture_of = ROOT has_homeland = PREV.STATE } has_discrimination_trait = indigenous_american_heritage } }
			change_pop_culture = { target = scope:american_culture		value = 1.00 }
		}
	}
}
effect_purveyor_of_progres_railway = {
	save_temporary_scope_as = country_scope
	if = {
		limit = { has_company = company_type:company_great_indian_railway }
		every_state = {
			limit = {	# Delhi-Calcutta line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_WEST_BENGAL
					state_region = s:STATE_BIHAR
					state_region = s:STATE_AWADH
					state_region = s:STATE_AGRA
					state_region = s:STATE_DELHI
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { company = { type = company_great_indian_railway country = "scope:country_scope" levels = 1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
		every_state = {
			limit = {	# Allahabad-Bombay line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_AGRA
					state_region = s:STATE_BUNDELKHAND
					state_region = s:STATE_CENTRAL_PROVINCES
					state_region = s:STATE_MALWA
					state_region = s:STATE_BOMBAY
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { company = { type = company_great_indian_railway country = "scope:country_scope" levels = 1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
		every_state = {
			limit = {	# Bombay-Madras line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_BOMBAY
					state_region = s:STATE_HYDERABAD
					state_region = s:STATE_KURNOOL
					state_region = s:STATE_MADRAS
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { company = { type = company_great_indian_railway country = "scope:country_scope" levels = 1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
		every_state = {
			limit = {	# Gujarat-Bombay line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_BOMBAY
					state_region = s:STATE_GUJARAT
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { company = { type = company_great_indian_railway country = "scope:country_scope" levels = 1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
	}
	else_if = {
		limit = { can_establish_company = yes }
		add_company = company_type:company_great_indian_railway
		company:company_great_indian_railway = { set_company_state_region = s:STATE_BOMBAY }
		every_state = {
			limit = {	# Delhi-Calcutta line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_WEST_BENGAL
					state_region = s:STATE_BIHAR
					state_region = s:STATE_AWADH
					state_region = s:STATE_AGRA
					state_region = s:STATE_DELHI
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { company = { type = company_great_indian_railway country = "scope:country_scope" levels = 1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
		every_state = {
			limit = {	# Allahabad-Bombay line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_AGRA
					state_region = s:STATE_BUNDELKHAND
					state_region = s:STATE_CENTRAL_PROVINCES
					state_region = s:STATE_MALWA
					state_region = s:STATE_BOMBAY
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { company = { type = company_great_indian_railway country = "scope:country_scope" levels = 1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
		every_state = {
			limit = {	# Bombay-Madras line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_BOMBAY
					state_region = s:STATE_HYDERABAD
					state_region = s:STATE_KURNOOL
					state_region = s:STATE_MADRAS
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { company = { type = company_great_indian_railway country = "scope:country_scope" levels = 1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
		every_state = {
			limit = {	# Gujarat-Bombay line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_BOMBAY
					state_region = s:STATE_GUJARAT
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { company = { type = company_great_indian_railway country = "scope:country_scope" levels = 1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
	}
	else = {
		every_state = {
			limit = {	# Delhi-Calcutta line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_WEST_BENGAL
					state_region = s:STATE_BIHAR
					state_region = s:STATE_AWADH
					state_region = s:STATE_AGRA
					state_region = s:STATE_DELHI
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { country = { country = scope:country_scope levels =   1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
		every_state = {
			limit = {	# Allahabad-Bombay line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_AGRA
					state_region = s:STATE_BUNDELKHAND
					state_region = s:STATE_CENTRAL_PROVINCES
					state_region = s:STATE_MALWA
					state_region = s:STATE_BOMBAY
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { country = { country = scope:country_scope levels =   1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
		every_state = {
			limit = {	# Bombay-Madras line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_BOMBAY
					state_region = s:STATE_HYDERABAD
					state_region = s:STATE_KURNOOL
					state_region = s:STATE_MADRAS
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { country = { country = scope:country_scope levels =   1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
		every_state = {
			limit = {	# Gujarat-Bombay line
				NOT = { has_building = building_railway }
				OR = {
					state_region = s:STATE_BOMBAY
					state_region = s:STATE_GUJARAT
				}
			}
			create_building = { building = "building_railway" subsidized = yes add_ownership = { country = { country = scope:country_scope levels =   1 } } }
			scope:country_scope = { change_variable = { name = loans_var add = 0.8 } }	# Every building costs 800 points x 1k/point in Millions
		}
	}
}
# state_set_balances = {
    # if = {
		# limit = { OR = { sg:$GOODS$ = { market_goods_is_local = yes } is_isolated_from_market = yes } }
        # #for local goods state_goods_* return 0, so we have to work around this bug
        # #for isolated states state_goods_* also return 0
        # set_local_variable = { name = curr_goods_balance		value = var:$GOODS$_balance  }
        # set_local_variable = { name = curr_goods_consumed		value = var:$GOODS$_consumed }
        # set_local_variable = { name = curr_goods_produced		value = var:$GOODS$_produced }
    # }
	# else = {
        # set_local_variable = { name = curr_goods_balance		value = sg:$GOODS$.state_goods_delta }
        # set_local_variable = { name = curr_goods_consumed		value = sg:$GOODS$.state_goods_consumption }
        # set_local_variable = { name = curr_goods_produced		value = sg:$GOODS$.state_goods_production }
        # #for some reason state delta/production/consumption is only local, and in interface we need total value with market
        # change_local_variable = { name = curr_goods_balance		divide = state_market_access_total }
        # change_local_variable = { name = curr_goods_consumed	divide = state_market_access_total }
        # change_local_variable = { name = curr_goods_produced	divide = state_market_access_total }
    # }
    # balance_set_deltas_and_price = {
		# GOODS = $GOODS$
		# BALANCE = local_var:curr_goods_balance
		# BUY_ORDERS = local_var:curr_goods_consumed
		# SELL_ORDERS = local_var:curr_goods_produced
		# PROG_ADD_NOT_HIRING = market.var:prog_add_not_hiring
		# PROG_ADD_MOBILIZATION = market.var:prog_add_mobilization
	# }
# }