l_english:
 bg_military_industry: "Military Industry"
 bg_light_military_industry: "Light $bg_military_industry$"
 bg_heavy_military_industry: "Heavy $bg_military_industry$"

 company_edeka: "EDEKA"
 company_sovereign_wealth_fund: "Sovereign Wealth Fund"
 
 pm_simple_fertilizers: "Compost Fertilizer"
 pm_nitrogen_fixation_electricity: "$pm_nitrogen_fixation$ (Electrolysis)"
 pm_early_soda: "Potash Soda"
 
 pm_hardwood_tools: "$hardwood$ $tools$"
 pm_early_machine_tools: "Pneumatic Machine Tools"
 pm_machine_tools: "Electric Machine Tools"
 
 pm_telephones: "Telephone Production"
 pm_double_telephones: "Improved $pm_telephones$"
 pm_radios: "AM Radio Production"
 pm_double_radios: "FM Radio Production"
 
 pm_craftsman_sewing_priority: "Craftsman Sewing Priority"
 pm_elastics_priority: "Elastics Priority"

 pm_luxury_furniture_priority: "Luxury Furniture Priority"
 pm_precision_tools_priority: "Precision Tools Priority"

 pm_ceramics_priority: "Ceramics Priority"
 pm_bone_china_priority: "Bone China Priority"
 
 pm_basic_oxygen_process: "Basic Oxygen Process"
 pm_carbon_capture_steel_process: "Improved $pm_electric_arc_process$"
 
 pm_arc_welding_shipbuilding_green: "$pm_arc_welding_shipbuilding$ (Autark)"
 pm_military_shipbuilding_steam_2_green: "$pm_military_shipbuilding_steam_2$ (Autark)"
 
 pmg_secondary_charcoal: "Carbon Source"
 pmg_secondary_charcoal_oil: "$pmg_secondary_charcoal$"
 pm_no_charcoal: "No Charcoal"
 pm_charcoal: "Charcoal (Softwood)"
 pm_hardwood_coking: "Charcoal (Hardwood)"
 pm_secondary_basic_oxygen_process: "$pm_basic_oxygen_process$"
 pm_secondary_biofuel: "Biofuel"
 pm_secondary_carbon_capture: "Carbon Capture"
 pm_secondary_carbon_capture_oil: "$pm_secondary_carbon_capture$"
 
 pm_watertube_boiler_steam_engines: "Water-tube Boiler Steam Engines"
 pm_rotary_valve_engines: "Rotary Valve Steam Engines"
 pm_hybrid_electric_engines: "Diesel-Electric Engines"
 pm_jet_engines: "Jet Engines"
 pm_jet_electric_engines: "Electric Jet Engines"
 
 pm_automobile_production: "Petrol Automobiles"
 pm_electic_automobile_production: "Electric Automobiles"
 pm_diesel_automobile_production: "Diesel Automobiles"
 pm_automobile_priority: "Luxury Cars"
 
 pm_machine_pistols: "Machine Pistols"
 pm_blowback_loaders: "Blowback Loaders"
 
 pm_modern_aeroplane_production: "Modern Aeroplanes"
 pm_modern_tank_production: "Modern Tanks"
 
 pm_electric_derricks: "Electric Oil Derricks"
 
 pm_assembly_lines_building_paper_mills: "Assembly Lines"
 
 pm_double_dye_production: "Improved Dye Production"
 pm_parallel_rayon: "Parallel Rayon Production"
 pm_rayon_dye_focus: "Rayon Production with Dye focus"
 pm_rayon_silk_focus: "Rayon Production with Silk focus"
 
 pm_continous_bleached_paper: "Continously Bleached Paper"
 
 pmg_automation: "Automation"
 pm_watertube_boiler: "Water-tube Boiler"
 pm_rotary_valve_engine: "Rotary Valve Engine"
 pm_assembly_lines: "Assembly Lines"
 
 pmg_automation_building_synthetics_plants: "$pmg_automation$"
 pm_watertube_boiler_building_synthetics_plants: "$pm_watertube_boiler$"
 pm_rotary_valve_engine_building_synthetics_plants: "$pm_rotary_valve_engine$"
 pm_assembly_lines_building_synthetics_plants: "$pm_assembly_lines$"
 
 pmg_automation_building_chemical_plants: "$pmg_automation$"
 pm_watertube_boiler_building_chemical_plants: "$pm_watertube_boiler$"
 pm_rotary_valve_engine_building_chemical_plants: "$pm_rotary_valve_engine$"
 pm_assembly_lines_building_chemical_plants: "$pm_assembly_lines$"
 
 pm_watertube_boiler_building_arms_industry: "$pm_watertube_boiler$"
 pm_rotary_valve_engine_building_arms_industry: "$pm_rotary_valve_engine$"
 pm_assembly_lines_building_arms_industry: "$pm_assembly_lines$"
 
 pm_watertube_boiler_building_munition_plants: "$pm_watertube_boiler$"
 pm_rotary_valve_engine_building_munition_plants: "$pm_rotary_valve_engine$"
 pm_assembly_lines_building_munition_plants: "$pm_assembly_lines$"
 
 pmg_automation_building_war_machine_industry: "$pmg_automation$"
 pm_watertube_boiler_building_war_machine_industry: "$pm_watertube_boiler$"
 pm_rotary_valve_engine_building_war_machine_industry: "$pm_rotary_valve_engine$"
 pm_assembly_lines_building_war_machine_industry: "$pm_assembly_lines$"
 
 pmg_automation_building_shipyards: "$pmg_automation$"
 pm_watertube_boiler_building_shipyards: "$pm_watertube_boiler$"
 pm_rotary_valve_engine_building_shipyards: "$pm_rotary_valve_engine$"
 pm_assembly_lines_building_shipyards: "$pm_assembly_lines$"
 pm_assembly_lines_building_shipyards_green: "$pm_assembly_lines$ (Autark)"
 
 pm_assembly_lines_building_steel_mills: "$pm_assembly_lines$"
 
 pmg_explosives_building_mine: "Explosives"
 pm_nitroglycerin_building_mine: "Nitroglycerin"
 pm_dynamite_building_mine: "Dynamite"
 
 pm_rotary_valve_pump_building_mine: "Rotary Valve Engine Pump"
 pm_rotary_valve_pump_building_coal_mine: "$pm_rotary_valve_pump_building_mine$"
 pm_rotary_valve_pump_building_iron_mine: "$pm_rotary_valve_pump_building_mine$"
 pm_rotary_valve_pump_building_lead_mine: "$pm_rotary_valve_pump_building_mine$"
 pm_rotary_valve_pump_building_sulfur_mine: "$pm_rotary_valve_pump_building_mine$"
 pm_rotary_valve_pump_building_gold_mine: "$pm_rotary_valve_pump_building_mine$"
 
 pm_electric_pump_building_mine: "Electric Pump"
 pm_electric_pump_building_coal_mine: "$pm_electric_pump_building_mine$"
 pm_electric_pump_building_iron_mine: "$pm_electric_pump_building_mine$"
 pm_electric_pump_building_lead_mine: "$pm_electric_pump_building_mine$"
 pm_electric_pump_building_sulfur_mine: "$pm_electric_pump_building_mine$"
 pm_electric_pump_building_gold_mine: "$pm_electric_pump_building_mine$"
 
 pmg_ownership_mine: "$pmg_ownership$"
 pm_merchant_guilds_mine: "$pm_merchant_guilds$"
 pm_privately_owned_mine: "$pm_privately_owned$"
 pm_publicly_traded_mine: "$pm_publicly_traded$"
 pm_government_run_mine: "$pm_government_run$"
 pm_worker_cooperative_mine: "$pm_worker_cooperative$"
 
 modifier_traditional_patronage: "$pm_traditional_patronage$"
 modifier_bourgeoisie_patronage: "$pm_bourgeoisie_patronage$"
 modifier_independent_artists: "$pm_independent_artists$"
 
 TRIGGER_STATE_GOODS_PRICIER_THIRD: "[STATE_GOODS.GetGoods.GetName] in [STATE_GOODS.GetState.GetName] is $COMPARATOR$ #variable $NUM|%0v$#! more expensive than [concept_base_price]"
 TRIGGER_STATE_GOODS_PRICIER_THIRD_NOT: "[STATE_GOODS.GetGoods.GetName] in [STATE_GOODS.GetState.GetName] is #b not#! $COMPARATOR$ #variable $NUM|%0v$#! more expensive than [concept_base_price]"
 insufficient_convoys.tt: "[Building.GetOwner.GetName] has insufficient [concept_convoys]"
 top_overlord_insufficient_convoys.tt: "[Building.GetOwner.GetTopOverlord.GetName] has insufficient [concept_convoys]"
 overlord_insufficient_convoys.tt: "[Building.GetOwner.GetOverlord.GetName] has insufficient [concept_convoys]"
 market_owner_insufficient_convoys.tt: "[Building.GetState.GetMarket.GetOwner.GetName] has insufficient [concept_convoys]"
 
 option_gov: "([concept_treasury])"
 option_ivp: "([concept_investment_pool])"
 lag_warning: "@warning!#r BEWARE THE LAG! It is strongly recommended to pause the game before clicking this!#!"
 
 autarky_refund.tt: "The cost (@money!#variable [THIS.GetState.MakeScope.Var('autarky_refund').GetValue|k0]#!) will be refunded to the [concept_treasury] of [THIS.GetState.GetOwner.GetName]."
 autarky_refund_ivp.tt: "The cost (@money!#variable [THIS.GetState.MakeScope.Var('autarky_refund').GetValue|k0]#!) will be refunded to the [concept_investment_pool] of [THIS.GetState.GetOwner.GetName]."
 agro_refund.tt: "The cost (@money!#variable [THIS.GetState.MakeScope.Var('agro_refund').GetValue|k0]#!) will be refunded to the [concept_investment_pool] of [THIS.GetState.GetOwner.GetName]."
 plant_refund.tt: "The cost (@money!#variable [THIS.GetState.MakeScope.Var('plant_refund').GetValue|k0]#!) will be refunded to the [concept_investment_pool] of [THIS.GetState.GetOwner.GetName]."
 inf_plant_refund.tt: "The cost (@money!#variable [THIS.GetState.MakeScope.Var('inf_plant_refund').GetValue|k0]#!) will be refunded to the [concept_investment_pool] of [THIS.GetState.GetOwner.GetName]."
 ind_refund.tt: "The cost (@money!#variable [THIS.GetState.MakeScope.Var('ind_refund').GetValue|k0]#!) will be refunded to the [concept_investment_pool] of [THIS.GetState.GetOwner.GetName]."
 mil_refund.tt: "The cost (@money!#variable [THIS.GetState.MakeScope.Var('mil_refund').GetValue|k0]#!) will be refunded to the [concept_investment_pool] of [THIS.GetState.GetOwner.GetName]."
 ship_refund.tt: "The cost (@money!#variable [THIS.GetState.MakeScope.Var('ship_refund').GetValue|k0]#!) will be refunded to the [concept_investment_pool] of [THIS.GetState.GetOwner.GetName]."
 
 option_seed_autarky: "Seed [GetBuildingType('building_generic_subsistence').GetName] $option_gov$"
 option_seed_autarky_private: "Seed [GetBuildingType('building_generic_subsistence').GetName] $option_ivp$"
 option_seed_autarky_forced: "Force-build [GetBuildingType('building_generic_subsistence').GetName] $option_gov$"
 option_build_autarky: "Build [GetBuildingType('building_generic_subsistence').GetName] $option_gov$"
 option_build_autarky_private: "Build [GetBuildingType('building_generic_subsistence').GetName] $option_ivp$"
 
 option_seed_logging: "Seed [GetBuildingType('building_logging_camp').GetName] $option_gov$"
 option_seed_logging_private: "Seed [GetBuildingType('building_logging_camp').GetName] $option_ivp$"
 
 option_seed_construction: "Seed @construction![GetBuildingType('building_construction_sector').GetName]"
 option_seed_infrastructure: "Seed #yellow Infrastructure#!"
 option_build_construction: "Build @construction![GetBuildingType('building_construction_sector').GetName]"
 option_build_universities: "Build @innovation![GetBuildingType('building_university').GetName]"
 option_build_admins: "Build @bur![GetBuildingType('building_government_administration').GetName]"
 option_build_ports: "Build @convoys![GetBuildingType('building_port').GetName]"
 effect_build_infes_ports.tt: "A total of #variable [ROOT.GetCountry.MakeScope.Var('missing_inf_ports').GetValue|0]#! [GetBuildingType('building_infres_port').GetName] will be queued up to be built to fill the convoy capacity"
 option_build_railways: "Build [GetBuildingType('building_railway').GetName] $option_gov$"
 option_build_railways_private: "Build [GetBuildingType('building_railway').GetName] $option_ivp$"
 option_build_power: "Build [GetBuildingType('building_power_plant').GetName] $option_gov$"
 option_build_power_private: "Build [GetBuildingType('building_power_plant').GetName] $option_ivp$"
 
 option_seed_resources: "Seed #red Resources#! $option_gov$"
 option_seed_resources_private: "Seed #red Resources#! $option_ivp$"
 option_build_logging: "Build #red $bg_logging$#! $option_gov$"
 option_build_logging_private: "Build #red $bg_logging$#! $option_ivp$"
 option_build_fishing: "Build #blue $bg_fishing$#! $option_gov$"
 option_build_fishing_private: "Build #blue $bg_fishing$#! $option_ivp$"
 option_build_resources: "Build #red Resources#! $option_gov$"
 option_build_resources_private: "Build #red Resources#! $option_ivp$"
 
 effect_build_resources.tt: "Queue up resource buildings until you have enough of each to fully utilise them in each state. $lag_warning$"
 
 option_seed_industry: "Seed #gold Industry#! $option_gov$"
 option_seed_industry_private: "Seed #gold Industry#! $option_ivp$"
 option_build_industry: "Build #gold Industry#! (Economy of Scale) $option_gov$"
 option_build_industry_private: "Build #gold Industry#! (Economy of Scale) $option_ivp$"
 option_build_industry_05: "Build #gold Industry#! (5) $option_gov$"
 option_build_industry_private_05: "Build #gold Industry#! (5) $option_ivp$"
 option_build_industry_25: "Build #gold Industry#! (25) $option_gov$"
 option_build_industry_private_25: "Build #gold Industry#! (25) $option_ivp$"
 option_build_industry_50: "Build #gold Industry#! (50) $option_gov$"
 option_build_industry_private_50: "Build #gold Industry#! (50) $option_ivp$"
 
 effect_build_industry.tt: "Queue up industry until you have enough of each to fully utilise the economy of scale bonus in every incorporated state. $lag_warning$"
 effect_build_industry_05.tt: "Queue up industry until you have at least 5 of each in every incorporated state. $lag_warning$"
 effect_build_industry_25.tt: "Queue up industry until you have at least 25 of each in every incorporated state. $lag_warning$"
 effect_build_industry_50.tt: "Queue up industry until you have at least 50 of each in every incorporated state. $lag_warning$"
 
 option_seed_plantations: "Seed #green Plantations#! $option_gov$"
 option_seed_plantations_private: "Seed #green Plantations#! $option_ivp$"
 option_build_plantations: "Build #green Plantations#! (Economy of Scale) $option_gov$"
 option_build_plantations_private: "Build #green Plantations#! (Economy of Scale) $option_ivp$"
 option_build_plantations_05: "Build #green Plantations#! (5) $option_gov$"
 option_build_plantations_private_05: "Build #green Plantations#! (5) $option_ivp$"
 option_build_plantations_25: "Build #green Plantations#! (25) $option_gov$"
 option_build_plantations_private_25: "Build #green Plantations#! (25) $option_ivp$"
 option_build_plantations_50: "Build #green Plantations#! (50) $option_gov$"
 option_build_plantations_private_50: "Build #green Plantations#! (50) $option_ivp$"
 
 effect_build_plantations.tt: "Queue up plantations until you have enough of each to fully utilise the economy of scale bonus in every hospitable state. $lag_warning$"
 effect_build_plantations_05.tt: "Queue up plantations until you have at least 5 of each in every hospitable state. $lag_warning$"
 effect_build_plantations_25.tt: "Queue up plantations until you have at least 25 of each in every hospitable state. $lag_warning$"
 effect_build_plantations_50.tt: "Queue up plantations until you have at least 50 of each in every hospitable state. $lag_warning$"
 
 option_seed_inf_resources: "Seed #red Inf. Resources#! $option_gov$"
 option_seed_inf_resources_private: "Seed #red Inf. Resources#! $option_ivp$"
 option_build_inf_resources: "Build #red Inf. Resources#! (Economy of Scale)"
 option_build_inf_resources_25: "Build #red Inf. Resources#! (25)"
 option_build_inf_resources_50: "Build #red Inf. Resources#! (50)"
 
 effect_build_inf_resources.tt: "Queue up Inf. Resources until you have enough of each to fully utilise the economy of scale bonus in every state. @warning!#r BEWARE THE LAG! It is strongly recommended to pause the game before clicking this!#!"
 effect_build_inf_resources_25.tt: "Queue up Inf. Resources until you have at least 25 of each in every state. $lag_warning$"
 effect_build_inf_resources_50.tt: "Queue up Inf. Resources until you have at least 50 of each in every state. $lag_warning$"
 
 effect_tool_fertilizer_switch.tt: "Apply the Tool and Fertilizer switch to [THIS.GetCountry.GetName]"
 effect_remove_subject_var.tt: "Remove the Subject Vairable for [THIS.GetCountry.GetName] and reset their cosmetic tag"
 